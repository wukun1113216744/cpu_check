<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="806" onload="init(evt)" viewBox="0 0 1200 806" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="806.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="789" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="789" > </text>
<g id="frames">
<g >
<title>logand (73 samples, 1.22%)</title><rect x="1143.3" y="405" width="14.5" height="15.0" fill="rgb(230,217,10)" rx="2" ry="2" />
<text  x="1146.33" y="415.5" ></text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="86.9" y="709" width="0.2" height="15.0" fill="rgb(243,228,28)" rx="2" ry="2" />
<text  x="89.93" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (40 samples, 0.67%)</title><rect x="482.2" y="469" width="7.9" height="15.0" fill="rgb(226,4,37)" rx="2" ry="2" />
<text  x="485.24" y="479.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="489.8" y="341" width="0.1" height="15.0" fill="rgb(221,66,32)" rx="2" ry="2" />
<text  x="492.75" y="351.5" ></text>
</g>
<g >
<title>[sec_agent] (11 samples, 0.18%)</title><rect x="84.9" y="725" width="2.2" height="15.0" fill="rgb(250,174,19)" rx="2" ry="2" />
<text  x="87.95" y="735.5" ></text>
</g>
<g >
<title>[libc.so.6] (16 samples, 0.27%)</title><rect x="478.9" y="485" width="3.1" height="15.0" fill="rgb(234,130,21)" rx="2" ry="2" />
<text  x="481.88" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_enable (6 samples, 0.10%)</title><rect x="1126.3" y="565" width="1.2" height="15.0" fill="rgb(214,157,14)" rx="2" ry="2" />
<text  x="1129.32" y="575.5" ></text>
</g>
<g >
<title>~basic_string (1 samples, 0.02%)</title><rect x="89.1" y="597" width="0.2" height="15.0" fill="rgb(249,67,31)" rx="2" ry="2" />
<text  x="92.10" y="607.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="587.8" y="453" width="0.2" height="15.0" fill="rgb(216,116,38)" rx="2" ry="2" />
<text  x="590.84" y="463.5" ></text>
</g>
<g >
<title>jsY_iswhite (9 samples, 0.15%)</title><rect x="752.4" y="405" width="1.7" height="15.0" fill="rgb(244,205,42)" rx="2" ry="2" />
<text  x="755.37" y="415.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="704.1" y="501" width="0.2" height="15.0" fill="rgb(207,89,6)" rx="2" ry="2" />
<text  x="707.12" y="511.5" ></text>
</g>
<g >
<title>_Destroy&lt;std::basic_string&lt;char&gt;*, std::basic_string&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="589.6" y="517" width="0.2" height="15.0" fill="rgb(219,186,43)" rx="2" ry="2" />
<text  x="592.62" y="527.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.02%)</title><rect x="1188.8" y="405" width="0.2" height="15.0" fill="rgb(248,167,33)" rx="2" ry="2" />
<text  x="1191.81" y="415.5" ></text>
</g>
<g >
<title>nf_iterate (1 samples, 0.02%)</title><rect x="87.7" y="293" width="0.2" height="15.0" fill="rgb(231,81,2)" rx="2" ry="2" />
<text  x="90.72" y="303.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="640.2" y="597" width="0.2" height="15.0" fill="rgb(246,160,19)" rx="2" ry="2" />
<text  x="643.24" y="607.5" ></text>
</g>
<g >
<title>modsecurity::AnchoredSetVariable::unset (1 samples, 0.02%)</title><rect x="97.0" y="501" width="0.2" height="15.0" fill="rgb(227,117,18)" rx="2" ry="2" />
<text  x="100.01" y="511.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="88.9" y="405" width="0.2" height="15.0" fill="rgb(253,29,23)" rx="2" ry="2" />
<text  x="91.90" y="415.5" ></text>
</g>
<g >
<title>xmlXPathCompOpEval (1 samples, 0.02%)</title><rect x="899.9" y="565" width="0.2" height="15.0" fill="rgb(249,80,9)" rx="2" ry="2" />
<text  x="902.89" y="575.5" ></text>
</g>
<g >
<title>bitxor (194 samples, 3.25%)</title><rect x="709.7" y="373" width="38.3" height="15.0" fill="rgb(208,76,16)" rx="2" ry="2" />
<text  x="712.65" y="383.5" >bit..</text>
</g>
<g >
<title>__perf_event_task_sched_in (2 samples, 0.03%)</title><rect x="82.6" y="581" width="0.4" height="15.0" fill="rgb(254,30,3)" rx="2" ry="2" />
<text  x="85.58" y="591.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="481.8" y="437" width="0.2" height="15.0" fill="rgb(205,222,24)" rx="2" ry="2" />
<text  x="484.84" y="447.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (5 samples, 0.08%)</title><rect x="90.1" y="565" width="1.0" height="15.0" fill="rgb(235,71,6)" rx="2" ry="2" />
<text  x="93.09" y="575.5" ></text>
</g>
<g >
<title>ep_poll (3 samples, 0.05%)</title><rect x="703.9" y="517" width="0.6" height="15.0" fill="rgb(229,55,48)" rx="2" ry="2" />
<text  x="706.92" y="527.5" ></text>
</g>
<g >
<title>__alloc_pages_nodemask (3 samples, 0.05%)</title><rect x="429.0" y="277" width="0.6" height="15.0" fill="rgb(219,194,51)" rx="2" ry="2" />
<text  x="432.04" y="287.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (6 samples, 0.10%)</title><rect x="207.2" y="485" width="1.1" height="15.0" fill="rgb(250,143,29)" rx="2" ry="2" />
<text  x="210.16" y="495.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="96.8" y="421" width="0.2" height="15.0" fill="rgb(230,25,30)" rx="2" ry="2" />
<text  x="99.81" y="431.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="894.2" y="181" width="0.2" height="15.0" fill="rgb(222,152,4)" rx="2" ry="2" />
<text  x="897.16" y="191.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="89.1" y="565" width="0.2" height="15.0" fill="rgb(233,151,53)" rx="2" ry="2" />
<text  x="92.10" y="575.5" ></text>
</g>
<g >
<title>handleHttpRequest (307 samples, 5.14%)</title><rect x="1127.5" y="677" width="60.7" height="15.0" fill="rgb(227,220,6)" rx="2" ry="2" />
<text  x="1130.51" y="687.5" >handle..</text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="900.9" y="517" width="0.2" height="15.0" fill="rgb(241,206,11)" rx="2" ry="2" />
<text  x="903.88" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="207.0" y="389" width="0.2" height="15.0" fill="rgb(233,72,16)" rx="2" ry="2" />
<text  x="209.96" y="399.5" ></text>
</g>
<g >
<title>__shared_ptr&lt;std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="476.3" y="437" width="0.2" height="15.0" fill="rgb(207,141,7)" rx="2" ry="2" />
<text  x="479.30" y="447.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::NormalisePath::normalize_path_inplace (46 samples, 0.77%)</title><rect x="244.5" y="485" width="9.1" height="15.0" fill="rgb(212,74,31)" rx="2" ry="2" />
<text  x="247.54" y="495.5" ></text>
</g>
<g >
<title>remote_function (2 samples, 0.03%)</title><rect x="583.9" y="373" width="0.4" height="15.0" fill="rgb(207,59,15)" rx="2" ry="2" />
<text  x="586.88" y="383.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (6 samples, 0.10%)</title><rect x="939.6" y="581" width="1.2" height="15.0" fill="rgb(214,53,27)" rx="2" ry="2" />
<text  x="942.64" y="591.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="90.1" y="405" width="0.2" height="15.0" fill="rgb(208,146,37)" rx="2" ry="2" />
<text  x="93.09" y="415.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="87.1" y="533" width="0.2" height="15.0" fill="rgb(227,206,39)" rx="2" ry="2" />
<text  x="90.12" y="543.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckPHP (1 samples, 0.02%)</title><rect x="1125.7" y="629" width="0.2" height="15.0" fill="rgb(230,9,15)" rx="2" ry="2" />
<text  x="1128.73" y="639.5" ></text>
</g>
<g >
<title>std::string::size (20 samples, 0.34%)</title><rect x="472.3" y="453" width="4.0" height="15.0" fill="rgb(213,49,31)" rx="2" ry="2" />
<text  x="475.35" y="463.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (2 samples, 0.03%)</title><rect x="980.0" y="661" width="0.4" height="15.0" fill="rgb(235,25,9)" rx="2" ry="2" />
<text  x="982.98" y="671.5" ></text>
</g>
<g >
<title>bitand (164 samples, 2.75%)</title><rect x="820.2" y="373" width="32.4" height="15.0" fill="rgb(217,205,30)" rx="2" ry="2" />
<text  x="823.20" y="383.5" >bi..</text>
</g>
<g >
<title>modsecurity::Rule::obtainVariable (1,906 samples, 31.94%)</title><rect x="99.4" y="517" width="376.9" height="15.0" fill="rgb(231,216,11)" rx="2" ry="2" />
<text  x="102.38" y="527.5" >modsecurity::Rule::obtainVariable</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (4 samples, 0.07%)</title><rect x="304.3" y="405" width="0.7" height="15.0" fill="rgb(219,158,38)" rx="2" ry="2" />
<text  x="307.26" y="415.5" ></text>
</g>
<g >
<title>worker_function (10 samples, 0.17%)</title><rect x="83.0" y="709" width="1.9" height="15.0" fill="rgb(226,195,36)" rx="2" ry="2" />
<text  x="85.97" y="719.5" ></text>
</g>
<g >
<title>__x2apic_send_IPI_mask (1 samples, 0.02%)</title><rect x="1188.8" y="37" width="0.2" height="15.0" fill="rgb(252,227,19)" rx="2" ry="2" />
<text  x="1191.81" y="47.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="90.1" y="437" width="0.2" height="15.0" fill="rgb(210,96,18)" rx="2" ry="2" />
<text  x="93.09" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (6 samples, 0.10%)</title><rect x="207.2" y="469" width="1.1" height="15.0" fill="rgb(217,190,17)" rx="2" ry="2" />
<text  x="210.16" y="479.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="82.6" y="645" width="0.4" height="15.0" fill="rgb(229,92,47)" rx="2" ry="2" />
<text  x="85.58" y="655.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.02%)</title><rect x="87.7" y="437" width="0.2" height="15.0" fill="rgb(250,139,15)" rx="2" ry="2" />
<text  x="90.72" y="447.5" ></text>
</g>
<g >
<title>stat_attr_value_risk_char_func (2 samples, 0.03%)</title><rect x="979.4" y="485" width="0.4" height="15.0" fill="rgb(248,100,28)" rx="2" ry="2" />
<text  x="982.39" y="495.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckPHP (108 samples, 1.81%)</title><rect x="915.1" y="517" width="21.4" height="15.0" fill="rgb(208,171,6)" rx="2" ry="2" />
<text  x="918.12" y="527.5" >m..</text>
</g>
<g >
<title>jsU_isalpharune@plt (9 samples, 0.15%)</title><rect x="804.0" y="373" width="1.8" height="15.0" fill="rgb(218,16,6)" rx="2" ry="2" />
<text  x="806.98" y="383.5" ></text>
</g>
<g >
<title>~basic_string (1 samples, 0.02%)</title><rect x="589.6" y="453" width="0.2" height="15.0" fill="rgb(239,180,13)" rx="2" ry="2" />
<text  x="592.62" y="463.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (1 samples, 0.02%)</title><rect x="89.1" y="581" width="0.2" height="15.0" fill="rgb(252,15,5)" rx="2" ry="2" />
<text  x="92.10" y="591.5" ></text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="704.3" y="453" width="0.2" height="15.0" fill="rgb(254,65,3)" rx="2" ry="2" />
<text  x="707.32" y="463.5" ></text>
</g>
<g >
<title>jsU_isupperrune (75 samples, 1.26%)</title><rect x="879.5" y="373" width="14.9" height="15.0" fill="rgb(240,183,1)" rx="2" ry="2" />
<text  x="882.53" y="383.5" ></text>
</g>
<g >
<title>proc_pid_permission (1 samples, 0.02%)</title><rect x="91.3" y="453" width="0.2" height="15.0" fill="rgb(241,151,19)" rx="2" ry="2" />
<text  x="94.28" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="136.2" y="453" width="0.2" height="15.0" fill="rgb(231,42,16)" rx="2" ry="2" />
<text  x="139.17" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (24 samples, 0.40%)</title><rect x="287.1" y="437" width="4.7" height="15.0" fill="rgb(210,51,32)" rx="2" ry="2" />
<text  x="290.05" y="447.5" ></text>
</g>
<g >
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="705.1" y="709" width="0.4" height="15.0" fill="rgb(218,193,33)" rx="2" ry="2" />
<text  x="708.11" y="719.5" ></text>
</g>
<g >
<title>~VariableValue (3 samples, 0.05%)</title><rect x="88.5" y="597" width="0.6" height="15.0" fill="rgb(208,22,31)" rx="2" ry="2" />
<text  x="91.51" y="607.5" ></text>
</g>
<g >
<title>~_List_base (2 samples, 0.03%)</title><rect x="88.7" y="565" width="0.4" height="15.0" fill="rgb(222,219,24)" rx="2" ry="2" />
<text  x="91.71" y="575.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (1 samples, 0.02%)</title><rect x="904.6" y="565" width="0.2" height="15.0" fill="rgb(223,171,6)" rx="2" ry="2" />
<text  x="907.64" y="575.5" ></text>
</g>
<g >
<title>additive (158 samples, 2.65%)</title><rect x="821.4" y="309" width="31.2" height="15.0" fill="rgb(217,214,4)" rx="2" ry="2" />
<text  x="824.39" y="319.5" >ad..</text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.1" y="469" width="0.2" height="15.0" fill="rgb(221,227,38)" rx="2" ry="2" />
<text  x="93.09" y="479.5" ></text>
</g>
<g >
<title>handleHttpRequest (2 samples, 0.03%)</title><rect x="980.0" y="725" width="0.4" height="15.0" fill="rgb(232,153,18)" rx="2" ry="2" />
<text  x="982.98" y="735.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="243.5" y="453" width="0.2" height="15.0" fill="rgb(244,81,47)" rx="2" ry="2" />
<text  x="246.55" y="463.5" ></text>
</g>
<g >
<title>local_bh_enable (1 samples, 0.02%)</title><rect x="1188.8" y="453" width="0.2" height="15.0" fill="rgb(209,33,8)" rx="2" ry="2" />
<text  x="1191.81" y="463.5" ></text>
</g>
<g >
<title>_is_keywords (4 samples, 0.07%)</title><rect x="701.5" y="693" width="0.8" height="15.0" fill="rgb(235,94,42)" rx="2" ry="2" />
<text  x="704.55" y="703.5" ></text>
</g>
<g >
<title>x86_pmu_disable (1 samples, 0.02%)</title><rect x="85.1" y="517" width="0.2" height="15.0" fill="rgb(219,207,6)" rx="2" ry="2" />
<text  x="88.15" y="527.5" ></text>
</g>
<g >
<title>do_nanosleep (6 samples, 0.10%)</title><rect x="1126.3" y="661" width="1.2" height="15.0" fill="rgb(212,204,23)" rx="2" ry="2" />
<text  x="1129.32" y="671.5" ></text>
</g>
<g >
<title>nanosleep (7 samples, 0.12%)</title><rect x="1126.1" y="725" width="1.4" height="15.0" fill="rgb(245,211,1)" rx="2" ry="2" />
<text  x="1129.13" y="735.5" ></text>
</g>
<g >
<title>xmlXPathRunEval (1 samples, 0.02%)</title><rect x="899.9" y="581" width="0.2" height="15.0" fill="rgb(205,23,24)" rx="2" ry="2" />
<text  x="902.89" y="591.5" ></text>
</g>
<g >
<title>std::string::substr (49 samples, 0.82%)</title><rect x="419.9" y="485" width="9.7" height="15.0" fill="rgb(237,143,48)" rx="2" ry="2" />
<text  x="422.94" y="495.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="419.5" y="325" width="0.2" height="15.0" fill="rgb(217,222,39)" rx="2" ry="2" />
<text  x="422.55" y="335.5" ></text>
</g>
<g >
<title>xmlHashAddEntry3__internal_alias (1 samples, 0.02%)</title><rect x="84.8" y="469" width="0.1" height="15.0" fill="rgb(242,169,33)" rx="2" ry="2" />
<text  x="87.75" y="479.5" ></text>
</g>
<g >
<title>__normal_iterator (1 samples, 0.02%)</title><rect x="94.6" y="501" width="0.2" height="15.0" fill="rgb(253,129,37)" rx="2" ry="2" />
<text  x="97.64" y="511.5" ></text>
</g>
<g >
<title>event_process_active_single_queue.isra.31 (10 samples, 0.17%)</title><rect x="83.0" y="677" width="1.9" height="15.0" fill="rgb(218,47,5)" rx="2" ry="2" />
<text  x="85.97" y="687.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="878.5" y="341" width="0.2" height="15.0" fill="rgb(225,182,25)" rx="2" ry="2" />
<text  x="881.54" y="351.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="454.0" y="453" width="0.2" height="15.0" fill="rgb(218,220,20)" rx="2" ry="2" />
<text  x="456.96" y="463.5" ></text>
</g>
<g >
<title>scan_parser (12 samples, 0.20%)</title><rect x="949.5" y="501" width="2.4" height="15.0" fill="rgb(239,114,14)" rx="2" ry="2" />
<text  x="952.53" y="511.5" ></text>
</g>
<g >
<title>plugin_javascript_check (36 samples, 0.60%)</title><rect x="940.8" y="517" width="7.1" height="15.0" fill="rgb(218,122,25)" rx="2" ry="2" />
<text  x="943.83" y="527.5" ></text>
</g>
<g >
<title>new_str (1 samples, 0.02%)</title><rect x="940.8" y="485" width="0.2" height="15.0" fill="rgb(213,59,18)" rx="2" ry="2" />
<text  x="943.83" y="495.5" ></text>
</g>
<g >
<title>std::string::reserve (1 samples, 0.02%)</title><rect x="1188.8" y="725" width="0.2" height="15.0" fill="rgb(214,119,18)" rx="2" ry="2" />
<text  x="1191.81" y="735.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckJavaScript (36 samples, 0.60%)</title><rect x="940.8" y="533" width="7.1" height="15.0" fill="rgb(245,92,43)" rx="2" ry="2" />
<text  x="943.83" y="543.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="587.8" y="469" width="0.2" height="15.0" fill="rgb(240,41,3)" rx="2" ry="2" />
<text  x="590.84" y="479.5" ></text>
</g>
<g >
<title>evthread_posix_lock (1 samples, 0.02%)</title><rect x="704.7" y="565" width="0.2" height="15.0" fill="rgb(230,189,10)" rx="2" ry="2" />
<text  x="707.71" y="575.5" ></text>
</g>
<g >
<title>all (5,967 samples, 100%)</title><rect x="10.0" y="757" width="1180.0" height="15.0" fill="rgb(239,175,54)" rx="2" ry="2" />
<text  x="13.00" y="767.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="258.2" y="469" width="0.2" height="15.0" fill="rgb(225,217,14)" rx="2" ry="2" />
<text  x="261.18" y="479.5" ></text>
</g>
<g >
<title>_M_emplace_hint_unique&lt;const std::piecewise_construct_t&amp;, std::tuple&lt;long int const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="92.3" y="533" width="0.2" height="15.0" fill="rgb(243,0,51)" rx="2" ry="2" />
<text  x="95.27" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="1189.2" y="485" width="0.2" height="15.0" fill="rgb(246,184,38)" rx="2" ry="2" />
<text  x="1192.21" y="495.5" ></text>
</g>
<g >
<title>xmlBufCreateSize (1 samples, 0.02%)</title><rect x="83.8" y="501" width="0.2" height="15.0" fill="rgb(221,69,30)" rx="2" ry="2" />
<text  x="86.76" y="511.5" ></text>
</g>
<g >
<title>sock_aio_read.part.7 (1 samples, 0.02%)</title><rect x="87.5" y="613" width="0.2" height="15.0" fill="rgb(245,75,54)" rx="2" ry="2" />
<text  x="90.52" y="623.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="87.1" y="517" width="0.2" height="15.0" fill="rgb(216,12,9)" rx="2" ry="2" />
<text  x="90.12" y="527.5" ></text>
</g>
<g >
<title>check_sql (1 samples, 0.02%)</title><rect x="980.0" y="565" width="0.2" height="15.0" fill="rgb(218,205,10)" rx="2" ry="2" />
<text  x="982.98" y="575.5" ></text>
</g>
<g >
<title>__clone (2,539 samples, 42.55%)</title><rect x="87.9" y="725" width="502.1" height="15.0" fill="rgb(230,194,13)" rx="2" ry="2" />
<text  x="90.92" y="735.5" >__clone</text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="494.9" y="309" width="0.2" height="15.0" fill="rgb(227,98,53)" rx="2" ry="2" />
<text  x="497.89" y="319.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="88.1" y="421" width="0.2" height="15.0" fill="rgb(253,84,42)" rx="2" ry="2" />
<text  x="91.11" y="431.5" ></text>
</g>
<g >
<title>conditional (86 samples, 1.44%)</title><rect x="1140.8" y="437" width="17.0" height="15.0" fill="rgb(242,133,2)" rx="2" ry="2" />
<text  x="1143.76" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (4 samples, 0.07%)</title><rect x="304.3" y="389" width="0.7" height="15.0" fill="rgb(247,157,45)" rx="2" ry="2" />
<text  x="307.26" y="399.5" ></text>
</g>
<g >
<title>futex_wait (1 samples, 0.02%)</title><rect x="87.1" y="645" width="0.2" height="15.0" fill="rgb(228,1,43)" rx="2" ry="2" />
<text  x="90.12" y="655.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (1 samples, 0.02%)</title><rect x="82.4" y="661" width="0.2" height="15.0" fill="rgb(250,155,51)" rx="2" ry="2" />
<text  x="85.38" y="671.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="92.5" y="517" width="0.2" height="15.0" fill="rgb(208,139,17)" rx="2" ry="2" />
<text  x="95.46" y="527.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (17 samples, 0.28%)</title><rect x="260.8" y="453" width="3.3" height="15.0" fill="rgb(250,90,4)" rx="2" ry="2" />
<text  x="263.75" y="463.5" ></text>
</g>
<g >
<title>statement (388 samples, 6.50%)</title><rect x="820.2" y="501" width="76.7" height="15.0" fill="rgb(208,97,52)" rx="2" ry="2" />
<text  x="823.20" y="511.5" >statement</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="481.8" y="341" width="0.2" height="15.0" fill="rgb(210,190,43)" rx="2" ry="2" />
<text  x="484.84" y="351.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="83.2" y="437" width="0.2" height="15.0" fill="rgb(254,170,33)" rx="2" ry="2" />
<text  x="86.17" y="447.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (1 samples, 0.02%)</title><rect x="1189.0" y="517" width="0.2" height="15.0" fill="rgb(234,41,14)" rx="2" ry="2" />
<text  x="1192.01" y="527.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="90.1" y="309" width="0.2" height="15.0" fill="rgb(233,56,6)" rx="2" ry="2" />
<text  x="93.09" y="319.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (4 samples, 0.07%)</title><rect x="90.3" y="485" width="0.8" height="15.0" fill="rgb(215,191,25)" rx="2" ry="2" />
<text  x="93.29" y="495.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="481.8" y="357" width="0.2" height="15.0" fill="rgb(222,74,10)" rx="2" ry="2" />
<text  x="484.84" y="367.5" ></text>
</g>
<g >
<title>bitor (164 samples, 2.75%)</title><rect x="820.2" y="405" width="32.4" height="15.0" fill="rgb(228,176,0)" rx="2" ry="2" />
<text  x="823.20" y="415.5" >bi..</text>
</g>
<g >
<title>decode_ms_req_msg (205 samples, 3.44%)</title><rect x="939.4" y="693" width="40.6" height="15.0" fill="rgb(222,105,41)" rx="2" ry="2" />
<text  x="942.45" y="703.5" >dec..</text>
</g>
<g >
<title>postfix (136 samples, 2.28%)</title><rect x="825.7" y="261" width="26.9" height="15.0" fill="rgb(253,18,9)" rx="2" ry="2" />
<text  x="828.74" y="271.5" >p..</text>
</g>
<g >
<title>bitxor (164 samples, 2.75%)</title><rect x="820.2" y="389" width="32.4" height="15.0" fill="rgb(219,166,50)" rx="2" ry="2" />
<text  x="823.20" y="399.5" >bi..</text>
</g>
<g >
<title>jsY_lex (224 samples, 3.75%)</title><rect x="852.6" y="453" width="44.3" height="15.0" fill="rgb(231,17,26)" rx="2" ry="2" />
<text  x="855.63" y="463.5" >jsY_..</text>
</g>
<g >
<title>sys_futex (1 samples, 0.02%)</title><rect x="87.1" y="677" width="0.2" height="15.0" fill="rgb(245,185,32)" rx="2" ry="2" />
<text  x="90.12" y="687.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckJavaScript (21 samples, 0.35%)</title><rect x="907.2" y="517" width="4.2" height="15.0" fill="rgb(211,72,4)" rx="2" ry="2" />
<text  x="910.21" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="900.9" y="421" width="0.2" height="15.0" fill="rgb(213,53,20)" rx="2" ry="2" />
<text  x="903.88" y="431.5" ></text>
</g>
<g >
<title>perf_pmu_enable (1 samples, 0.02%)</title><rect x="900.9" y="437" width="0.2" height="15.0" fill="rgb(243,34,10)" rx="2" ry="2" />
<text  x="903.88" y="447.5" ></text>
</g>
<g >
<title>SYSC_accept4 (2 samples, 0.03%)</title><rect x="705.1" y="661" width="0.4" height="15.0" fill="rgb(253,229,23)" rx="2" ry="2" />
<text  x="708.11" y="671.5" ></text>
</g>
<g >
<title>_raw_spin_lock (1 samples, 0.02%)</title><rect x="640.2" y="565" width="0.2" height="15.0" fill="rgb(226,177,51)" rx="2" ry="2" />
<text  x="643.24" y="575.5" ></text>
</g>
<g >
<title>unary (144 samples, 2.41%)</title><rect x="824.2" y="277" width="28.4" height="15.0" fill="rgb(254,81,50)" rx="2" ry="2" />
<text  x="827.15" y="287.5" >un..</text>
</g>
<g >
<title>xmlXPathRegisterAllFunctions__internal_alias (2 samples, 0.03%)</title><rect x="585.7" y="485" width="0.4" height="15.0" fill="rgb(231,95,10)" rx="2" ry="2" />
<text  x="588.66" y="495.5" ></text>
</g>
<g >
<title>ep_poll (10 samples, 0.17%)</title><rect x="84.9" y="661" width="2.0" height="15.0" fill="rgb(246,228,13)" rx="2" ry="2" />
<text  x="87.95" y="671.5" ></text>
</g>
<g >
<title>sys_read (1 samples, 0.02%)</title><rect x="87.5" y="677" width="0.2" height="15.0" fill="rgb(217,67,16)" rx="2" ry="2" />
<text  x="90.52" y="687.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (984 samples, 16.49%)</title><rect x="705.5" y="661" width="194.6" height="15.0" fill="rgb(241,52,36)" rx="2" ry="2" />
<text  x="708.50" y="671.5" >modsecurity::Transaction:..</text>
</g>
<g >
<title>nf_hook_slow (1 samples, 0.02%)</title><rect x="87.7" y="309" width="0.2" height="15.0" fill="rgb(210,160,13)" rx="2" ry="2" />
<text  x="90.72" y="319.5" ></text>
</g>
<g >
<title>__kfree_skb (1 samples, 0.02%)</title><rect x="87.5" y="565" width="0.2" height="15.0" fill="rgb(215,122,32)" rx="2" ry="2" />
<text  x="90.52" y="575.5" ></text>
</g>
<g >
<title>copy&lt;std::move_iterator&lt;modsecurity::VariableValue**&gt;, modsecurity::VariableValue**&gt; (1 samples, 0.02%)</title><rect x="96.6" y="405" width="0.2" height="15.0" fill="rgb(230,208,21)" rx="2" ry="2" />
<text  x="99.62" y="415.5" ></text>
</g>
<g >
<title>lex_char_upon (50 samples, 0.84%)</title><rect x="688.1" y="693" width="9.9" height="15.0" fill="rgb(254,86,52)" rx="2" ry="2" />
<text  x="691.10" y="703.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.02%)</title><rect x="831.7" y="133" width="0.2" height="15.0" fill="rgb(243,130,27)" rx="2" ry="2" />
<text  x="834.67" y="143.5" ></text>
</g>
<g >
<title>system_call_fastpath (10 samples, 0.17%)</title><rect x="84.9" y="693" width="2.0" height="15.0" fill="rgb(229,45,15)" rx="2" ry="2" />
<text  x="87.95" y="703.5" ></text>
</g>
<g >
<title>script (240 samples, 4.02%)</title><rect x="1140.8" y="517" width="47.4" height="15.0" fill="rgb(222,31,13)" rx="2" ry="2" />
<text  x="1143.76" y="527.5" >script</text>
</g>
<g >
<title>jsY_isnewline (18 samples, 0.30%)</title><rect x="816.2" y="373" width="3.6" height="15.0" fill="rgb(206,4,47)" rx="2" ry="2" />
<text  x="819.24" y="383.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="87.7" y="661" width="0.2" height="15.0" fill="rgb(248,200,0)" rx="2" ry="2" />
<text  x="90.72" y="671.5" ></text>
</g>
<g >
<title>check_xss2 (141 samples, 2.36%)</title><rect x="951.9" y="501" width="27.9" height="15.0" fill="rgb(246,52,42)" rx="2" ry="2" />
<text  x="954.90" y="511.5" >c..</text>
</g>
<g >
<title>add_wait_queue (1 samples, 0.02%)</title><rect x="900.1" y="629" width="0.2" height="15.0" fill="rgb(227,183,33)" rx="2" ry="2" />
<text  x="903.09" y="639.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.05%)</title><rect x="419.2" y="469" width="0.5" height="15.0" fill="rgb(242,172,5)" rx="2" ry="2" />
<text  x="422.15" y="479.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="900.1" y="677" width="0.2" height="15.0" fill="rgb(224,120,48)" rx="2" ry="2" />
<text  x="903.09" y="687.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.03%)</title><rect x="1188.2" y="549" width="0.4" height="15.0" fill="rgb(216,11,1)" rx="2" ry="2" />
<text  x="1191.22" y="559.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.03%)</title><rect x="583.9" y="277" width="0.4" height="15.0" fill="rgb(240,95,22)" rx="2" ry="2" />
<text  x="586.88" y="287.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="936.3" y="469" width="0.2" height="15.0" fill="rgb(225,195,35)" rx="2" ry="2" />
<text  x="939.28" y="479.5" ></text>
</g>
<g >
<title>update_cfs_shares (1 samples, 0.02%)</title><rect x="1110.7" y="421" width="0.2" height="15.0" fill="rgb(245,17,42)" rx="2" ry="2" />
<text  x="1113.70" y="431.5" ></text>
</g>
<g >
<title>update_vsyscall (1 samples, 0.02%)</title><rect x="494.9" y="293" width="0.2" height="15.0" fill="rgb(212,165,22)" rx="2" ry="2" />
<text  x="497.89" y="303.5" ></text>
</g>
<g >
<title>phplex (1 samples, 0.02%)</title><rect x="1125.7" y="549" width="0.2" height="15.0" fill="rgb(224,61,44)" rx="2" ry="2" />
<text  x="1128.73" y="559.5" ></text>
</g>
<g >
<title>finish_task_switch (3 samples, 0.05%)</title><rect x="1189.4" y="581" width="0.6" height="15.0" fill="rgb(253,195,0)" rx="2" ry="2" />
<text  x="1192.41" y="591.5" ></text>
</g>
<g >
<title>jsY_isnewline (12 samples, 0.20%)</title><rect x="1185.5" y="373" width="2.3" height="15.0" fill="rgb(216,166,20)" rx="2" ry="2" />
<text  x="1188.45" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="84.8" y="421" width="0.1" height="15.0" fill="rgb(238,119,13)" rx="2" ry="2" />
<text  x="87.75" y="431.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (1 samples, 0.02%)</title><rect x="82.4" y="677" width="0.2" height="15.0" fill="rgb(208,130,31)" rx="2" ry="2" />
<text  x="85.38" y="687.5" ></text>
</g>
<g >
<title>std::vector&lt;modsecurity::VariableValue*, std::allocator&lt;modsecurity::VariableValue*&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="83.4" y="517" width="0.4" height="15.0" fill="rgb(228,146,33)" rx="2" ry="2" />
<text  x="86.37" y="527.5" ></text>
</g>
<g >
<title>xmlXPathCompPathExpr (1 samples, 0.02%)</title><rect x="939.2" y="389" width="0.2" height="15.0" fill="rgb(231,170,5)" rx="2" ry="2" />
<text  x="942.25" y="399.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="92.3" y="469" width="0.2" height="15.0" fill="rgb(227,162,1)" rx="2" ry="2" />
<text  x="95.27" y="479.5" ></text>
</g>
<g >
<title>ipt_do_table (1 samples, 0.02%)</title><rect x="87.7" y="261" width="0.2" height="15.0" fill="rgb(217,85,46)" rx="2" ry="2" />
<text  x="90.72" y="271.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="82.8" y="501" width="0.2" height="15.0" fill="rgb(220,119,18)" rx="2" ry="2" />
<text  x="85.77" y="511.5" ></text>
</g>
<g >
<title>~basic_string (2 samples, 0.03%)</title><rect x="589.2" y="549" width="0.4" height="15.0" fill="rgb(231,138,31)" rx="2" ry="2" />
<text  x="592.22" y="559.5" ></text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="258.2" y="389" width="0.2" height="15.0" fill="rgb(214,79,7)" rx="2" ry="2" />
<text  x="261.18" y="399.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="87.3" y="693" width="0.2" height="15.0" fill="rgb(227,118,21)" rx="2" ry="2" />
<text  x="90.32" y="703.5" ></text>
</g>
<g >
<title>unix_stream_sendmsg (1 samples, 0.02%)</title><rect x="1188.6" y="645" width="0.2" height="15.0" fill="rgb(209,38,1)" rx="2" ry="2" />
<text  x="1191.62" y="655.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="1110.5" y="501" width="0.4" height="15.0" fill="rgb(250,35,7)" rx="2" ry="2" />
<text  x="1113.50" y="511.5" ></text>
</g>
<g >
<title>jsY_next (18 samples, 0.30%)</title><rect x="743.1" y="133" width="3.5" height="15.0" fill="rgb(232,107,2)" rx="2" ry="2" />
<text  x="746.08" y="143.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (1 samples, 0.02%)</title><rect x="88.9" y="245" width="0.2" height="15.0" fill="rgb(208,53,32)" rx="2" ry="2" />
<text  x="91.90" y="255.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="84.2" y="453" width="0.2" height="15.0" fill="rgb(242,167,41)" rx="2" ry="2" />
<text  x="87.16" y="463.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="900.1" y="709" width="0.2" height="15.0" fill="rgb(234,104,8)" rx="2" ry="2" />
<text  x="903.09" y="719.5" ></text>
</g>
<g >
<title>assignment (164 samples, 2.75%)</title><rect x="820.2" y="469" width="32.4" height="15.0" fill="rgb(224,43,54)" rx="2" ry="2" />
<text  x="823.20" y="479.5" >as..</text>
</g>
<g >
<title>list_del (1 samples, 0.02%)</title><rect x="429.4" y="229" width="0.2" height="15.0" fill="rgb(220,113,32)" rx="2" ry="2" />
<text  x="432.44" y="239.5" ></text>
</g>
<g >
<title>jsU_bsearch (77 samples, 1.29%)</title><rect x="763.0" y="357" width="15.3" height="15.0" fill="rgb(213,130,18)" rx="2" ry="2" />
<text  x="766.05" y="367.5" ></text>
</g>
<g >
<title>decode_ms_req_msg (10 samples, 0.17%)</title><rect x="83.0" y="645" width="1.9" height="15.0" fill="rgb(223,227,46)" rx="2" ry="2" />
<text  x="85.97" y="655.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="82.6" y="613" width="0.4" height="15.0" fill="rgb(246,19,36)" rx="2" ry="2" />
<text  x="85.58" y="623.5" ></text>
</g>
<g >
<title>assignment (86 samples, 1.44%)</title><rect x="1140.8" y="453" width="17.0" height="15.0" fill="rgb(247,83,14)" rx="2" ry="2" />
<text  x="1143.76" y="463.5" ></text>
</g>
<g >
<title>xmlRMutexLock__internal_alias (1 samples, 0.02%)</title><rect x="585.5" y="453" width="0.2" height="15.0" fill="rgb(220,37,10)" rx="2" ry="2" />
<text  x="588.47" y="463.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="207.0" y="421" width="0.2" height="15.0" fill="rgb(234,52,18)" rx="2" ry="2" />
<text  x="209.96" y="431.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.03%)</title><rect x="583.9" y="293" width="0.4" height="15.0" fill="rgb(207,108,1)" rx="2" ry="2" />
<text  x="586.88" y="303.5" ></text>
</g>
<g >
<title>event_function (2 samples, 0.03%)</title><rect x="583.9" y="357" width="0.4" height="15.0" fill="rgb(232,58,6)" rx="2" ry="2" />
<text  x="586.88" y="367.5" ></text>
</g>
<g >
<title>jsU_bsearch (54 samples, 0.90%)</title><rect x="779.3" y="341" width="10.6" height="15.0" fill="rgb(227,182,7)" rx="2" ry="2" />
<text  x="782.26" y="351.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="640.2" y="661" width="0.2" height="15.0" fill="rgb(209,94,49)" rx="2" ry="2" />
<text  x="643.24" y="671.5" ></text>
</g>
<g >
<title>c_framework_init (8 samples, 0.13%)</title><rect x="703.5" y="613" width="1.6" height="15.0" fill="rgb(225,223,43)" rx="2" ry="2" />
<text  x="706.52" y="623.5" ></text>
</g>
<g >
<title>HandleSeRequestSpod (2,520 samples, 42.23%)</title><rect x="91.5" y="613" width="498.3" height="15.0" fill="rgb(210,72,49)" rx="2" ry="2" />
<text  x="94.47" y="623.5" >HandleSeRequestSpod</text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="87.7" y="709" width="0.2" height="15.0" fill="rgb(248,12,22)" rx="2" ry="2" />
<text  x="90.72" y="719.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.02%)</title><rect x="88.7" y="405" width="0.2" height="15.0" fill="rgb(228,219,46)" rx="2" ry="2" />
<text  x="91.71" y="415.5" ></text>
</g>
<g >
<title>native_write_msr_safe (2 samples, 0.03%)</title><rect x="1188.2" y="501" width="0.4" height="15.0" fill="rgb(223,58,2)" rx="2" ry="2" />
<text  x="1191.22" y="511.5" ></text>
</g>
<g >
<title>eventfd_write (1 samples, 0.02%)</title><rect x="86.9" y="645" width="0.2" height="15.0" fill="rgb(207,227,33)" rx="2" ry="2" />
<text  x="89.93" y="655.5" ></text>
</g>
<g >
<title>worker_function (2 samples, 0.03%)</title><rect x="1189.0" y="725" width="0.4" height="15.0" fill="rgb(224,120,0)" rx="2" ry="2" />
<text  x="1192.01" y="735.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckSQLi (1 samples, 0.02%)</title><rect x="980.0" y="597" width="0.2" height="15.0" fill="rgb(244,205,4)" rx="2" ry="2" />
<text  x="982.98" y="607.5" ></text>
</g>
<g >
<title>std::basic_ostringstream&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (7 samples, 0.12%)</title><rect x="587.8" y="549" width="1.4" height="15.0" fill="rgb(231,108,34)" rx="2" ry="2" />
<text  x="590.84" y="559.5" ></text>
</g>
<g >
<title>evmap_io_active_ (1 samples, 0.02%)</title><rect x="704.5" y="565" width="0.2" height="15.0" fill="rgb(212,112,18)" rx="2" ry="2" />
<text  x="707.51" y="575.5" ></text>
</g>
<g >
<title>jsY_lex (154 samples, 2.58%)</title><rect x="1157.8" y="437" width="30.4" height="15.0" fill="rgb(228,199,4)" rx="2" ry="2" />
<text  x="1160.77" y="447.5" >js..</text>
</g>
<g >
<title>script (579 samples, 9.70%)</title><rect x="705.7" y="517" width="114.5" height="15.0" fill="rgb(208,55,37)" rx="2" ry="2" />
<text  x="708.70" y="527.5" >script</text>
</g>
<g >
<title>do_futex (3 samples, 0.05%)</title><rect x="1189.4" y="661" width="0.6" height="15.0" fill="rgb(228,122,27)" rx="2" ry="2" />
<text  x="1192.41" y="671.5" ></text>
</g>
<g >
<title>free (1 samples, 0.02%)</title><rect x="589.6" y="421" width="0.2" height="15.0" fill="rgb(249,125,27)" rx="2" ry="2" />
<text  x="592.62" y="431.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (4 samples, 0.07%)</title><rect x="304.3" y="453" width="0.7" height="15.0" fill="rgb(243,81,39)" rx="2" ry="2" />
<text  x="307.26" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="894.2" y="261" width="0.2" height="15.0" fill="rgb(250,131,28)" rx="2" ry="2" />
<text  x="897.16" y="271.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (1 samples, 0.02%)</title><rect x="82.4" y="629" width="0.2" height="15.0" fill="rgb(226,115,10)" rx="2" ry="2" />
<text  x="85.38" y="639.5" ></text>
</g>
<g >
<title>process_frame_cb (307 samples, 5.14%)</title><rect x="1127.5" y="725" width="60.7" height="15.0" fill="rgb(238,134,53)" rx="2" ry="2" />
<text  x="1130.51" y="735.5" >proces..</text>
</g>
<g >
<title>tcp_poll (1 samples, 0.02%)</title><rect x="900.1" y="661" width="0.2" height="15.0" fill="rgb(208,111,33)" rx="2" ry="2" />
<text  x="903.09" y="671.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (1 samples, 0.02%)</title><rect x="583.7" y="229" width="0.2" height="15.0" fill="rgb(240,17,40)" rx="2" ry="2" />
<text  x="586.69" y="239.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (983 samples, 16.47%)</title><rect x="705.5" y="613" width="194.4" height="15.0" fill="rgb(246,37,9)" rx="2" ry="2" />
<text  x="708.50" y="623.5" >modsecurity::Rule::execut..</text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="904.6" y="485" width="0.2" height="15.0" fill="rgb(254,151,27)" rx="2" ry="2" />
<text  x="907.64" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="583.7" y="245" width="0.2" height="15.0" fill="rgb(210,139,37)" rx="2" ry="2" />
<text  x="586.69" y="255.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="83.8" y="485" width="0.2" height="15.0" fill="rgb(220,182,46)" rx="2" ry="2" />
<text  x="86.76" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_rep (8 samples, 0.13%)</title><rect x="259.2" y="453" width="1.6" height="15.0" fill="rgb(239,183,28)" rx="2" ry="2" />
<text  x="262.17" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.03%)</title><rect x="589.2" y="533" width="0.4" height="15.0" fill="rgb(250,90,15)" rx="2" ry="2" />
<text  x="592.22" y="543.5" ></text>
</g>
<g >
<title>task_ctx_sched_out (1 samples, 0.02%)</title><rect x="85.1" y="565" width="0.2" height="15.0" fill="rgb(246,172,19)" rx="2" ry="2" />
<text  x="88.15" y="575.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="597.1" y="629" width="0.2" height="15.0" fill="rgb(239,123,25)" rx="2" ry="2" />
<text  x="600.13" y="639.5" ></text>
</g>
<g >
<title>open64 (2 samples, 0.03%)</title><rect x="91.1" y="597" width="0.4" height="15.0" fill="rgb(210,17,10)" rx="2" ry="2" />
<text  x="94.08" y="607.5" ></text>
</g>
<g >
<title>xmlXPathEval__internal_alias (1 samples, 0.02%)</title><rect x="939.2" y="549" width="0.2" height="15.0" fill="rgb(207,107,19)" rx="2" ry="2" />
<text  x="942.25" y="559.5" ></text>
</g>
<g >
<title>fcntl (1 samples, 0.02%)</title><rect x="87.3" y="709" width="0.2" height="15.0" fill="rgb(205,158,9)" rx="2" ry="2" />
<text  x="90.32" y="719.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="1189.2" y="501" width="0.2" height="15.0" fill="rgb(243,15,21)" rx="2" ry="2" />
<text  x="1192.21" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="589.4" y="517" width="0.2" height="15.0" fill="rgb(249,3,19)" rx="2" ry="2" />
<text  x="592.42" y="527.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="900.9" y="485" width="0.2" height="15.0" fill="rgb(231,77,9)" rx="2" ry="2" />
<text  x="903.88" y="495.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="1188.8" y="597" width="0.2" height="15.0" fill="rgb(216,39,41)" rx="2" ry="2" />
<text  x="1191.81" y="607.5" ></text>
</g>
<g >
<title>do_futex (2 samples, 0.03%)</title><rect x="1188.2" y="677" width="0.4" height="15.0" fill="rgb(235,113,0)" rx="2" ry="2" />
<text  x="1191.22" y="687.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.02%)</title><rect x="831.7" y="165" width="0.2" height="15.0" fill="rgb(232,167,23)" rx="2" ry="2" />
<text  x="834.67" y="175.5" ></text>
</g>
<g >
<title>call_function_single_interrupt (2 samples, 0.03%)</title><rect x="583.9" y="437" width="0.4" height="15.0" fill="rgb(252,222,13)" rx="2" ry="2" />
<text  x="586.88" y="447.5" ></text>
</g>
<g >
<title>MscTransactionMgr::Create (5 samples, 0.08%)</title><rect x="91.5" y="581" width="1.0" height="15.0" fill="rgb(228,48,39)" rx="2" ry="2" />
<text  x="94.47" y="591.5" ></text>
</g>
<g >
<title>epoll_ctl (1 samples, 0.02%)</title><rect x="900.1" y="725" width="0.2" height="15.0" fill="rgb(241,0,17)" rx="2" ry="2" />
<text  x="903.09" y="735.5" ></text>
</g>
<g >
<title>jsU_isupperrune@plt (2 samples, 0.03%)</title><rect x="894.4" y="373" width="0.4" height="15.0" fill="rgb(244,220,16)" rx="2" ry="2" />
<text  x="897.36" y="383.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="640.2" y="581" width="0.2" height="15.0" fill="rgb(228,175,34)" rx="2" ry="2" />
<text  x="643.24" y="591.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="565" width="0.2" height="15.0" fill="rgb(254,192,38)" rx="2" ry="2" />
<text  x="92.69" y="575.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (2 samples, 0.03%)</title><rect x="1188.2" y="645" width="0.4" height="15.0" fill="rgb(228,119,37)" rx="2" ry="2" />
<text  x="1191.22" y="655.5" ></text>
</g>
<g >
<title>std::string::_M_data (2 samples, 0.03%)</title><rect x="475.9" y="421" width="0.4" height="15.0" fill="rgb(240,146,49)" rx="2" ry="2" />
<text  x="478.91" y="431.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (2 samples, 0.03%)</title><rect x="1189.0" y="613" width="0.4" height="15.0" fill="rgb(234,141,49)" rx="2" ry="2" />
<text  x="1192.01" y="623.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckOGNL (19 samples, 0.32%)</title><rect x="911.4" y="517" width="3.7" height="15.0" fill="rgb(216,129,49)" rx="2" ry="2" />
<text  x="914.36" y="527.5" ></text>
</g>
<g >
<title>std::string::operator+= (126 samples, 2.11%)</title><rect x="271.6" y="485" width="24.9" height="15.0" fill="rgb(224,4,23)" rx="2" ry="2" />
<text  x="274.63" y="495.5" >s..</text>
</g>
<g >
<title>[libstdc++.so.6.0.19] (18 samples, 0.30%)</title><rect x="87.9" y="693" width="3.6" height="15.0" fill="rgb(245,74,32)" rx="2" ry="2" />
<text  x="90.92" y="703.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckPHP (15 samples, 0.25%)</title><rect x="896.9" y="565" width="3.0" height="15.0" fill="rgb(242,174,19)" rx="2" ry="2" />
<text  x="899.93" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::~vector (1 samples, 0.02%)</title><rect x="589.6" y="533" width="0.2" height="15.0" fill="rgb(224,66,36)" rx="2" ry="2" />
<text  x="592.62" y="543.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.02%)</title><rect x="88.7" y="373" width="0.2" height="15.0" fill="rgb(254,76,37)" rx="2" ry="2" />
<text  x="91.71" y="383.5" ></text>
</g>
<g >
<title>_start (8 samples, 0.13%)</title><rect x="703.5" y="725" width="1.6" height="15.0" fill="rgb(218,116,51)" rx="2" ry="2" />
<text  x="706.52" y="735.5" ></text>
</g>
<g >
<title>std::string::operator[] (37 samples, 0.62%)</title><rect x="296.5" y="485" width="7.4" height="15.0" fill="rgb(217,12,6)" rx="2" ry="2" />
<text  x="299.55" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="489.8" y="405" width="0.1" height="15.0" fill="rgb(226,3,47)" rx="2" ry="2" />
<text  x="492.75" y="415.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (176 samples, 2.95%)</title><rect x="904.6" y="613" width="34.8" height="15.0" fill="rgb(251,212,14)" rx="2" ry="2" />
<text  x="907.64" y="623.5" >mo..</text>
</g>
<g >
<title>jsY_lex (85 samples, 1.42%)</title><rect x="835.4" y="181" width="16.8" height="15.0" fill="rgb(220,172,48)" rx="2" ry="2" />
<text  x="838.43" y="191.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="1110.5" y="517" width="0.4" height="15.0" fill="rgb(231,3,7)" rx="2" ry="2" />
<text  x="1113.50" y="527.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (6 samples, 0.10%)</title><rect x="588.0" y="469" width="1.2" height="15.0" fill="rgb(240,109,36)" rx="2" ry="2" />
<text  x="591.04" y="479.5" ></text>
</g>
<g >
<title>modsecurity::audit_log::AuditLog::isRelevant (1 samples, 0.02%)</title><rect x="88.1" y="613" width="0.2" height="15.0" fill="rgb(223,204,10)" rx="2" ry="2" />
<text  x="91.11" y="623.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="894.2" y="341" width="0.2" height="15.0" fill="rgb(254,198,30)" rx="2" ry="2" />
<text  x="897.16" y="351.5" ></text>
</g>
<g >
<title>x86_pmu_enable (16 samples, 0.27%)</title><rect x="901.1" y="549" width="3.1" height="15.0" fill="rgb(243,132,21)" rx="2" ry="2" />
<text  x="904.08" y="559.5" ></text>
</g>
<g >
<title>lookup_fast (1 samples, 0.02%)</title><rect x="91.1" y="485" width="0.2" height="15.0" fill="rgb(239,173,26)" rx="2" ry="2" />
<text  x="94.08" y="495.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="147.2" y="437" width="0.2" height="15.0" fill="rgb(239,9,12)" rx="2" ry="2" />
<text  x="150.24" y="447.5" ></text>
</g>
<g >
<title>xmlXPathEval__internal_alias (3 samples, 0.05%)</title><rect x="84.0" y="517" width="0.6" height="15.0" fill="rgb(223,146,26)" rx="2" ry="2" />
<text  x="86.96" y="527.5" ></text>
</g>
<g >
<title>xmlXPathNewNodeSet__internal_alias (1 samples, 0.02%)</title><rect x="899.9" y="469" width="0.2" height="15.0" fill="rgb(207,86,22)" rx="2" ry="2" />
<text  x="902.89" y="479.5" ></text>
</g>
<g >
<title>~VariableValue (5 samples, 0.08%)</title><rect x="586.8" y="517" width="1.0" height="15.0" fill="rgb(226,108,52)" rx="2" ry="2" />
<text  x="589.85" y="527.5" ></text>
</g>
<g >
<title>scriptelement (579 samples, 9.70%)</title><rect x="705.7" y="501" width="114.5" height="15.0" fill="rgb(216,28,2)" rx="2" ry="2" />
<text  x="708.70" y="511.5" >scriptelement</text>
</g>
<g >
<title>modsecurity::Rule::cleanMatchedVars (1 samples, 0.02%)</title><rect x="97.0" y="517" width="0.2" height="15.0" fill="rgb(226,38,23)" rx="2" ry="2" />
<text  x="100.01" y="527.5" ></text>
</g>
<g >
<title>xmlXPathEvalExpr__internal_alias (1 samples, 0.02%)</title><rect x="939.2" y="533" width="0.2" height="15.0" fill="rgb(209,196,16)" rx="2" ry="2" />
<text  x="942.25" y="543.5" ></text>
</g>
<g >
<title>handleHttpRequest (984 samples, 16.49%)</title><rect x="705.5" y="693" width="194.6" height="15.0" fill="rgb(211,114,14)" rx="2" ry="2" />
<text  x="708.50" y="703.5" >handleHttpRequest</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="494.9" y="373" width="0.2" height="15.0" fill="rgb(226,169,15)" rx="2" ry="2" />
<text  x="497.89" y="383.5" ></text>
</g>
<g >
<title>check_php_grammar (15 samples, 0.25%)</title><rect x="896.9" y="533" width="3.0" height="15.0" fill="rgb(234,220,2)" rx="2" ry="2" />
<text  x="899.93" y="543.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (6 samples, 0.10%)</title><rect x="1126.3" y="533" width="1.2" height="15.0" fill="rgb(251,108,41)" rx="2" ry="2" />
<text  x="1129.32" y="543.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="1110.3" y="501" width="0.2" height="15.0" fill="rgb(244,205,14)" rx="2" ry="2" />
<text  x="1113.31" y="511.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="88.9" y="229" width="0.2" height="15.0" fill="rgb(239,178,42)" rx="2" ry="2" />
<text  x="91.90" y="239.5" ></text>
</g>
<g >
<title>process_frame_cb (205 samples, 3.44%)</title><rect x="939.4" y="709" width="40.6" height="15.0" fill="rgb(219,59,12)" rx="2" ry="2" />
<text  x="942.45" y="719.5" >pro..</text>
</g>
<g >
<title>xmlXPathEval__internal_alias (1 samples, 0.02%)</title><rect x="899.9" y="597" width="0.2" height="15.0" fill="rgb(207,101,16)" rx="2" ry="2" />
<text  x="902.89" y="607.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="83.2" y="469" width="0.2" height="15.0" fill="rgb(251,170,54)" rx="2" ry="2" />
<text  x="86.17" y="479.5" ></text>
</g>
<g >
<title>write (1 samples, 0.02%)</title><rect x="1188.8" y="709" width="0.2" height="15.0" fill="rgb(229,109,40)" rx="2" ry="2" />
<text  x="1191.81" y="719.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.02%)</title><rect x="87.7" y="581" width="0.2" height="15.0" fill="rgb(226,80,30)" rx="2" ry="2" />
<text  x="90.72" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="894.2" y="325" width="0.2" height="15.0" fill="rgb(232,54,22)" rx="2" ry="2" />
<text  x="897.16" y="335.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processLogging (1 samples, 0.02%)</title><rect x="88.1" y="645" width="0.2" height="15.0" fill="rgb(249,131,10)" rx="2" ry="2" />
<text  x="91.11" y="655.5" ></text>
</g>
<g >
<title>xmlXPathRegisterFunc__internal_alias (2 samples, 0.03%)</title><rect x="585.7" y="469" width="0.4" height="15.0" fill="rgb(232,51,49)" rx="2" ry="2" />
<text  x="588.66" y="479.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="454.0" y="373" width="0.2" height="15.0" fill="rgb(232,107,51)" rx="2" ry="2" />
<text  x="456.96" y="383.5" ></text>
</g>
<g >
<title>bitand (182 samples, 3.05%)</title><rect x="710.6" y="357" width="36.0" height="15.0" fill="rgb(239,118,4)" rx="2" ry="2" />
<text  x="713.64" y="367.5" >bit..</text>
</g>
<g >
<title>sys_accept (2 samples, 0.03%)</title><rect x="705.1" y="693" width="0.4" height="15.0" fill="rgb(235,190,30)" rx="2" ry="2" />
<text  x="708.11" y="703.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="87.7" y="549" width="0.2" height="15.0" fill="rgb(214,77,27)" rx="2" ry="2" />
<text  x="90.72" y="559.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.02%)</title><rect x="699.2" y="629" width="0.2" height="15.0" fill="rgb(234,30,44)" rx="2" ry="2" />
<text  x="702.17" y="639.5" ></text>
</g>
<g >
<title>sock_poll (1 samples, 0.02%)</title><rect x="704.5" y="453" width="0.2" height="15.0" fill="rgb(229,22,23)" rx="2" ry="2" />
<text  x="707.51" y="463.5" ></text>
</g>
<g >
<title>plugin_ognl_check (8 samples, 0.13%)</title><rect x="947.9" y="517" width="1.6" height="15.0" fill="rgb(243,22,4)" rx="2" ry="2" />
<text  x="950.95" y="527.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (3 samples, 0.05%)</title><rect x="243.7" y="485" width="0.6" height="15.0" fill="rgb(251,128,47)" rx="2" ry="2" />
<text  x="246.75" y="495.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (2 samples, 0.03%)</title><rect x="89.5" y="581" width="0.4" height="15.0" fill="rgb(239,221,18)" rx="2" ry="2" />
<text  x="92.50" y="591.5" ></text>
</g>
<g >
<title>pcre_exec (1 samples, 0.02%)</title><rect x="939.4" y="517" width="0.2" height="15.0" fill="rgb(217,115,9)" rx="2" ry="2" />
<text  x="942.45" y="527.5" ></text>
</g>
<g >
<title>do_async_page_fault (1 samples, 0.02%)</title><rect x="489.9" y="437" width="0.2" height="15.0" fill="rgb(244,67,23)" rx="2" ry="2" />
<text  x="492.95" y="447.5" ></text>
</g>
<g >
<title>std::string::substr (1 samples, 0.02%)</title><rect x="303.9" y="485" width="0.2" height="15.0" fill="rgb(220,196,49)" rx="2" ry="2" />
<text  x="306.86" y="495.5" ></text>
</g>
<g >
<title>jsU_bsearch (60 samples, 1.01%)</title><rect x="866.9" y="357" width="11.8" height="15.0" fill="rgb(231,53,54)" rx="2" ry="2" />
<text  x="869.87" y="367.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (5 samples, 0.08%)</title><rect x="468.2" y="437" width="1.0" height="15.0" fill="rgb(217,10,54)" rx="2" ry="2" />
<text  x="471.20" y="447.5" ></text>
</g>
<g >
<title>event_process_active_single_queue.isra.31 (2 samples, 0.03%)</title><rect x="1189.0" y="693" width="0.4" height="15.0" fill="rgb(243,118,8)" rx="2" ry="2" />
<text  x="1192.01" y="703.5" ></text>
</g>
<g >
<title>std::string::substr (1 samples, 0.02%)</title><rect x="904.6" y="517" width="0.2" height="15.0" fill="rgb(211,25,14)" rx="2" ry="2" />
<text  x="907.64" y="527.5" ></text>
</g>
<g >
<title>handleHttpRequestHeader (1 samples, 0.02%)</title><rect x="589.6" y="581" width="0.2" height="15.0" fill="rgb(253,226,4)" rx="2" ry="2" />
<text  x="592.62" y="591.5" ></text>
</g>
<g >
<title>xmlXPathCompAndExpr (1 samples, 0.02%)</title><rect x="939.2" y="501" width="0.2" height="15.0" fill="rgb(245,112,13)" rx="2" ry="2" />
<text  x="942.25" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;modsecurity::VariableValue*&gt;::allocate (1 samples, 0.02%)</title><rect x="96.8" y="453" width="0.2" height="15.0" fill="rgb(241,30,41)" rx="2" ry="2" />
<text  x="99.81" y="463.5" ></text>
</g>
<g >
<title>handleHttpRequest (2 samples, 0.03%)</title><rect x="1189.0" y="629" width="0.4" height="15.0" fill="rgb(223,139,12)" rx="2" ry="2" />
<text  x="1192.01" y="639.5" ></text>
</g>
<g >
<title>MscCounter::MemGetIncRSSMB (2 samples, 0.03%)</title><rect x="91.1" y="661" width="0.4" height="15.0" fill="rgb(230,196,11)" rx="2" ry="2" />
<text  x="94.08" y="671.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="87.7" y="693" width="0.2" height="15.0" fill="rgb(213,38,24)" rx="2" ry="2" />
<text  x="90.72" y="703.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="533" width="0.2" height="15.0" fill="rgb(210,91,20)" rx="2" ry="2" />
<text  x="92.69" y="543.5" ></text>
</g>
<g >
<title>plugin_php_webshell_check (1 samples, 0.02%)</title><rect x="1125.7" y="613" width="0.2" height="15.0" fill="rgb(229,180,51)" rx="2" ry="2" />
<text  x="1128.73" y="623.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="135.8" y="373" width="0.4" height="15.0" fill="rgb(254,40,3)" rx="2" ry="2" />
<text  x="138.77" y="383.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (20 samples, 0.34%)</title><rect x="900.7" y="661" width="3.9" height="15.0" fill="rgb(245,129,39)" rx="2" ry="2" />
<text  x="903.69" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="597.1" y="661" width="0.2" height="15.0" fill="rgb(213,165,25)" rx="2" ry="2" />
<text  x="600.13" y="671.5" ></text>
</g>
<g >
<title>xmlHashComputeKey (2 samples, 0.03%)</title><rect x="585.7" y="437" width="0.4" height="15.0" fill="rgb(226,152,34)" rx="2" ry="2" />
<text  x="588.66" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="84.4" y="469" width="0.2" height="15.0" fill="rgb(248,125,25)" rx="2" ry="2" />
<text  x="87.36" y="479.5" ></text>
</g>
<g >
<title>xmlXPathFreeContext__internal_alias (2 samples, 0.03%)</title><rect x="584.5" y="501" width="0.4" height="15.0" fill="rgb(233,170,46)" rx="2" ry="2" />
<text  x="587.48" y="511.5" ></text>
</g>
<g >
<title>jsY_isidentifierstart (11 samples, 0.18%)</title><rect x="1170.8" y="389" width="2.2" height="15.0" fill="rgb(236,32,54)" rx="2" ry="2" />
<text  x="1173.82" y="399.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (1 samples, 0.02%)</title><rect x="83.0" y="533" width="0.2" height="15.0" fill="rgb(211,33,34)" rx="2" ry="2" />
<text  x="85.97" y="543.5" ></text>
</g>
<g >
<title>kvm_guest_apic_eoi_write (1 samples, 0.02%)</title><rect x="1110.3" y="533" width="0.2" height="15.0" fill="rgb(234,165,53)" rx="2" ry="2" />
<text  x="1113.31" y="543.5" ></text>
</g>
<g >
<title>xmlFreeNodeList__internal_alias (1 samples, 0.02%)</title><rect x="88.3" y="533" width="0.2" height="15.0" fill="rgb(226,171,6)" rx="2" ry="2" />
<text  x="91.31" y="543.5" ></text>
</g>
<g >
<title>callexp (90 samples, 1.51%)</title><rect x="728.8" y="229" width="17.8" height="15.0" fill="rgb(220,90,16)" rx="2" ry="2" />
<text  x="731.84" y="239.5" ></text>
</g>
<g >
<title>jsU_isalpharune@plt (11 samples, 0.18%)</title><rect x="894.8" y="389" width="2.1" height="15.0" fill="rgb(243,6,48)" rx="2" ry="2" />
<text  x="897.75" y="399.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.03%)</title><rect x="82.6" y="661" width="0.4" height="15.0" fill="rgb(221,128,2)" rx="2" ry="2" />
<text  x="85.58" y="671.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::JsDecode::evaluate (183 samples, 3.07%)</title><rect x="208.3" y="501" width="36.2" height="15.0" fill="rgb(216,106,9)" rx="2" ry="2" />
<text  x="211.35" y="511.5" >mod..</text>
</g>
<g >
<title>pid_revalidate (1 samples, 0.02%)</title><rect x="91.1" y="469" width="0.2" height="15.0" fill="rgb(240,39,42)" rx="2" ry="2" />
<text  x="94.08" y="479.5" ></text>
</g>
<g >
<title>elparse (1 samples, 0.02%)</title><rect x="1125.9" y="581" width="0.2" height="15.0" fill="rgb(234,2,21)" rx="2" ry="2" />
<text  x="1128.93" y="591.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (1 samples, 0.02%)</title><rect x="900.9" y="389" width="0.2" height="15.0" fill="rgb(247,22,33)" rx="2" ry="2" />
<text  x="903.88" y="399.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.02%)</title><rect x="88.7" y="389" width="0.2" height="15.0" fill="rgb(247,126,54)" rx="2" ry="2" />
<text  x="91.71" y="399.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (1 samples, 0.02%)</title><rect x="980.0" y="613" width="0.2" height="15.0" fill="rgb(207,130,30)" rx="2" ry="2" />
<text  x="982.98" y="623.5" ></text>
</g>
<g >
<title>xmlXPathRegisteredFuncsCleanup__internal_alias (2 samples, 0.03%)</title><rect x="584.5" y="485" width="0.4" height="15.0" fill="rgb(253,177,26)" rx="2" ry="2" />
<text  x="587.48" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="90.1" y="421" width="0.2" height="15.0" fill="rgb(254,151,29)" rx="2" ry="2" />
<text  x="93.09" y="431.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckOGNL (8 samples, 0.13%)</title><rect x="947.9" y="533" width="1.6" height="15.0" fill="rgb(241,66,20)" rx="2" ry="2" />
<text  x="950.95" y="543.5" ></text>
</g>
<g >
<title>event_process_active_single_queue.isra.31 (176 samples, 2.95%)</title><rect x="904.6" y="709" width="34.8" height="15.0" fill="rgb(221,80,4)" rx="2" ry="2" />
<text  x="907.64" y="719.5" >ev..</text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="419.4" y="421" width="0.3" height="15.0" fill="rgb(225,167,33)" rx="2" ry="2" />
<text  x="422.35" y="431.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="243.5" y="389" width="0.2" height="15.0" fill="rgb(254,30,29)" rx="2" ry="2" />
<text  x="246.55" y="399.5" ></text>
</g>
<g >
<title>__wake_up_locked (1 samples, 0.02%)</title><rect x="1188.8" y="133" width="0.2" height="15.0" fill="rgb(230,225,23)" rx="2" ry="2" />
<text  x="1191.81" y="143.5" ></text>
</g>
<g >
<title>finish_task_switch (4 samples, 0.07%)</title><rect x="90.3" y="501" width="0.8" height="15.0" fill="rgb(206,126,31)" rx="2" ry="2" />
<text  x="93.29" y="511.5" ></text>
</g>
<g >
<title>modsecurity::audit_log::AuditLog::saveIfRelevant (1 samples, 0.02%)</title><rect x="88.1" y="629" width="0.2" height="15.0" fill="rgb(223,61,26)" rx="2" ry="2" />
<text  x="91.11" y="639.5" ></text>
</g>
<g >
<title>additive (131 samples, 2.20%)</title><rect x="720.7" y="293" width="25.9" height="15.0" fill="rgb(239,51,4)" rx="2" ry="2" />
<text  x="723.73" y="303.5" >a..</text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="583.5" y="437" width="0.4" height="15.0" fill="rgb(209,196,40)" rx="2" ry="2" />
<text  x="586.49" y="447.5" ></text>
</g>
<g >
<title>schedule (6 samples, 0.10%)</title><rect x="1126.3" y="645" width="1.2" height="15.0" fill="rgb(211,156,54)" rx="2" ry="2" />
<text  x="1129.32" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="96.2" y="517" width="0.2" height="15.0" fill="rgb(218,129,18)" rx="2" ry="2" />
<text  x="99.22" y="527.5" ></text>
</g>
<g >
<title>read_frame_cb (1 samples, 0.02%)</title><rect x="589.8" y="645" width="0.2" height="15.0" fill="rgb(254,118,47)" rx="2" ry="2" />
<text  x="592.82" y="655.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="243.5" y="357" width="0.2" height="15.0" fill="rgb(243,69,43)" rx="2" ry="2" />
<text  x="246.55" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.05%)</title><rect x="1189.4" y="709" width="0.6" height="15.0" fill="rgb(249,12,25)" rx="2" ry="2" />
<text  x="1192.41" y="719.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="583.7" y="325" width="0.2" height="15.0" fill="rgb(223,10,16)" rx="2" ry="2" />
<text  x="586.69" y="335.5" ></text>
</g>
<g >
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="1188.2" y="709" width="0.4" height="15.0" fill="rgb(221,44,38)" rx="2" ry="2" />
<text  x="1191.22" y="719.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="583.7" y="293" width="0.2" height="15.0" fill="rgb(254,136,5)" rx="2" ry="2" />
<text  x="586.69" y="303.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="207.0" y="453" width="0.2" height="15.0" fill="rgb(241,199,46)" rx="2" ry="2" />
<text  x="209.96" y="463.5" ></text>
</g>
<g >
<title>std::vector&lt;modsecurity::VariableValue*, std::allocator&lt;modsecurity::VariableValue*&gt; &gt;::_M_emplace_back_aux&lt;modsecurity::VariableValue* const&amp;&gt; (2 samples, 0.03%)</title><rect x="96.6" y="485" width="0.4" height="15.0" fill="rgb(228,226,38)" rx="2" ry="2" />
<text  x="99.62" y="495.5" ></text>
</g>
<g >
<title>std::string::_M_copy (48 samples, 0.80%)</title><rect x="420.1" y="421" width="9.5" height="15.0" fill="rgb(250,85,52)" rx="2" ry="2" />
<text  x="423.14" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (1 samples, 0.02%)</title><rect x="587.8" y="501" width="0.2" height="15.0" fill="rgb(232,189,49)" rx="2" ry="2" />
<text  x="590.84" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="583.7" y="421" width="0.2" height="15.0" fill="rgb(239,127,50)" rx="2" ry="2" />
<text  x="586.69" y="431.5" ></text>
</g>
<g >
<title>std::string::_M_rep (28 samples, 0.47%)</title><rect x="141.5" y="453" width="5.5" height="15.0" fill="rgb(217,72,54)" rx="2" ry="2" />
<text  x="144.51" y="463.5" ></text>
</g>
<g >
<title>plugin_sqli2_check (1 samples, 0.02%)</title><rect x="82.4" y="565" width="0.2" height="15.0" fill="rgb(247,114,32)" rx="2" ry="2" />
<text  x="85.38" y="575.5" ></text>
</g>
<g >
<title>xmlFreeNodeList__internal_alias (1 samples, 0.02%)</title><rect x="88.3" y="565" width="0.2" height="15.0" fill="rgb(212,86,40)" rx="2" ry="2" />
<text  x="91.31" y="575.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="87.7" y="485" width="0.2" height="15.0" fill="rgb(243,13,27)" rx="2" ry="2" />
<text  x="90.72" y="495.5" ></text>
</g>
<g >
<title>x86_pmu_enable (4 samples, 0.07%)</title><rect x="90.3" y="453" width="0.8" height="15.0" fill="rgb(215,107,38)" rx="2" ry="2" />
<text  x="93.29" y="463.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckSpringEl (12 samples, 0.20%)</title><rect x="949.5" y="533" width="2.4" height="15.0" fill="rgb(222,85,29)" rx="2" ry="2" />
<text  x="952.53" y="543.5" ></text>
</g>
<g >
<title>sock_aio_write (1 samples, 0.02%)</title><rect x="1188.8" y="629" width="0.2" height="15.0" fill="rgb(242,176,19)" rx="2" ry="2" />
<text  x="1191.81" y="639.5" ></text>
</g>
<g >
<title>jsY_isnewline (1 samples, 0.02%)</title><rect x="746.2" y="117" width="0.2" height="15.0" fill="rgb(231,114,31)" rx="2" ry="2" />
<text  x="749.24" y="127.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (1 samples, 0.02%)</title><rect x="1188.8" y="533" width="0.2" height="15.0" fill="rgb(247,226,5)" rx="2" ry="2" />
<text  x="1191.81" y="543.5" ></text>
</g>
<g >
<title>logor (86 samples, 1.44%)</title><rect x="1140.8" y="421" width="17.0" height="15.0" fill="rgb(243,189,30)" rx="2" ry="2" />
<text  x="1143.76" y="431.5" ></text>
</g>
<g >
<title>__exchange_and_add_dispatch (2 samples, 0.03%)</title><rect x="586.1" y="437" width="0.4" height="15.0" fill="rgb(244,185,5)" rx="2" ry="2" />
<text  x="589.06" y="447.5" ></text>
</g>
<g >
<title>_check_sql (574 samples, 9.62%)</title><rect x="590.0" y="725" width="113.5" height="15.0" fill="rgb(248,122,52)" rx="2" ry="2" />
<text  x="593.01" y="735.5" >_check_sql</text>
</g>
<g >
<title>xmlStrlen__internal_alias (451 samples, 7.56%)</title><rect x="495.1" y="453" width="89.2" height="15.0" fill="rgb(223,80,29)" rx="2" ry="2" />
<text  x="498.09" y="463.5" >xmlStrlen_..</text>
</g>
<g >
<title>xmlXPathCompEqualityExpr (1 samples, 0.02%)</title><rect x="939.2" y="485" width="0.2" height="15.0" fill="rgb(252,142,18)" rx="2" ry="2" />
<text  x="942.25" y="495.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (6 samples, 0.10%)</title><rect x="85.3" y="501" width="1.2" height="15.0" fill="rgb(219,74,20)" rx="2" ry="2" />
<text  x="88.34" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="88.3" y="517" width="0.2" height="15.0" fill="rgb(225,86,42)" rx="2" ry="2" />
<text  x="91.31" y="527.5" ></text>
</g>
<g >
<title>ip_rcv_finish (1 samples, 0.02%)</title><rect x="1188.8" y="309" width="0.2" height="15.0" fill="rgb(228,33,29)" rx="2" ry="2" />
<text  x="1191.81" y="319.5" ></text>
</g>
<g >
<title>ep_poll (22 samples, 0.37%)</title><rect x="900.3" y="677" width="4.3" height="15.0" fill="rgb(228,6,29)" rx="2" ry="2" />
<text  x="903.29" y="687.5" ></text>
</g>
<g >
<title>jsY_isnewline (6 samples, 0.10%)</title><rect x="851.0" y="133" width="1.2" height="15.0" fill="rgb(236,35,6)" rx="2" ry="2" />
<text  x="854.05" y="143.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (174 samples, 2.92%)</title><rect x="904.8" y="549" width="34.4" height="15.0" fill="rgb(242,184,53)" rx="2" ry="2" />
<text  x="907.84" y="559.5" >mo..</text>
</g>
<g >
<title>plugin_spring_el_check (14 samples, 0.23%)</title><rect x="936.5" y="501" width="2.7" height="15.0" fill="rgb(253,20,33)" rx="2" ry="2" />
<text  x="939.48" y="511.5" ></text>
</g>
<g >
<title>std::string::_M_data (20 samples, 0.34%)</title><rect x="279.3" y="437" width="4.0" height="15.0" fill="rgb(216,1,43)" rx="2" ry="2" />
<text  x="282.34" y="447.5" ></text>
</g>
<g >
<title>default_wake_function (1 samples, 0.02%)</title><rect x="1188.8" y="101" width="0.2" height="15.0" fill="rgb(225,219,7)" rx="2" ry="2" />
<text  x="1191.81" y="111.5" ></text>
</g>
<g >
<title>ctx_sched_out (1 samples, 0.02%)</title><rect x="85.1" y="549" width="0.2" height="15.0" fill="rgb(220,117,31)" rx="2" ry="2" />
<text  x="88.15" y="559.5" ></text>
</g>
<g >
<title>lexnumber (224 samples, 3.75%)</title><rect x="852.6" y="421" width="44.3" height="15.0" fill="rgb(236,117,48)" rx="2" ry="2" />
<text  x="855.63" y="431.5" >lexn..</text>
</g>
<g >
<title>ognl_scan_bytes (8 samples, 0.13%)</title><rect x="947.9" y="485" width="1.6" height="15.0" fill="rgb(244,40,52)" rx="2" ry="2" />
<text  x="950.95" y="495.5" ></text>
</g>
<g >
<title>expression (388 samples, 6.50%)</title><rect x="820.2" y="485" width="76.7" height="15.0" fill="rgb(217,120,34)" rx="2" ry="2" />
<text  x="823.20" y="495.5" >expression</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="243.5" y="469" width="0.2" height="15.0" fill="rgb(220,207,21)" rx="2" ry="2" />
<text  x="246.55" y="479.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="699.2" y="677" width="0.2" height="15.0" fill="rgb(207,149,41)" rx="2" ry="2" />
<text  x="702.17" y="687.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="831.7" y="181" width="0.2" height="15.0" fill="rgb(219,206,49)" rx="2" ry="2" />
<text  x="834.67" y="191.5" ></text>
</g>
<g >
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="91.1" y="581" width="0.4" height="15.0" fill="rgb(219,72,35)" rx="2" ry="2" />
<text  x="94.08" y="591.5" ></text>
</g>
<g >
<title>modsecurity::AnchoredSetVariable::resolve (1 samples, 0.02%)</title><rect x="939.4" y="581" width="0.2" height="15.0" fill="rgb(225,77,26)" rx="2" ry="2" />
<text  x="942.45" y="591.5" ></text>
</g>
<g >
<title>__schedule (9 samples, 0.15%)</title><rect x="85.1" y="597" width="1.8" height="15.0" fill="rgb(210,38,41)" rx="2" ry="2" />
<text  x="88.15" y="607.5" ></text>
</g>
<g >
<title>__schedule (6 samples, 0.10%)</title><rect x="1126.3" y="629" width="1.2" height="15.0" fill="rgb(235,25,32)" rx="2" ry="2" />
<text  x="1129.32" y="639.5" ></text>
</g>
<g >
<title>skb_release_data (1 samples, 0.02%)</title><rect x="87.5" y="533" width="0.2" height="15.0" fill="rgb(217,178,53)" rx="2" ry="2" />
<text  x="90.52" y="543.5" ></text>
</g>
<g >
<title>ellex (1 samples, 0.02%)</title><rect x="1125.9" y="565" width="0.2" height="15.0" fill="rgb(232,80,0)" rx="2" ry="2" />
<text  x="1128.93" y="575.5" ></text>
</g>
<g >
<title>finish_task_switch (8 samples, 0.13%)</title><rect x="85.3" y="581" width="1.6" height="15.0" fill="rgb(243,48,47)" rx="2" ry="2" />
<text  x="88.34" y="591.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (1 samples, 0.02%)</title><rect x="87.1" y="629" width="0.2" height="15.0" fill="rgb(215,195,4)" rx="2" ry="2" />
<text  x="90.12" y="639.5" ></text>
</g>
<g >
<title>_Destroy&lt;std::basic_string&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="589.6" y="501" width="0.2" height="15.0" fill="rgb(254,77,22)" rx="2" ry="2" />
<text  x="592.62" y="511.5" ></text>
</g>
<g >
<title>timekeeping_update.constprop.9 (1 samples, 0.02%)</title><rect x="687.9" y="549" width="0.2" height="15.0" fill="rgb(247,182,21)" rx="2" ry="2" />
<text  x="690.90" y="559.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="640.2" y="693" width="0.2" height="15.0" fill="rgb(247,32,0)" rx="2" ry="2" />
<text  x="643.24" y="703.5" ></text>
</g>
<g >
<title>xmlXPathCompUnaryExpr (1 samples, 0.02%)</title><rect x="939.2" y="421" width="0.2" height="15.0" fill="rgb(251,122,10)" rx="2" ry="2" />
<text  x="942.25" y="431.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (48 samples, 0.80%)</title><rect x="420.1" y="437" width="9.5" height="15.0" fill="rgb(249,129,53)" rx="2" ry="2" />
<text  x="423.14" y="447.5" ></text>
</g>
<g >
<title>modsecurity::Rule::obtainVariable (1 samples, 0.02%)</title><rect x="904.6" y="549" width="0.2" height="15.0" fill="rgb(251,112,36)" rx="2" ry="2" />
<text  x="907.64" y="559.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::~Transaction (8 samples, 0.13%)</title><rect x="88.3" y="645" width="1.6" height="15.0" fill="rgb(239,159,22)" rx="2" ry="2" />
<text  x="91.31" y="655.5" ></text>
</g>
<g >
<title>modsecurity::Utils::Regex::searchAll (1 samples, 0.02%)</title><rect x="939.4" y="533" width="0.2" height="15.0" fill="rgb(225,167,20)" rx="2" ry="2" />
<text  x="942.45" y="543.5" ></text>
</g>
<g >
<title>xmlXPathCompRelationalExpr (1 samples, 0.02%)</title><rect x="939.2" y="469" width="0.2" height="15.0" fill="rgb(242,81,29)" rx="2" ry="2" />
<text  x="942.25" y="479.5" ></text>
</g>
<g >
<title>event_process_active_single_queue.isra.31 (1 samples, 0.02%)</title><rect x="704.9" y="581" width="0.2" height="15.0" fill="rgb(219,39,0)" rx="2" ry="2" />
<text  x="707.91" y="591.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_sharable (16 samples, 0.27%)</title><rect x="469.2" y="437" width="3.1" height="15.0" fill="rgb(218,187,47)" rx="2" ry="2" />
<text  x="472.19" y="447.5" ></text>
</g>
<g >
<title>modsecurity::Variables::KeyExclusionRegex::match (1 samples, 0.02%)</title><rect x="939.4" y="549" width="0.2" height="15.0" fill="rgb(254,213,42)" rx="2" ry="2" />
<text  x="942.45" y="559.5" ></text>
</g>
<g >
<title>timekeeping_update.constprop.9 (1 samples, 0.02%)</title><rect x="894.2" y="197" width="0.2" height="15.0" fill="rgb(228,226,30)" rx="2" ry="2" />
<text  x="897.16" y="207.5" ></text>
</g>
<g >
<title>native_write_msr_safe (16 samples, 0.27%)</title><rect x="901.1" y="501" width="3.1" height="15.0" fill="rgb(216,130,29)" rx="2" ry="2" />
<text  x="904.08" y="511.5" ></text>
</g>
<g >
<title>scriptelement (388 samples, 6.50%)</title><rect x="820.2" y="517" width="76.7" height="15.0" fill="rgb(240,129,46)" rx="2" ry="2" />
<text  x="823.20" y="527.5" >scriptel..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.4" y="469" width="0.2" height="15.0" fill="rgb(224,179,30)" rx="2" ry="2" />
<text  x="100.41" y="479.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (1 samples, 0.02%)</title><rect x="82.4" y="645" width="0.2" height="15.0" fill="rgb(242,153,38)" rx="2" ry="2" />
<text  x="85.38" y="655.5" ></text>
</g>
<g >
<title>to_string (1 samples, 0.02%)</title><rect x="88.1" y="597" width="0.2" height="15.0" fill="rgb(241,159,23)" rx="2" ry="2" />
<text  x="91.11" y="607.5" ></text>
</g>
<g >
<title>jsY_next (77 samples, 1.29%)</title><rect x="1173.0" y="389" width="15.2" height="15.0" fill="rgb(241,44,32)" rx="2" ry="2" />
<text  x="1175.99" y="399.5" ></text>
</g>
<g >
<title>allocate_shared&lt;std::basic_string&lt;char&gt;, std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="476.3" y="469" width="0.2" height="15.0" fill="rgb(244,55,8)" rx="2" ry="2" />
<text  x="479.30" y="479.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (49 samples, 0.82%)</title><rect x="419.9" y="469" width="9.7" height="15.0" fill="rgb(227,75,42)" rx="2" ry="2" />
<text  x="422.94" y="479.5" ></text>
</g>
<g >
<title>__xmlRandom (3 samples, 0.05%)</title><rect x="585.1" y="469" width="0.6" height="15.0" fill="rgb(216,12,47)" rx="2" ry="2" />
<text  x="588.07" y="479.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="419.4" y="437" width="0.3" height="15.0" fill="rgb(253,80,37)" rx="2" ry="2" />
<text  x="422.35" y="447.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="84.8" y="437" width="0.1" height="15.0" fill="rgb(215,111,10)" rx="2" ry="2" />
<text  x="87.75" y="447.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="894.2" y="293" width="0.2" height="15.0" fill="rgb(206,94,48)" rx="2" ry="2" />
<text  x="897.16" y="303.5" ></text>
</g>
<g >
<title>tcp_data_queue (1 samples, 0.02%)</title><rect x="1188.8" y="213" width="0.2" height="15.0" fill="rgb(234,156,24)" rx="2" ry="2" />
<text  x="1191.81" y="223.5" ></text>
</g>
<g >
<title>HandleSeRequestSpod (205 samples, 3.44%)</title><rect x="939.4" y="677" width="40.6" height="15.0" fill="rgb(245,11,44)" rx="2" ry="2" />
<text  x="942.45" y="687.5" >Han..</text>
</g>
<g >
<title>x86_pmu_enable (3 samples, 0.05%)</title><rect x="1189.4" y="533" width="0.6" height="15.0" fill="rgb(236,214,26)" rx="2" ry="2" />
<text  x="1192.41" y="543.5" ></text>
</g>
<g >
<title>idle_cpu (1 samples, 0.02%)</title><rect x="97.4" y="421" width="0.2" height="15.0" fill="rgb(219,176,5)" rx="2" ry="2" />
<text  x="100.41" y="431.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="900.9" y="453" width="0.2" height="15.0" fill="rgb(218,66,39)" rx="2" ry="2" />
<text  x="903.88" y="463.5" ></text>
</g>
<g >
<title>xmlXPathRoot__internal_alias (1 samples, 0.02%)</title><rect x="899.9" y="485" width="0.2" height="15.0" fill="rgb(227,25,30)" rx="2" ry="2" />
<text  x="902.89" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (6 samples, 0.10%)</title><rect x="1126.3" y="549" width="1.2" height="15.0" fill="rgb(245,101,21)" rx="2" ry="2" />
<text  x="1129.32" y="559.5" ></text>
</g>
<g >
<title>native_write_msr_safe (6 samples, 0.10%)</title><rect x="1126.3" y="517" width="1.2" height="15.0" fill="rgb(234,69,25)" rx="2" ry="2" />
<text  x="1129.32" y="527.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (1 samples, 0.02%)</title><rect x="90.1" y="293" width="0.2" height="15.0" fill="rgb(219,222,33)" rx="2" ry="2" />
<text  x="93.09" y="303.5" ></text>
</g>
<g >
<title>bitor (200 samples, 3.35%)</title><rect x="708.5" y="389" width="39.5" height="15.0" fill="rgb(211,188,43)" rx="2" ry="2" />
<text  x="711.47" y="399.5" >bitor</text>
</g>
<g >
<title>epoll_wait (5 samples, 0.08%)</title><rect x="703.5" y="565" width="1.0" height="15.0" fill="rgb(231,11,33)" rx="2" ry="2" />
<text  x="706.52" y="575.5" ></text>
</g>
<g >
<title>std::_Rb_tree_iterator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;::operator++ (4 samples, 0.07%)</title><rect x="91.5" y="549" width="0.8" height="15.0" fill="rgb(249,223,37)" rx="2" ry="2" />
<text  x="94.47" y="559.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="494.9" y="405" width="0.2" height="15.0" fill="rgb(254,159,29)" rx="2" ry="2" />
<text  x="497.89" y="415.5" ></text>
</g>
<g >
<title>jsY_lexx (39 samples, 0.65%)</title><rect x="738.9" y="149" width="7.7" height="15.0" fill="rgb(219,143,0)" rx="2" ry="2" />
<text  x="741.92" y="159.5" ></text>
</g>
<g >
<title>std::string::append (1 samples, 0.02%)</title><rect x="476.7" y="469" width="0.2" height="15.0" fill="rgb(212,85,52)" rx="2" ry="2" />
<text  x="479.70" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_data (28 samples, 0.47%)</title><rect x="141.5" y="437" width="5.5" height="15.0" fill="rgb(236,107,6)" rx="2" ry="2" />
<text  x="144.51" y="447.5" ></text>
</g>
<g >
<title>plugin_sqli2_check (1 samples, 0.02%)</title><rect x="980.0" y="581" width="0.2" height="15.0" fill="rgb(234,225,13)" rx="2" ry="2" />
<text  x="982.98" y="591.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_clone (1 samples, 0.02%)</title><rect x="476.7" y="437" width="0.2" height="15.0" fill="rgb(212,160,50)" rx="2" ry="2" />
<text  x="479.70" y="447.5" ></text>
</g>
<g >
<title>tcp_write_xmit (1 samples, 0.02%)</title><rect x="1188.8" y="549" width="0.2" height="15.0" fill="rgb(215,50,7)" rx="2" ry="2" />
<text  x="1191.81" y="559.5" ></text>
</g>
<g >
<title>link_path_walk (1 samples, 0.02%)</title><rect x="91.3" y="501" width="0.2" height="15.0" fill="rgb(212,52,1)" rx="2" ry="2" />
<text  x="94.28" y="511.5" ></text>
</g>
<g >
<title>do_master_work (8 samples, 0.13%)</title><rect x="703.5" y="677" width="1.6" height="15.0" fill="rgb(253,43,29)" rx="2" ry="2" />
<text  x="706.52" y="687.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="454.0" y="485" width="0.2" height="15.0" fill="rgb(228,129,17)" rx="2" ry="2" />
<text  x="456.96" y="495.5" ></text>
</g>
<g >
<title>pcre_exec (1 samples, 0.02%)</title><rect x="705.5" y="549" width="0.2" height="15.0" fill="rgb(231,46,41)" rx="2" ry="2" />
<text  x="708.50" y="559.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.02%)</title><rect x="87.7" y="405" width="0.2" height="15.0" fill="rgb(224,114,20)" rx="2" ry="2" />
<text  x="90.72" y="415.5" ></text>
</g>
<g >
<title>plugin_php_webshell_check (108 samples, 1.81%)</title><rect x="915.1" y="501" width="21.4" height="15.0" fill="rgb(249,75,27)" rx="2" ry="2" />
<text  x="918.12" y="511.5" >p..</text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="87.1" y="485" width="0.2" height="15.0" fill="rgb(243,217,54)" rx="2" ry="2" />
<text  x="90.12" y="495.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (10 samples, 0.17%)</title><rect x="83.0" y="597" width="1.9" height="15.0" fill="rgb(237,174,29)" rx="2" ry="2" />
<text  x="85.97" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (2 samples, 0.03%)</title><rect x="89.5" y="597" width="0.4" height="15.0" fill="rgb(207,203,0)" rx="2" ry="2" />
<text  x="92.50" y="607.5" ></text>
</g>
<g >
<title>lex_and_parser (67 samples, 1.12%)</title><rect x="1127.5" y="517" width="13.3" height="15.0" fill="rgb(246,152,21)" rx="2" ry="2" />
<text  x="1130.51" y="527.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="704.5" y="469" width="0.2" height="15.0" fill="rgb(222,67,8)" rx="2" ry="2" />
<text  x="707.51" y="479.5" ></text>
</g>
<g >
<title>~list (2 samples, 0.03%)</title><rect x="88.7" y="581" width="0.4" height="15.0" fill="rgb(220,71,48)" rx="2" ry="2" />
<text  x="91.71" y="591.5" ></text>
</g>
<g >
<title>xmlBufCreateSize (1 samples, 0.02%)</title><rect x="490.1" y="485" width="0.2" height="15.0" fill="rgb(245,152,5)" rx="2" ry="2" />
<text  x="493.15" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="88.7" y="453" width="0.4" height="15.0" fill="rgb(219,146,19)" rx="2" ry="2" />
<text  x="91.71" y="463.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::Utf8ToUnicode::inplace (236 samples, 3.96%)</title><rect x="429.6" y="501" width="46.7" height="15.0" fill="rgb(229,184,43)" rx="2" ry="2" />
<text  x="432.63" y="511.5" >mods..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="481.8" y="421" width="0.2" height="15.0" fill="rgb(251,209,42)" rx="2" ry="2" />
<text  x="484.84" y="431.5" ></text>
</g>
<g >
<title>xmlParseChunk__internal_alias (1 samples, 0.02%)</title><rect x="93.1" y="533" width="0.2" height="15.0" fill="rgb(213,194,36)" rx="2" ry="2" />
<text  x="96.06" y="543.5" ></text>
</g>
<g >
<title>xmlXPathTryStreamCompile (1 samples, 0.02%)</title><rect x="84.0" y="485" width="0.2" height="15.0" fill="rgb(206,140,5)" rx="2" ry="2" />
<text  x="86.96" y="495.5" ></text>
</g>
<g >
<title>__update_cpu_load (1 samples, 0.02%)</title><rect x="1110.5" y="421" width="0.2" height="15.0" fill="rgb(224,200,15)" rx="2" ry="2" />
<text  x="1113.50" y="431.5" ></text>
</g>
<g >
<title>xmlXPathCompAdditiveExpr (1 samples, 0.02%)</title><rect x="939.2" y="453" width="0.2" height="15.0" fill="rgb(228,132,26)" rx="2" ry="2" />
<text  x="942.25" y="463.5" ></text>
</g>
<g >
<title>schedule (9 samples, 0.15%)</title><rect x="85.1" y="613" width="1.8" height="15.0" fill="rgb(244,76,14)" rx="2" ry="2" />
<text  x="88.15" y="623.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.02%)</title><rect x="279.1" y="453" width="0.2" height="15.0" fill="rgb(229,174,53)" rx="2" ry="2" />
<text  x="282.14" y="463.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="84.2" y="469" width="0.2" height="15.0" fill="rgb(239,95,24)" rx="2" ry="2" />
<text  x="87.16" y="479.5" ></text>
</g>
<g >
<title>jsY_isnewline@plt (2 samples, 0.03%)</title><rect x="819.8" y="373" width="0.4" height="15.0" fill="rgb(242,210,22)" rx="2" ry="2" />
<text  x="822.80" y="383.5" ></text>
</g>
<g >
<title>std::string::_M_rep (2 samples, 0.03%)</title><rect x="475.9" y="437" width="0.4" height="15.0" fill="rgb(205,37,29)" rx="2" ry="2" />
<text  x="478.91" y="447.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (1 samples, 0.02%)</title><rect x="419.9" y="437" width="0.2" height="15.0" fill="rgb(244,41,24)" rx="2" ry="2" />
<text  x="422.94" y="447.5" ></text>
</g>
<g >
<title>cascade (1 samples, 0.02%)</title><rect x="88.7" y="341" width="0.2" height="15.0" fill="rgb(233,11,43)" rx="2" ry="2" />
<text  x="91.71" y="351.5" ></text>
</g>
<g >
<title>std::string::substr (4 samples, 0.07%)</title><rect x="304.3" y="485" width="0.7" height="15.0" fill="rgb(214,42,33)" rx="2" ry="2" />
<text  x="307.26" y="495.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.9" y="693" width="0.2" height="15.0" fill="rgb(239,165,10)" rx="2" ry="2" />
<text  x="690.90" y="703.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;modsecurity::VariableValue*, std::allocator&lt;modsecurity::VariableValue*&gt; &gt;::_M_allocate (2 samples, 0.03%)</title><rect x="83.4" y="485" width="0.4" height="15.0" fill="rgb(215,34,47)" rx="2" ry="2" />
<text  x="86.37" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="243.5" y="421" width="0.2" height="15.0" fill="rgb(254,115,24)" rx="2" ry="2" />
<text  x="246.55" y="431.5" ></text>
</g>
<g >
<title>system_call_fastpath (3 samples, 0.05%)</title><rect x="703.9" y="549" width="0.6" height="15.0" fill="rgb(239,199,10)" rx="2" ry="2" />
<text  x="706.92" y="559.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (48 samples, 0.80%)</title><rect x="420.1" y="405" width="9.5" height="15.0" fill="rgb(206,212,44)" rx="2" ry="2" />
<text  x="423.14" y="415.5" ></text>
</g>
<g >
<title>std::vector&lt;modsecurity::VariableValue*, std::allocator&lt;modsecurity::VariableValue*&gt; &gt;::_M_emplace_back_aux&lt;modsecurity::VariableValue* const&amp;&gt; (2 samples, 0.03%)</title><rect x="83.4" y="501" width="0.4" height="15.0" fill="rgb(207,44,23)" rx="2" ry="2" />
<text  x="86.37" y="511.5" ></text>
</g>
<g >
<title>quick_check (4 samples, 0.07%)</title><rect x="702.7" y="709" width="0.8" height="15.0" fill="rgb(222,172,3)" rx="2" ry="2" />
<text  x="705.73" y="719.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="84.6" y="485" width="0.2" height="15.0" fill="rgb(217,62,18)" rx="2" ry="2" />
<text  x="87.55" y="495.5" ></text>
</g>
<g >
<title>sys_futex (2 samples, 0.03%)</title><rect x="1188.2" y="693" width="0.4" height="15.0" fill="rgb(208,41,35)" rx="2" ry="2" />
<text  x="1191.22" y="703.5" ></text>
</g>
<g >
<title>sys_nanosleep (5 samples, 0.08%)</title><rect x="90.1" y="581" width="1.0" height="15.0" fill="rgb(237,156,36)" rx="2" ry="2" />
<text  x="93.09" y="591.5" ></text>
</g>
<g >
<title>make_shared&lt;std::basic_string&lt;char&gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="476.3" y="485" width="0.2" height="15.0" fill="rgb(234,228,34)" rx="2" ry="2" />
<text  x="479.30" y="495.5" ></text>
</g>
<g >
<title>xmlStrndup__internal_alias (1 samples, 0.02%)</title><rect x="84.8" y="453" width="0.1" height="15.0" fill="rgb(217,104,39)" rx="2" ry="2" />
<text  x="87.75" y="463.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckJavaScript (967 samples, 16.21%)</title><rect x="705.7" y="565" width="191.2" height="15.0" fill="rgb(225,23,2)" rx="2" ry="2" />
<text  x="708.70" y="575.5" >modsecurity::engine::SWAF..</text>
</g>
<g >
<title>handle_mm_fault (1 samples, 0.02%)</title><rect x="489.9" y="389" width="0.2" height="15.0" fill="rgb(225,144,8)" rx="2" ry="2" />
<text  x="492.95" y="399.5" ></text>
</g>
<g >
<title>statement (35 samples, 0.59%)</title><rect x="941.0" y="469" width="6.9" height="15.0" fill="rgb(234,47,26)" rx="2" ry="2" />
<text  x="944.03" y="479.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="88.9" y="309" width="0.2" height="15.0" fill="rgb(249,58,16)" rx="2" ry="2" />
<text  x="91.90" y="319.5" ></text>
</g>
<g >
<title>trace_do_page_fault (1 samples, 0.02%)</title><rect x="489.9" y="421" width="0.2" height="15.0" fill="rgb(249,173,27)" rx="2" ry="2" />
<text  x="492.95" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (1 samples, 0.02%)</title><rect x="96.4" y="421" width="0.2" height="15.0" fill="rgb(213,154,41)" rx="2" ry="2" />
<text  x="99.42" y="431.5" ></text>
</g>
<g >
<title>unary (118 samples, 1.98%)</title><rect x="723.3" y="261" width="23.3" height="15.0" fill="rgb(209,12,45)" rx="2" ry="2" />
<text  x="726.30" y="271.5" >u..</text>
</g>
<g >
<title>lex_parse (1 samples, 0.02%)</title><rect x="82.4" y="517" width="0.2" height="15.0" fill="rgb(239,74,41)" rx="2" ry="2" />
<text  x="85.38" y="527.5" ></text>
</g>
<g >
<title>read (1 samples, 0.02%)</title><rect x="87.5" y="709" width="0.2" height="15.0" fill="rgb(254,96,11)" rx="2" ry="2" />
<text  x="90.52" y="719.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="476.7" y="421" width="0.2" height="15.0" fill="rgb(230,83,25)" rx="2" ry="2" />
<text  x="479.70" y="431.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::EscapeMSSeqDecode::evaluate (17 samples, 0.28%)</title><rect x="148.6" y="501" width="3.4" height="15.0" fill="rgb(250,110,48)" rx="2" ry="2" />
<text  x="151.63" y="511.5" ></text>
</g>
<g >
<title>conditional (21 samples, 0.35%)</title><rect x="1133.4" y="421" width="4.2" height="15.0" fill="rgb(222,44,42)" rx="2" ry="2" />
<text  x="1136.44" y="431.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="687.9" y="565" width="0.2" height="15.0" fill="rgb(229,200,8)" rx="2" ry="2" />
<text  x="690.90" y="575.5" ></text>
</g>
<g >
<title>_Deque_iterator (1 samples, 0.02%)</title><rect x="478.5" y="469" width="0.2" height="15.0" fill="rgb(247,96,28)" rx="2" ry="2" />
<text  x="481.48" y="479.5" ></text>
</g>
<g >
<title>~unique_ptr (2 samples, 0.03%)</title><rect x="88.7" y="501" width="0.4" height="15.0" fill="rgb(228,213,29)" rx="2" ry="2" />
<text  x="91.71" y="511.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (8 samples, 0.13%)</title><rect x="85.3" y="517" width="1.6" height="15.0" fill="rgb(227,112,21)" rx="2" ry="2" />
<text  x="88.34" y="527.5" ></text>
</g>
<g >
<title>iptable_mangle_hook (1 samples, 0.02%)</title><rect x="87.7" y="277" width="0.2" height="15.0" fill="rgb(242,211,39)" rx="2" ry="2" />
<text  x="90.72" y="287.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (2 samples, 0.03%)</title><rect x="135.8" y="405" width="0.4" height="15.0" fill="rgb(240,211,25)" rx="2" ry="2" />
<text  x="138.77" y="415.5" ></text>
</g>
<g >
<title>std::string::_M_rep (16 samples, 0.27%)</title><rect x="293.4" y="437" width="3.1" height="15.0" fill="rgb(217,103,14)" rx="2" ry="2" />
<text  x="296.38" y="447.5" ></text>
</g>
<g >
<title>profile_tick (1 samples, 0.02%)</title><rect x="597.1" y="597" width="0.2" height="15.0" fill="rgb(215,162,52)" rx="2" ry="2" />
<text  x="600.13" y="607.5" ></text>
</g>
<g >
<title>jsU_islowerrune@plt (4 samples, 0.07%)</title><rect x="878.7" y="373" width="0.8" height="15.0" fill="rgb(209,157,5)" rx="2" ry="2" />
<text  x="881.73" y="383.5" ></text>
</g>
<g >
<title>assignment (214 samples, 3.59%)</title><rect x="705.7" y="453" width="42.3" height="15.0" fill="rgb(231,203,40)" rx="2" ry="2" />
<text  x="708.70" y="463.5" >ass..</text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (3 samples, 0.05%)</title><rect x="1189.4" y="501" width="0.6" height="15.0" fill="rgb(247,0,9)" rx="2" ry="2" />
<text  x="1192.41" y="511.5" ></text>
</g>
<g >
<title>x2apic_send_IPI_mask (1 samples, 0.02%)</title><rect x="1188.8" y="53" width="0.2" height="15.0" fill="rgb(205,39,32)" rx="2" ry="2" />
<text  x="1191.81" y="63.5" ></text>
</g>
<g >
<title>async_page_fault (4 samples, 0.07%)</title><rect x="428.8" y="373" width="0.8" height="15.0" fill="rgb(246,101,21)" rx="2" ry="2" />
<text  x="431.84" y="383.5" ></text>
</g>
<g >
<title>strnstr_copy (21 samples, 0.35%)</title><rect x="907.2" y="485" width="4.2" height="15.0" fill="rgb(208,10,13)" rx="2" ry="2" />
<text  x="910.21" y="495.5" ></text>
</g>
<g >
<title>std::basic_stringbuf&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::str (7 samples, 0.12%)</title><rect x="587.8" y="533" width="1.4" height="15.0" fill="rgb(215,110,11)" rx="2" ry="2" />
<text  x="590.84" y="543.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="86.9" y="693" width="0.2" height="15.0" fill="rgb(224,15,25)" rx="2" ry="2" />
<text  x="89.93" y="703.5" ></text>
</g>
<g >
<title>modsecurity::Variables::XML::evaluate (9 samples, 0.15%)</title><rect x="83.2" y="533" width="1.7" height="15.0" fill="rgb(223,11,19)" rx="2" ry="2" />
<text  x="86.17" y="543.5" ></text>
</g>
<g >
<title>inet_accept (2 samples, 0.03%)</title><rect x="705.1" y="645" width="0.4" height="15.0" fill="rgb(214,140,5)" rx="2" ry="2" />
<text  x="708.11" y="655.5" ></text>
</g>
<g >
<title>modsecurity::Variables::Tx_DictElementRegexp::evaluate (1 samples, 0.02%)</title><rect x="476.9" y="517" width="0.2" height="15.0" fill="rgb(218,58,36)" rx="2" ry="2" />
<text  x="479.90" y="527.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (4 samples, 0.07%)</title><rect x="90.3" y="421" width="0.8" height="15.0" fill="rgb(219,149,36)" rx="2" ry="2" />
<text  x="93.29" y="431.5" ></text>
</g>
<g >
<title>std::string::_Rep::_S_create (1 samples, 0.02%)</title><rect x="83.2" y="485" width="0.2" height="15.0" fill="rgb(223,42,5)" rx="2" ry="2" />
<text  x="86.17" y="495.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (1 samples, 0.02%)</title><rect x="904.6" y="469" width="0.2" height="15.0" fill="rgb(242,222,1)" rx="2" ry="2" />
<text  x="907.64" y="479.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="899.9" y="437" width="0.2" height="15.0" fill="rgb(219,44,13)" rx="2" ry="2" />
<text  x="902.89" y="447.5" ></text>
</g>
<g >
<title>[sec_agent] (2 samples, 0.03%)</title><rect x="91.1" y="613" width="0.4" height="15.0" fill="rgb(217,121,33)" rx="2" ry="2" />
<text  x="94.08" y="623.5" ></text>
</g>
<g >
<title>native_write_msr_safe (3 samples, 0.05%)</title><rect x="1189.4" y="485" width="0.6" height="15.0" fill="rgb(236,200,30)" rx="2" ry="2" />
<text  x="1192.41" y="495.5" ></text>
</g>
<g >
<title>sock_sendmsg (1 samples, 0.02%)</title><rect x="1188.6" y="661" width="0.2" height="15.0" fill="rgb(230,90,37)" rx="2" ry="2" />
<text  x="1191.62" y="671.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (205 samples, 3.44%)</title><rect x="939.4" y="645" width="40.6" height="15.0" fill="rgb(252,160,1)" rx="2" ry="2" />
<text  x="942.45" y="655.5" >han..</text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckSpringEl (1 samples, 0.02%)</title><rect x="1125.9" y="629" width="0.2" height="15.0" fill="rgb(232,12,53)" rx="2" ry="2" />
<text  x="1128.93" y="639.5" ></text>
</g>
<g >
<title>lalr_parse (1 samples, 0.02%)</title><rect x="980.0" y="533" width="0.2" height="15.0" fill="rgb(214,9,6)" rx="2" ry="2" />
<text  x="982.98" y="543.5" ></text>
</g>
<g >
<title>__rmqueue (1 samples, 0.02%)</title><rect x="429.4" y="245" width="0.2" height="15.0" fill="rgb(243,42,35)" rx="2" ry="2" />
<text  x="432.44" y="255.5" ></text>
</g>
<g >
<title>handleHttpRequest (1 samples, 0.02%)</title><rect x="82.4" y="709" width="0.2" height="15.0" fill="rgb(233,98,39)" rx="2" ry="2" />
<text  x="85.38" y="719.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;std::string, std::allocator&lt;std::string&gt;,  (1 samples, 0.02%)</title><rect x="476.3" y="405" width="0.2" height="15.0" fill="rgb(236,119,46)" rx="2" ry="2" />
<text  x="479.30" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.03%)</title><rect x="91.1" y="629" width="0.4" height="15.0" fill="rgb(232,55,0)" rx="2" ry="2" />
<text  x="94.08" y="639.5" ></text>
</g>
<g >
<title>jsP_next (90 samples, 1.51%)</title><rect x="834.8" y="197" width="17.8" height="15.0" fill="rgb(230,98,25)" rx="2" ry="2" />
<text  x="837.83" y="207.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="88.1" y="405" width="0.2" height="15.0" fill="rgb(237,32,9)" rx="2" ry="2" />
<text  x="91.11" y="415.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="489.8" y="389" width="0.1" height="15.0" fill="rgb(245,167,22)" rx="2" ry="2" />
<text  x="492.75" y="399.5" ></text>
</g>
<g >
<title>accept_cb (1 samples, 0.02%)</title><rect x="704.9" y="565" width="0.2" height="15.0" fill="rgb(222,162,32)" rx="2" ry="2" />
<text  x="707.91" y="575.5" ></text>
</g>
<g >
<title>jsY_lexx (351 samples, 5.88%)</title><rect x="750.8" y="421" width="69.4" height="15.0" fill="rgb(219,109,45)" rx="2" ry="2" />
<text  x="753.79" y="431.5" >jsY_lexx</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="258.2" y="485" width="0.2" height="15.0" fill="rgb(231,107,47)" rx="2" ry="2" />
<text  x="261.18" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (1 samples, 0.02%)</title><rect x="87.1" y="565" width="0.2" height="15.0" fill="rgb(206,74,18)" rx="2" ry="2" />
<text  x="90.12" y="575.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (4 samples, 0.07%)</title><rect x="90.3" y="437" width="0.8" height="15.0" fill="rgb(222,155,1)" rx="2" ry="2" />
<text  x="93.29" y="447.5" ></text>
</g>
<g >
<title>check_for_new_grace_period.isra.26 (1 samples, 0.02%)</title><rect x="699.2" y="581" width="0.2" height="15.0" fill="rgb(212,24,30)" rx="2" ry="2" />
<text  x="702.17" y="591.5" ></text>
</g>
<g >
<title>std::_List_base&lt;std::unique_ptr&lt;modsecurity::VariableOrigin, std::default_delete&lt;modsecurity::VariableOrigin&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;modsecurity::VariableOrigin, std::default_delete&lt;modsecurity::VariableOrigin&gt; &gt; &gt; &gt;::_M_clear (2 samples, 0.03%)</title><rect x="88.7" y="549" width="0.4" height="15.0" fill="rgb(253,129,46)" rx="2" ry="2" />
<text  x="91.71" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="589.8" y="597" width="0.2" height="15.0" fill="rgb(243,117,18)" rx="2" ry="2" />
<text  x="592.82" y="607.5" ></text>
</g>
<g >
<title>xmlStringCurrentChar__internal_alias (1 samples, 0.02%)</title><rect x="979.8" y="453" width="0.2" height="15.0" fill="rgb(247,41,11)" rx="2" ry="2" />
<text  x="982.79" y="463.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (982 samples, 16.46%)</title><rect x="705.7" y="581" width="194.2" height="15.0" fill="rgb(239,214,10)" rx="2" ry="2" />
<text  x="708.70" y="591.5" >modsecurity::operators::S..</text>
</g>
<g >
<title>perf_pmu_enable (1 samples, 0.02%)</title><rect x="87.1" y="549" width="0.2" height="15.0" fill="rgb(230,216,53)" rx="2" ry="2" />
<text  x="90.12" y="559.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="90.1" y="325" width="0.2" height="15.0" fill="rgb(230,171,34)" rx="2" ry="2" />
<text  x="93.09" y="335.5" ></text>
</g>
<g >
<title>xmlCompilePathPattern (1 samples, 0.02%)</title><rect x="979.8" y="501" width="0.2" height="15.0" fill="rgb(209,163,32)" rx="2" ry="2" />
<text  x="982.79" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="494.9" y="421" width="0.2" height="15.0" fill="rgb(235,186,43)" rx="2" ry="2" />
<text  x="497.89" y="431.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (2 samples, 0.03%)</title><rect x="1189.0" y="581" width="0.4" height="15.0" fill="rgb(223,179,51)" rx="2" ry="2" />
<text  x="1192.01" y="591.5" ></text>
</g>
<g >
<title>jsP_next (224 samples, 3.75%)</title><rect x="852.6" y="469" width="44.3" height="15.0" fill="rgb(213,106,30)" rx="2" ry="2" />
<text  x="855.63" y="479.5" >jsP_..</text>
</g>
<g >
<title>jsU_isupperrune (67 samples, 1.12%)</title><rect x="790.5" y="357" width="13.3" height="15.0" fill="rgb(207,189,7)" rx="2" ry="2" />
<text  x="793.54" y="367.5" ></text>
</g>
<g >
<title>event_base_loop (176 samples, 2.95%)</title><rect x="904.6" y="725" width="34.8" height="15.0" fill="rgb(214,114,7)" rx="2" ry="2" />
<text  x="907.64" y="735.5" >ev..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="97.4" y="437" width="0.2" height="15.0" fill="rgb(208,106,29)" rx="2" ry="2" />
<text  x="100.41" y="447.5" ></text>
</g>
<g >
<title>native_smp_send_reschedule (1 samples, 0.02%)</title><rect x="1188.8" y="69" width="0.2" height="15.0" fill="rgb(253,164,45)" rx="2" ry="2" />
<text  x="1191.81" y="79.5" ></text>
</g>
<g >
<title>system_call_fastpath (22 samples, 0.37%)</title><rect x="900.3" y="709" width="4.3" height="15.0" fill="rgb(228,25,41)" rx="2" ry="2" />
<text  x="903.29" y="719.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (16 samples, 0.27%)</title><rect x="901.1" y="533" width="3.1" height="15.0" fill="rgb(232,88,16)" rx="2" ry="2" />
<text  x="904.08" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (3 samples, 0.05%)</title><rect x="1110.3" y="549" width="0.6" height="15.0" fill="rgb(239,200,12)" rx="2" ry="2" />
<text  x="1113.31" y="559.5" ></text>
</g>
<g >
<title>event_base_loop (8 samples, 0.13%)</title><rect x="703.5" y="597" width="1.6" height="15.0" fill="rgb(229,166,39)" rx="2" ry="2" />
<text  x="706.52" y="607.5" ></text>
</g>
<g >
<title>perf_pmu_enable (1 samples, 0.02%)</title><rect x="583.7" y="277" width="0.2" height="15.0" fill="rgb(227,210,6)" rx="2" ry="2" />
<text  x="586.69" y="287.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="589.4" y="453" width="0.2" height="15.0" fill="rgb(222,121,43)" rx="2" ry="2" />
<text  x="592.42" y="463.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (984 samples, 16.49%)</title><rect x="705.5" y="645" width="194.6" height="15.0" fill="rgb(240,21,16)" rx="2" ry="2" />
<text  x="708.50" y="655.5" >modsecurity::Rules::evalu..</text>
</g>
<g >
<title>free (2 samples, 0.03%)</title><rect x="88.7" y="469" width="0.4" height="15.0" fill="rgb(216,37,54)" rx="2" ry="2" />
<text  x="91.71" y="479.5" ></text>
</g>
<g >
<title>decode_ms_req_msg (176 samples, 2.95%)</title><rect x="904.6" y="677" width="34.8" height="15.0" fill="rgb(229,41,18)" rx="2" ry="2" />
<text  x="907.64" y="687.5" >de..</text>
</g>
<g >
<title>decode_ms_req_msg (2,520 samples, 42.23%)</title><rect x="91.5" y="629" width="498.3" height="15.0" fill="rgb(217,19,46)" rx="2" ry="2" />
<text  x="94.47" y="639.5" >decode_ms_req_msg</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="835.2" y="181" width="0.2" height="15.0" fill="rgb(221,175,2)" rx="2" ry="2" />
<text  x="838.23" y="191.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="699.2" y="661" width="0.2" height="15.0" fill="rgb(229,167,28)" rx="2" ry="2" />
<text  x="702.17" y="671.5" ></text>
</g>
<g >
<title>jsU_chartorune@plt (2 samples, 0.03%)</title><rect x="1185.1" y="373" width="0.4" height="15.0" fill="rgb(222,84,29)" rx="2" ry="2" />
<text  x="1188.06" y="383.5" ></text>
</g>
<g >
<title>[libc.so.6] (4 samples, 0.07%)</title><rect x="208.3" y="485" width="0.8" height="15.0" fill="rgb(250,122,26)" rx="2" ry="2" />
<text  x="211.35" y="495.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="687.9" y="597" width="0.2" height="15.0" fill="rgb(209,26,12)" rx="2" ry="2" />
<text  x="690.90" y="607.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckCSharp (12 samples, 0.20%)</title><rect x="904.8" y="517" width="2.4" height="15.0" fill="rgb(225,79,28)" rx="2" ry="2" />
<text  x="907.84" y="527.5" ></text>
</g>
<g >
<title>bitxor (7 samples, 0.12%)</title><rect x="1156.4" y="357" width="1.4" height="15.0" fill="rgb(241,171,43)" rx="2" ry="2" />
<text  x="1159.38" y="367.5" ></text>
</g>
<g >
<title>xmlXPathNewContext__internal_alias (6 samples, 0.10%)</title><rect x="584.9" y="501" width="1.2" height="15.0" fill="rgb(219,14,2)" rx="2" ry="2" />
<text  x="587.87" y="511.5" ></text>
</g>
<g >
<title>account_process_tick (1 samples, 0.02%)</title><rect x="243.5" y="341" width="0.2" height="15.0" fill="rgb(250,217,29)" rx="2" ry="2" />
<text  x="246.55" y="351.5" ></text>
</g>
<g >
<title>script (67 samples, 1.12%)</title><rect x="1127.5" y="501" width="13.3" height="15.0" fill="rgb(218,171,53)" rx="2" ry="2" />
<text  x="1130.51" y="511.5" ></text>
</g>
<g >
<title>~TransformVariable (1 samples, 0.02%)</title><rect x="587.0" y="501" width="0.2" height="15.0" fill="rgb(241,58,43)" rx="2" ry="2" />
<text  x="590.05" y="511.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="687.9" y="629" width="0.2" height="15.0" fill="rgb(222,70,14)" rx="2" ry="2" />
<text  x="690.90" y="639.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="136.0" y="325" width="0.2" height="15.0" fill="rgb(244,52,34)" rx="2" ry="2" />
<text  x="138.97" y="335.5" ></text>
</g>
<g >
<title>wait_for_unix_gc (1 samples, 0.02%)</title><rect x="1188.6" y="629" width="0.2" height="15.0" fill="rgb(233,137,53)" rx="2" ry="2" />
<text  x="1191.62" y="639.5" ></text>
</g>
<g >
<title>jsP_next (365 samples, 6.12%)</title><rect x="748.0" y="453" width="72.2" height="15.0" fill="rgb(232,194,39)" rx="2" ry="2" />
<text  x="751.02" y="463.5" >jsP_next</text>
</g>
<g >
<title>async_page_fault (1 samples, 0.02%)</title><rect x="489.9" y="453" width="0.2" height="15.0" fill="rgb(251,143,23)" rx="2" ry="2" />
<text  x="492.95" y="463.5" ></text>
</g>
<g >
<title>jsY_lex@plt (1 samples, 0.02%)</title><rect x="1140.6" y="421" width="0.2" height="15.0" fill="rgb(238,206,1)" rx="2" ry="2" />
<text  x="1143.56" y="431.5" ></text>
</g>
<g >
<title>ognlparse (735 samples, 12.32%)</title><rect x="980.4" y="581" width="145.3" height="15.0" fill="rgb(217,122,50)" rx="2" ry="2" />
<text  x="983.38" y="591.5" >ognlparse</text>
</g>
<g >
<title>rcu_process_callbacks (1 samples, 0.02%)</title><rect x="699.2" y="597" width="0.2" height="15.0" fill="rgb(226,171,13)" rx="2" ry="2" />
<text  x="702.17" y="607.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_get_node (1 samples, 0.02%)</title><rect x="92.3" y="501" width="0.2" height="15.0" fill="rgb(252,13,47)" rx="2" ry="2" />
<text  x="95.27" y="511.5" ></text>
</g>
<g >
<title>modsecurity::Variables::XML::evaluate (1 samples, 0.02%)</title><rect x="939.2" y="565" width="0.2" height="15.0" fill="rgb(253,88,50)" rx="2" ry="2" />
<text  x="942.25" y="575.5" ></text>
</g>
<g >
<title>jsU_islowerrune (62 samples, 1.04%)</title><rect x="866.5" y="373" width="12.2" height="15.0" fill="rgb(222,180,37)" rx="2" ry="2" />
<text  x="869.47" y="383.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (1 samples, 0.02%)</title><rect x="99.0" y="485" width="0.2" height="15.0" fill="rgb(223,111,9)" rx="2" ry="2" />
<text  x="101.99" y="495.5" ></text>
</g>
<g >
<title>plugin_spring_el_check (1 samples, 0.02%)</title><rect x="1125.9" y="613" width="0.2" height="15.0" fill="rgb(205,111,10)" rx="2" ry="2" />
<text  x="1128.93" y="623.5" ></text>
</g>
<g >
<title>scan_parser (8 samples, 0.13%)</title><rect x="947.9" y="501" width="1.6" height="15.0" fill="rgb(245,224,23)" rx="2" ry="2" />
<text  x="950.95" y="511.5" ></text>
</g>
<g >
<title>__schedule (5 samples, 0.08%)</title><rect x="90.1" y="517" width="1.0" height="15.0" fill="rgb(251,43,3)" rx="2" ry="2" />
<text  x="93.09" y="527.5" ></text>
</g>
<g >
<title>jsY_lex@plt (2 samples, 0.03%)</title><rect x="852.2" y="181" width="0.4" height="15.0" fill="rgb(241,36,3)" rx="2" ry="2" />
<text  x="855.24" y="191.5" ></text>
</g>
<g >
<title>raw_notifier_call_chain (1 samples, 0.02%)</title><rect x="687.9" y="533" width="0.2" height="15.0" fill="rgb(233,78,10)" rx="2" ry="2" />
<text  x="690.90" y="543.5" ></text>
</g>
<g >
<title>perf_pmu_enable (8 samples, 0.13%)</title><rect x="85.3" y="549" width="1.6" height="15.0" fill="rgb(242,206,25)" rx="2" ry="2" />
<text  x="88.34" y="559.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="687.9" y="645" width="0.2" height="15.0" fill="rgb(227,228,2)" rx="2" ry="2" />
<text  x="690.90" y="655.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::Trim::ltrim (1 samples, 0.02%)</title><rect x="303.9" y="501" width="0.2" height="15.0" fill="rgb(251,82,41)" rx="2" ry="2" />
<text  x="306.86" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable (2 samples, 0.03%)</title><rect x="1188.2" y="565" width="0.4" height="15.0" fill="rgb(241,111,52)" rx="2" ry="2" />
<text  x="1191.22" y="575.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (1 samples, 0.02%)</title><rect x="92.7" y="533" width="0.2" height="15.0" fill="rgb(225,209,14)" rx="2" ry="2" />
<text  x="95.66" y="543.5" ></text>
</g>
<g >
<title>jsY_iswhite (4 samples, 0.07%)</title><rect x="742.3" y="133" width="0.8" height="15.0" fill="rgb(240,111,17)" rx="2" ry="2" />
<text  x="745.28" y="143.5" ></text>
</g>
<g >
<title>update_process_times (2 samples, 0.03%)</title><rect x="1110.5" y="453" width="0.4" height="15.0" fill="rgb(229,209,51)" rx="2" ry="2" />
<text  x="1113.50" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.03%)</title><rect x="477.1" y="501" width="0.4" height="15.0" fill="rgb(226,172,47)" rx="2" ry="2" />
<text  x="480.10" y="511.5" ></text>
</g>
<g >
<title>modsecurity::Rule::getActionsByName (5 samples, 0.08%)</title><rect x="477.5" y="501" width="1.0" height="15.0" fill="rgb(213,18,50)" rx="2" ry="2" />
<text  x="480.49" y="511.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="704.3" y="469" width="0.2" height="15.0" fill="rgb(206,171,4)" rx="2" ry="2" />
<text  x="707.32" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1184.9" y="357" width="0.2" height="15.0" fill="rgb(249,5,0)" rx="2" ry="2" />
<text  x="1187.86" y="367.5" ></text>
</g>
<g >
<title>primary (62 samples, 1.04%)</title><rect x="734.4" y="197" width="12.2" height="15.0" fill="rgb(240,50,41)" rx="2" ry="2" />
<text  x="737.37" y="207.5" ></text>
</g>
<g >
<title>std::string::_M_copy (4 samples, 0.07%)</title><rect x="304.3" y="421" width="0.7" height="15.0" fill="rgb(252,214,17)" rx="2" ry="2" />
<text  x="307.26" y="431.5" ></text>
</g>
<g >
<title>handleHttpRequest (176 samples, 2.95%)</title><rect x="904.6" y="645" width="34.8" height="15.0" fill="rgb(252,164,53)" rx="2" ry="2" />
<text  x="907.64" y="655.5" >ha..</text>
</g>
<g >
<title>alloc_pages_vma (3 samples, 0.05%)</title><rect x="429.0" y="293" width="0.6" height="15.0" fill="rgb(214,158,46)" rx="2" ry="2" />
<text  x="432.04" y="303.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (1 samples, 0.02%)</title><rect x="88.1" y="533" width="0.2" height="15.0" fill="rgb(243,138,23)" rx="2" ry="2" />
<text  x="91.11" y="543.5" ></text>
</g>
<g >
<title>modsecurity::Rule::updateMatchedVars (2 samples, 0.03%)</title><rect x="476.3" y="517" width="0.4" height="15.0" fill="rgb(221,206,53)" rx="2" ry="2" />
<text  x="479.30" y="527.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.02%)</title><rect x="476.3" y="421" width="0.2" height="15.0" fill="rgb(240,143,2)" rx="2" ry="2" />
<text  x="479.30" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="597.1" y="709" width="0.2" height="15.0" fill="rgb(238,170,27)" rx="2" ry="2" />
<text  x="600.13" y="719.5" ></text>
</g>
<g >
<title>std::_Rb_tree_increment (4 samples, 0.07%)</title><rect x="91.5" y="533" width="0.8" height="15.0" fill="rgb(231,17,54)" rx="2" ry="2" />
<text  x="94.47" y="543.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="900.9" y="597" width="0.2" height="15.0" fill="rgb(229,113,39)" rx="2" ry="2" />
<text  x="903.88" y="607.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="1188.8" y="693" width="0.2" height="15.0" fill="rgb(241,163,19)" rx="2" ry="2" />
<text  x="1191.81" y="703.5" ></text>
</g>
<g >
<title>modsecurity::Variables::KeyExclusions::toOmit (1 samples, 0.02%)</title><rect x="96.4" y="501" width="0.2" height="15.0" fill="rgb(217,34,52)" rx="2" ry="2" />
<text  x="99.42" y="511.5" ></text>
</g>
<g >
<title>conditional (4 samples, 0.07%)</title><rect x="946.4" y="421" width="0.8" height="15.0" fill="rgb(251,196,44)" rx="2" ry="2" />
<text  x="949.37" y="431.5" ></text>
</g>
<g >
<title>operator new@plt (1 samples, 0.02%)</title><rect x="419.9" y="421" width="0.2" height="15.0" fill="rgb(242,94,46)" rx="2" ry="2" />
<text  x="422.94" y="431.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="501" width="0.2" height="15.0" fill="rgb(228,106,47)" rx="2" ry="2" />
<text  x="92.69" y="511.5" ></text>
</g>
<g >
<title>xmlXPathRunEval (1 samples, 0.02%)</title><rect x="84.4" y="501" width="0.2" height="15.0" fill="rgb(210,219,8)" rx="2" ry="2" />
<text  x="87.36" y="511.5" ></text>
</g>
<g >
<title>sys_epoll_wait (10 samples, 0.17%)</title><rect x="84.9" y="677" width="2.0" height="15.0" fill="rgb(210,30,38)" rx="2" ry="2" />
<text  x="87.95" y="687.5" ></text>
</g>
<g >
<title>std::string::_M_data (31 samples, 0.52%)</title><rect x="459.5" y="437" width="6.1" height="15.0" fill="rgb(224,56,49)" rx="2" ry="2" />
<text  x="462.50" y="447.5" ></text>
</g>
<g >
<title>~basic_string (1 samples, 0.02%)</title><rect x="587.0" y="485" width="0.2" height="15.0" fill="rgb(224,209,11)" rx="2" ry="2" />
<text  x="590.05" y="495.5" ></text>
</g>
<g >
<title>_Destroy&lt;std::basic_string&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="589.6" y="469" width="0.2" height="15.0" fill="rgb(246,68,12)" rx="2" ry="2" />
<text  x="592.62" y="479.5" ></text>
</g>
<g >
<title>check_again (19 samples, 0.32%)</title><rect x="911.4" y="485" width="3.7" height="15.0" fill="rgb(214,165,13)" rx="2" ry="2" />
<text  x="914.36" y="495.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="88.1" y="437" width="0.2" height="15.0" fill="rgb(248,151,2)" rx="2" ry="2" />
<text  x="91.11" y="447.5" ></text>
</g>
<g >
<title>script (35 samples, 0.59%)</title><rect x="941.0" y="501" width="6.9" height="15.0" fill="rgb(230,73,3)" rx="2" ry="2" />
<text  x="944.03" y="511.5" ></text>
</g>
<g >
<title>do_filp_open (2 samples, 0.03%)</title><rect x="91.1" y="533" width="0.4" height="15.0" fill="rgb(233,65,45)" rx="2" ry="2" />
<text  x="94.08" y="543.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="481.8" y="453" width="0.2" height="15.0" fill="rgb(241,96,23)" rx="2" ry="2" />
<text  x="484.84" y="463.5" ></text>
</g>
<g >
<title>equality (29 samples, 0.49%)</title><rect x="1150.6" y="341" width="5.8" height="15.0" fill="rgb(207,132,25)" rx="2" ry="2" />
<text  x="1153.65" y="351.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="419.5" y="341" width="0.2" height="15.0" fill="rgb(253,86,35)" rx="2" ry="2" />
<text  x="422.55" y="351.5" ></text>
</g>
<g >
<title>tcp_transmit_skb (1 samples, 0.02%)</title><rect x="87.7" y="533" width="0.2" height="15.0" fill="rgb(250,222,32)" rx="2" ry="2" />
<text  x="90.72" y="543.5" ></text>
</g>
<g >
<title>relational (164 samples, 2.75%)</title><rect x="820.2" y="341" width="32.4" height="15.0" fill="rgb(215,97,26)" rx="2" ry="2" />
<text  x="823.20" y="351.5" >re..</text>
</g>
<g >
<title>_raw_spin_unlock (2 samples, 0.03%)</title><rect x="904.2" y="581" width="0.4" height="15.0" fill="rgb(234,141,18)" rx="2" ry="2" />
<text  x="907.25" y="591.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="900.9" y="549" width="0.2" height="15.0" fill="rgb(234,24,1)" rx="2" ry="2" />
<text  x="903.88" y="559.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (1 samples, 0.02%)</title><rect x="82.4" y="693" width="0.2" height="15.0" fill="rgb(227,201,17)" rx="2" ry="2" />
<text  x="85.38" y="703.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.19] (1 samples, 0.02%)</title><rect x="587.6" y="485" width="0.2" height="15.0" fill="rgb(221,208,20)" rx="2" ry="2" />
<text  x="590.64" y="495.5" ></text>
</g>
<g >
<title>sock_aio_write (1 samples, 0.02%)</title><rect x="87.7" y="629" width="0.2" height="15.0" fill="rgb(229,49,16)" rx="2" ry="2" />
<text  x="90.72" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="419.4" y="453" width="0.3" height="15.0" fill="rgb(211,73,4)" rx="2" ry="2" />
<text  x="422.35" y="463.5" ></text>
</g>
<g >
<title>MscCounter::MemGetRSSMB (2 samples, 0.03%)</title><rect x="91.1" y="645" width="0.4" height="15.0" fill="rgb(206,147,45)" rx="2" ry="2" />
<text  x="94.08" y="655.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::string, char&gt; (1 samples, 0.02%)</title><rect x="980.2" y="613" width="0.2" height="15.0" fill="rgb(244,153,51)" rx="2" ry="2" />
<text  x="983.18" y="623.5" ></text>
</g>
<g >
<title>shift (164 samples, 2.75%)</title><rect x="820.2" y="325" width="32.4" height="15.0" fill="rgb(214,118,47)" rx="2" ry="2" />
<text  x="823.20" y="335.5" >sh..</text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::end (1 samples, 0.02%)</title><rect x="97.4" y="501" width="0.2" height="15.0" fill="rgb(208,47,40)" rx="2" ry="2" />
<text  x="100.41" y="511.5" ></text>
</g>
<g >
<title>xmlFreeNodeList__internal_alias (1 samples, 0.02%)</title><rect x="88.3" y="597" width="0.2" height="15.0" fill="rgb(206,1,14)" rx="2" ry="2" />
<text  x="91.31" y="607.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (1 samples, 0.02%)</title><rect x="476.5" y="485" width="0.2" height="15.0" fill="rgb(254,113,30)" rx="2" ry="2" />
<text  x="479.50" y="495.5" ></text>
</g>
<g >
<title>strnstr_copy (14 samples, 0.23%)</title><rect x="936.5" y="469" width="2.7" height="15.0" fill="rgb(231,219,24)" rx="2" ry="2" />
<text  x="939.48" y="479.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="207.0" y="341" width="0.2" height="15.0" fill="rgb(207,54,29)" rx="2" ry="2" />
<text  x="209.96" y="351.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="1188.8" y="517" width="0.2" height="15.0" fill="rgb(232,118,39)" rx="2" ry="2" />
<text  x="1191.81" y="527.5" ></text>
</g>
<g >
<title>xmlXPathNewCompExpr (1 samples, 0.02%)</title><rect x="84.2" y="485" width="0.2" height="15.0" fill="rgb(242,81,7)" rx="2" ry="2" />
<text  x="87.16" y="495.5" ></text>
</g>
<g >
<title>ep_poll_callback (1 samples, 0.02%)</title><rect x="1188.8" y="149" width="0.2" height="15.0" fill="rgb(246,75,0)" rx="2" ry="2" />
<text  x="1191.81" y="159.5" ></text>
</g>
<g >
<title>perf_pmu_enable (16 samples, 0.27%)</title><rect x="901.1" y="565" width="3.1" height="15.0" fill="rgb(237,138,18)" rx="2" ry="2" />
<text  x="904.08" y="575.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (7 samples, 0.12%)</title><rect x="587.8" y="517" width="1.4" height="15.0" fill="rgb(216,12,50)" rx="2" ry="2" />
<text  x="590.84" y="527.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.02%)</title><rect x="87.7" y="421" width="0.2" height="15.0" fill="rgb(239,51,52)" rx="2" ry="2" />
<text  x="90.72" y="431.5" ></text>
</g>
<g >
<title>lexnumber (106 samples, 1.78%)</title><rect x="1167.3" y="405" width="20.9" height="15.0" fill="rgb(231,79,38)" rx="2" ry="2" />
<text  x="1170.26" y="415.5" ></text>
</g>
<g >
<title>xmlXPathNodeSetCreate__internal_alias (1 samples, 0.02%)</title><rect x="899.9" y="453" width="0.2" height="15.0" fill="rgb(228,158,5)" rx="2" ry="2" />
<text  x="902.89" y="463.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="419.4" y="389" width="0.3" height="15.0" fill="rgb(223,130,45)" rx="2" ry="2" />
<text  x="422.35" y="399.5" ></text>
</g>
<g >
<title>__copy_m&lt;modsecurity::VariableValue*&gt; (1 samples, 0.02%)</title><rect x="96.6" y="357" width="0.2" height="15.0" fill="rgb(209,0,21)" rx="2" ry="2" />
<text  x="99.62" y="367.5" ></text>
</g>
<g >
<title>check_gramm (14 samples, 0.23%)</title><rect x="640.4" y="693" width="2.8" height="15.0" fill="rgb(240,150,8)" rx="2" ry="2" />
<text  x="643.44" y="703.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.1" y="517" width="0.2" height="15.0" fill="rgb(243,207,9)" rx="2" ry="2" />
<text  x="91.11" y="527.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.02%)</title><rect x="86.9" y="677" width="0.2" height="15.0" fill="rgb(244,41,21)" rx="2" ry="2" />
<text  x="89.93" y="687.5" ></text>
</g>
<g >
<title>avx2_fdr_exec_teddy_msks4_pck (1 samples, 0.02%)</title><rect x="98.0" y="437" width="0.2" height="15.0" fill="rgb(243,151,13)" rx="2" ry="2" />
<text  x="101.00" y="447.5" ></text>
</g>
<g >
<title>nanosleep (5 samples, 0.08%)</title><rect x="90.1" y="613" width="1.0" height="15.0" fill="rgb(205,99,24)" rx="2" ry="2" />
<text  x="93.09" y="623.5" ></text>
</g>
<g >
<title>xmlParseCharData__internal_alias (1 samples, 0.02%)</title><rect x="93.1" y="501" width="0.2" height="15.0" fill="rgb(241,212,10)" rx="2" ry="2" />
<text  x="96.06" y="511.5" ></text>
</g>
<g >
<title>std::string::push_back (43 samples, 0.72%)</title><rect x="140.1" y="469" width="8.5" height="15.0" fill="rgb(243,74,12)" rx="2" ry="2" />
<text  x="143.12" y="479.5" ></text>
</g>
<g >
<title>jsY_next (4 samples, 0.07%)</title><rect x="754.1" y="405" width="0.8" height="15.0" fill="rgb(250,115,25)" rx="2" ry="2" />
<text  x="757.15" y="415.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="489.8" y="373" width="0.1" height="15.0" fill="rgb(248,124,17)" rx="2" ry="2" />
<text  x="492.75" y="383.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="597.1" y="677" width="0.2" height="15.0" fill="rgb(218,53,51)" rx="2" ry="2" />
<text  x="600.13" y="687.5" ></text>
</g>
<g >
<title>system_call_fastpath (2 samples, 0.03%)</title><rect x="82.6" y="709" width="0.4" height="15.0" fill="rgb(232,82,0)" rx="2" ry="2" />
<text  x="85.58" y="719.5" ></text>
</g>
<g >
<title>native_write_msr_safe (2 samples, 0.03%)</title><rect x="583.9" y="245" width="0.4" height="15.0" fill="rgb(209,55,44)" rx="2" ry="2" />
<text  x="586.88" y="255.5" ></text>
</g>
<g >
<title>~TransVariable (1 samples, 0.02%)</title><rect x="97.0" y="485" width="0.2" height="15.0" fill="rgb(252,14,52)" rx="2" ry="2" />
<text  x="100.01" y="495.5" ></text>
</g>
<g >
<title>schedule (5 samples, 0.08%)</title><rect x="90.1" y="533" width="1.0" height="15.0" fill="rgb(249,177,53)" rx="2" ry="2" />
<text  x="93.09" y="543.5" ></text>
</g>
<g >
<title>lex_and_parser (1 samples, 0.02%)</title><rect x="940.8" y="501" width="0.2" height="15.0" fill="rgb(208,16,20)" rx="2" ry="2" />
<text  x="943.83" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (5 samples, 0.08%)</title><rect x="90.1" y="597" width="1.0" height="15.0" fill="rgb(242,96,4)" rx="2" ry="2" />
<text  x="93.09" y="607.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="1188.8" y="389" width="0.2" height="15.0" fill="rgb(247,149,15)" rx="2" ry="2" />
<text  x="1191.81" y="399.5" ></text>
</g>
<g >
<title>modsecurity::Utils::Regex::searchAll (1 samples, 0.02%)</title><rect x="98.8" y="469" width="0.2" height="15.0" fill="rgb(238,67,23)" rx="2" ry="2" />
<text  x="101.79" y="479.5" ></text>
</g>
<g >
<title>worker_function (2,521 samples, 42.25%)</title><rect x="91.5" y="693" width="498.5" height="15.0" fill="rgb(233,224,18)" rx="2" ry="2" />
<text  x="94.47" y="703.5" >worker_function</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="831.7" y="197" width="0.2" height="15.0" fill="rgb(228,70,51)" rx="2" ry="2" />
<text  x="834.67" y="207.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="494.9" y="437" width="0.2" height="15.0" fill="rgb(225,64,11)" rx="2" ry="2" />
<text  x="497.89" y="447.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::RemoveMSSqlComments::evaluate (61 samples, 1.02%)</title><rect x="253.8" y="501" width="12.1" height="15.0" fill="rgb(240,207,52)" rx="2" ry="2" />
<text  x="256.83" y="511.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="899.9" y="421" width="0.2" height="15.0" fill="rgb(242,65,17)" rx="2" ry="2" />
<text  x="902.89" y="431.5" ></text>
</g>
<g >
<title>plugin_ognl_check (19 samples, 0.32%)</title><rect x="911.4" y="501" width="3.7" height="15.0" fill="rgb(220,63,53)" rx="2" ry="2" />
<text  x="914.36" y="511.5" ></text>
</g>
<g >
<title>perf_pmu_enable (2 samples, 0.03%)</title><rect x="583.9" y="309" width="0.4" height="15.0" fill="rgb(211,82,2)" rx="2" ry="2" />
<text  x="586.88" y="319.5" ></text>
</g>
<g >
<title>schedule (3 samples, 0.05%)</title><rect x="1189.4" y="613" width="0.6" height="15.0" fill="rgb(222,208,43)" rx="2" ry="2" />
<text  x="1192.41" y="623.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="940.8" y="469" width="0.2" height="15.0" fill="rgb(246,137,7)" rx="2" ry="2" />
<text  x="943.83" y="479.5" ></text>
</g>
<g >
<title>xmlParseTryOrFinish (1 samples, 0.02%)</title><rect x="93.1" y="517" width="0.2" height="15.0" fill="rgb(240,225,3)" rx="2" ry="2" />
<text  x="96.06" y="527.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (197 samples, 3.30%)</title><rect x="940.8" y="581" width="39.0" height="15.0" fill="rgb(207,113,51)" rx="2" ry="2" />
<text  x="943.83" y="591.5" >mod..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="1188.8" y="357" width="0.2" height="15.0" fill="rgb(215,52,24)" rx="2" ry="2" />
<text  x="1191.81" y="367.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="900.9" y="565" width="0.2" height="15.0" fill="rgb(211,88,21)" rx="2" ry="2" />
<text  x="903.88" y="575.5" ></text>
</g>
<g >
<title>__uninitialized_move_if_noexcept_a&lt;modsecurity::VariableValue**, modsecurity::VariableValue**, std::allocator&lt;modsecurity::VariableValue*&gt; &gt; (1 samples, 0.02%)</title><rect x="96.6" y="469" width="0.2" height="15.0" fill="rgb(225,190,12)" rx="2" ry="2" />
<text  x="99.62" y="479.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.1" y="485" width="0.2" height="15.0" fill="rgb(219,221,43)" rx="2" ry="2" />
<text  x="91.11" y="495.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (197 samples, 3.30%)</title><rect x="940.8" y="549" width="39.0" height="15.0" fill="rgb(254,47,16)" rx="2" ry="2" />
<text  x="943.83" y="559.5" >mod..</text>
</g>
<g >
<title>[libstdc++.so.6.0.19] (1 samples, 0.02%)</title><rect x="587.0" y="469" width="0.2" height="15.0" fill="rgb(242,68,0)" rx="2" ry="2" />
<text  x="590.05" y="479.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="489.8" y="325" width="0.1" height="15.0" fill="rgb(242,22,16)" rx="2" ry="2" />
<text  x="492.75" y="335.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="687.9" y="613" width="0.2" height="15.0" fill="rgb(249,138,10)" rx="2" ry="2" />
<text  x="690.90" y="623.5" ></text>
</g>
<g >
<title>trace_do_page_fault (3 samples, 0.05%)</title><rect x="429.0" y="341" width="0.6" height="15.0" fill="rgb(236,58,39)" rx="2" ry="2" />
<text  x="432.04" y="351.5" ></text>
</g>
<g >
<title>xmlFreeDoc__internal_alias (1 samples, 0.02%)</title><rect x="88.3" y="613" width="0.2" height="15.0" fill="rgb(241,31,33)" rx="2" ry="2" />
<text  x="91.31" y="623.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="1188.8" y="325" width="0.2" height="15.0" fill="rgb(240,102,0)" rx="2" ry="2" />
<text  x="1191.81" y="335.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="517" width="0.2" height="15.0" fill="rgb(215,192,48)" rx="2" ry="2" />
<text  x="92.69" y="527.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (2 samples, 0.03%)</title><rect x="135.8" y="453" width="0.4" height="15.0" fill="rgb(218,213,24)" rx="2" ry="2" />
<text  x="138.77" y="463.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="1188.8" y="341" width="0.2" height="15.0" fill="rgb(219,116,40)" rx="2" ry="2" />
<text  x="1191.81" y="351.5" ></text>
</g>
<g >
<title>xmlXPathCompOpEval (1 samples, 0.02%)</title><rect x="899.9" y="501" width="0.2" height="15.0" fill="rgb(240,191,46)" rx="2" ry="2" />
<text  x="902.89" y="511.5" ></text>
</g>
<g >
<title>_check_sql (1 samples, 0.02%)</title><rect x="82.4" y="533" width="0.2" height="15.0" fill="rgb(229,66,40)" rx="2" ry="2" />
<text  x="85.38" y="543.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_sharable (7 samples, 0.12%)</title><rect x="262.7" y="437" width="1.4" height="15.0" fill="rgb(213,93,41)" rx="2" ry="2" />
<text  x="265.73" y="447.5" ></text>
</g>
<g >
<title>modsecurity::RequestBodyProcessor::XML::processChunk (1 samples, 0.02%)</title><rect x="93.3" y="549" width="0.2" height="15.0" fill="rgb(236,109,9)" rx="2" ry="2" />
<text  x="96.25" y="559.5" ></text>
</g>
<g >
<title>__put_compound_page (1 samples, 0.02%)</title><rect x="87.5" y="485" width="0.2" height="15.0" fill="rgb(218,39,10)" rx="2" ry="2" />
<text  x="90.52" y="495.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.02%)</title><rect x="83.0" y="453" width="0.2" height="15.0" fill="rgb(248,194,15)" rx="2" ry="2" />
<text  x="85.97" y="463.5" ></text>
</g>
<g >
<title>expression (240 samples, 4.02%)</title><rect x="1140.8" y="469" width="47.4" height="15.0" fill="rgb(228,151,39)" rx="2" ry="2" />
<text  x="1143.76" y="479.5" >expr..</text>
</g>
<g >
<title>__perf_event_task_sched_out (1 samples, 0.02%)</title><rect x="85.1" y="581" width="0.2" height="15.0" fill="rgb(225,68,21)" rx="2" ry="2" />
<text  x="88.15" y="591.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="88.7" y="437" width="0.4" height="15.0" fill="rgb(220,109,29)" rx="2" ry="2" />
<text  x="91.71" y="447.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="87.7" y="469" width="0.2" height="15.0" fill="rgb(232,198,25)" rx="2" ry="2" />
<text  x="90.72" y="479.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="90.1" y="277" width="0.2" height="15.0" fill="rgb(240,169,49)" rx="2" ry="2" />
<text  x="93.09" y="287.5" ></text>
</g>
<g >
<title>do_sys_open (2 samples, 0.03%)</title><rect x="91.1" y="549" width="0.4" height="15.0" fill="rgb(219,217,29)" rx="2" ry="2" />
<text  x="94.08" y="559.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="419.4" y="373" width="0.1" height="15.0" fill="rgb(229,39,8)" rx="2" ry="2" />
<text  x="422.35" y="383.5" ></text>
</g>
<g >
<title>acc_payload (1 samples, 0.02%)</title><rect x="589.8" y="613" width="0.2" height="15.0" fill="rgb(225,145,6)" rx="2" ry="2" />
<text  x="592.82" y="623.5" ></text>
</g>
<g >
<title>~_Rb_tree (2 samples, 0.03%)</title><rect x="89.5" y="613" width="0.4" height="15.0" fill="rgb(230,149,17)" rx="2" ry="2" />
<text  x="92.50" y="623.5" ></text>
</g>
<g >
<title>std::string::_M_replace_safe (1 samples, 0.02%)</title><rect x="136.2" y="469" width="0.2" height="15.0" fill="rgb(248,209,31)" rx="2" ry="2" />
<text  x="139.17" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="699.2" y="693" width="0.2" height="15.0" fill="rgb(214,74,47)" rx="2" ry="2" />
<text  x="702.17" y="703.5" ></text>
</g>
<g >
<title>eb64_lookup_le (1 samples, 0.02%)</title><rect x="89.9" y="645" width="0.2" height="15.0" fill="rgb(241,146,28)" rx="2" ry="2" />
<text  x="92.89" y="655.5" ></text>
</g>
<g >
<title>~__shared_count (2 samples, 0.03%)</title><rect x="586.1" y="469" width="0.4" height="15.0" fill="rgb(246,25,11)" rx="2" ry="2" />
<text  x="589.06" y="479.5" ></text>
</g>
<g >
<title>smp_call_function_single_interrupt (2 samples, 0.03%)</title><rect x="583.9" y="421" width="0.4" height="15.0" fill="rgb(246,152,0)" rx="2" ry="2" />
<text  x="586.88" y="431.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="900.9" y="501" width="0.2" height="15.0" fill="rgb(241,150,28)" rx="2" ry="2" />
<text  x="903.88" y="511.5" ></text>
</g>
<g >
<title>jsY_isdec (1 samples, 0.02%)</title><rect x="759.3" y="389" width="0.2" height="15.0" fill="rgb(249,103,12)" rx="2" ry="2" />
<text  x="762.29" y="399.5" ></text>
</g>
<g >
<title>futex_wait_queue_me (3 samples, 0.05%)</title><rect x="1189.4" y="629" width="0.6" height="15.0" fill="rgb(213,119,10)" rx="2" ry="2" />
<text  x="1192.41" y="639.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (1 samples, 0.02%)</title><rect x="704.3" y="485" width="0.2" height="15.0" fill="rgb(221,40,1)" rx="2" ry="2" />
<text  x="707.32" y="495.5" ></text>
</g>
<g >
<title>spawn_children (8 samples, 0.13%)</title><rect x="703.5" y="661" width="1.6" height="15.0" fill="rgb(247,79,51)" rx="2" ry="2" />
<text  x="706.52" y="671.5" ></text>
</g>
<g >
<title>operator+&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; (1 samples, 0.02%)</title><rect x="476.7" y="501" width="0.2" height="15.0" fill="rgb(207,185,27)" rx="2" ry="2" />
<text  x="479.70" y="511.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckSpringEl (14 samples, 0.23%)</title><rect x="936.5" y="517" width="2.7" height="15.0" fill="rgb(241,189,8)" rx="2" ry="2" />
<text  x="939.48" y="527.5" ></text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="1188.8" y="661" width="0.2" height="15.0" fill="rgb(221,58,34)" rx="2" ry="2" />
<text  x="1191.81" y="671.5" ></text>
</g>
<g >
<title>finish_task_switch (6 samples, 0.10%)</title><rect x="1126.3" y="613" width="1.2" height="15.0" fill="rgb(226,87,50)" rx="2" ry="2" />
<text  x="1129.32" y="623.5" ></text>
</g>
<g >
<title>__exchange_and_add (2 samples, 0.03%)</title><rect x="586.1" y="421" width="0.4" height="15.0" fill="rgb(235,74,27)" rx="2" ry="2" />
<text  x="589.06" y="431.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (984 samples, 16.49%)</title><rect x="705.5" y="677" width="194.6" height="15.0" fill="rgb(232,104,8)" rx="2" ry="2" />
<text  x="708.50" y="687.5" >handleHttpRequestBody</text>
</g>
<g >
<title>operator new (2 samples, 0.03%)</title><rect x="83.4" y="453" width="0.4" height="15.0" fill="rgb(218,212,32)" rx="2" ry="2" />
<text  x="86.37" y="463.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.02%)</title><rect x="87.7" y="373" width="0.2" height="15.0" fill="rgb(241,168,20)" rx="2" ry="2" />
<text  x="90.72" y="383.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.02%)</title><rect x="699.2" y="645" width="0.2" height="15.0" fill="rgb(223,228,8)" rx="2" ry="2" />
<text  x="702.17" y="655.5" ></text>
</g>
<g >
<title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::clear (1 samples, 0.02%)</title><rect x="89.3" y="629" width="0.2" height="15.0" fill="rgb(242,147,43)" rx="2" ry="2" />
<text  x="92.30" y="639.5" ></text>
</g>
<g >
<title>xmlPatterncompile__internal_alias (1 samples, 0.02%)</title><rect x="979.8" y="517" width="0.2" height="15.0" fill="rgb(242,21,42)" rx="2" ry="2" />
<text  x="982.79" y="527.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="1110.5" y="533" width="0.4" height="15.0" fill="rgb(241,46,53)" rx="2" ry="2" />
<text  x="1113.50" y="543.5" ></text>
</g>
<g >
<title>event_process_active_single_queue.isra.31 (205 samples, 3.44%)</title><rect x="939.4" y="725" width="40.6" height="15.0" fill="rgb(221,21,36)" rx="2" ry="2" />
<text  x="942.45" y="735.5" >eve..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="258.2" y="453" width="0.2" height="15.0" fill="rgb(222,162,0)" rx="2" ry="2" />
<text  x="261.18" y="463.5" ></text>
</g>
<g >
<title>primary (94 samples, 1.58%)</title><rect x="834.0" y="213" width="18.6" height="15.0" fill="rgb(212,54,9)" rx="2" ry="2" />
<text  x="837.04" y="223.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::NormalisePathWin::evaluate (47 samples, 0.79%)</title><rect x="244.5" y="501" width="9.3" height="15.0" fill="rgb(218,17,52)" rx="2" ry="2" />
<text  x="247.54" y="511.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="454.0" y="405" width="0.2" height="15.0" fill="rgb(249,86,18)" rx="2" ry="2" />
<text  x="456.96" y="415.5" ></text>
</g>
<g >
<title>__libc_start_main (8 samples, 0.13%)</title><rect x="703.5" y="709" width="1.6" height="15.0" fill="rgb(231,144,3)" rx="2" ry="2" />
<text  x="706.52" y="719.5" ></text>
</g>
<g >
<title>sys_sendto (1 samples, 0.02%)</title><rect x="1188.6" y="693" width="0.2" height="15.0" fill="rgb(236,222,29)" rx="2" ry="2" />
<text  x="1191.62" y="703.5" ></text>
</g>
<g >
<title>epoll_dispatch (7 samples, 0.12%)</title><rect x="703.5" y="581" width="1.4" height="15.0" fill="rgb(230,16,50)" rx="2" ry="2" />
<text  x="706.52" y="591.5" ></text>
</g>
<g >
<title>jsU_islowerrune@plt (3 samples, 0.05%)</title><rect x="789.9" y="357" width="0.6" height="15.0" fill="rgb(242,110,47)" rx="2" ry="2" />
<text  x="792.94" y="367.5" ></text>
</g>
<g >
<title>jsY_iswhite@plt (1 samples, 0.02%)</title><rect x="1165.9" y="405" width="0.2" height="15.0" fill="rgb(230,175,14)" rx="2" ry="2" />
<text  x="1168.87" y="415.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="88.7" y="357" width="0.2" height="15.0" fill="rgb(225,33,35)" rx="2" ry="2" />
<text  x="91.71" y="367.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.02%)</title><rect x="258.2" y="437" width="0.2" height="15.0" fill="rgb(211,72,44)" rx="2" ry="2" />
<text  x="261.18" y="447.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (174 samples, 2.92%)</title><rect x="904.8" y="533" width="34.4" height="15.0" fill="rgb(252,33,25)" rx="2" ry="2" />
<text  x="907.84" y="543.5" >mo..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="894.2" y="277" width="0.2" height="15.0" fill="rgb(254,142,6)" rx="2" ry="2" />
<text  x="897.16" y="287.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (1 samples, 0.02%)</title><rect x="589.6" y="437" width="0.2" height="15.0" fill="rgb(224,71,26)" rx="2" ry="2" />
<text  x="592.62" y="447.5" ></text>
</g>
<g >
<title>process_special_sym (17 samples, 0.28%)</title><rect x="699.4" y="709" width="3.3" height="15.0" fill="rgb(242,50,29)" rx="2" ry="2" />
<text  x="702.37" y="719.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.isra.7 (1 samples, 0.02%)</title><rect x="900.3" y="661" width="0.2" height="15.0" fill="rgb(218,9,33)" rx="2" ry="2" />
<text  x="903.29" y="671.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckJavaScript (307 samples, 5.14%)</title><rect x="1127.5" y="549" width="60.7" height="15.0" fill="rgb(227,73,5)" rx="2" ry="2" />
<text  x="1130.51" y="559.5" >modsec..</text>
</g>
<g >
<title>php_scan_bytes (15 samples, 0.25%)</title><rect x="896.9" y="501" width="3.0" height="15.0" fill="rgb(219,76,44)" rx="2" ry="2" />
<text  x="899.93" y="511.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="583.7" y="341" width="0.2" height="15.0" fill="rgb(229,44,54)" rx="2" ry="2" />
<text  x="586.69" y="351.5" ></text>
</g>
<g >
<title>pvclock_gtod_notify (1 samples, 0.02%)</title><rect x="894.2" y="165" width="0.2" height="15.0" fill="rgb(225,101,44)" rx="2" ry="2" />
<text  x="897.16" y="175.5" ></text>
</g>
<g >
<title>std::type_info::operator== (1 samples, 0.02%)</title><rect x="476.3" y="389" width="0.2" height="15.0" fill="rgb(215,202,12)" rx="2" ry="2" />
<text  x="479.30" y="399.5" ></text>
</g>
<g >
<title>MscFinalizeMgr::FinalizeRoutine (10 samples, 0.17%)</title><rect x="87.9" y="677" width="2.0" height="15.0" fill="rgb(208,32,51)" rx="2" ry="2" />
<text  x="90.92" y="687.5" ></text>
</g>
<g >
<title>do_nanosleep (5 samples, 0.08%)</title><rect x="90.1" y="549" width="1.0" height="15.0" fill="rgb(250,28,46)" rx="2" ry="2" />
<text  x="93.09" y="559.5" ></text>
</g>
<g >
<title>flush_smp_call_function_queue (2 samples, 0.03%)</title><rect x="583.9" y="389" width="0.4" height="15.0" fill="rgb(249,224,40)" rx="2" ry="2" />
<text  x="586.88" y="399.5" ></text>
</g>
<g >
<title>native_apic_msr_write (1 samples, 0.02%)</title><rect x="1110.3" y="517" width="0.2" height="15.0" fill="rgb(254,40,51)" rx="2" ry="2" />
<text  x="1113.31" y="527.5" ></text>
</g>
<g >
<title>x86_pmu_enable (2 samples, 0.03%)</title><rect x="82.6" y="549" width="0.4" height="15.0" fill="rgb(253,49,18)" rx="2" ry="2" />
<text  x="85.58" y="559.5" ></text>
</g>
<g >
<title>sock_aio_read (1 samples, 0.02%)</title><rect x="87.5" y="629" width="0.2" height="15.0" fill="rgb(218,41,19)" rx="2" ry="2" />
<text  x="90.52" y="639.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (2 samples, 0.03%)</title><rect x="82.6" y="517" width="0.4" height="15.0" fill="rgb(252,139,2)" rx="2" ry="2" />
<text  x="85.58" y="527.5" ></text>
</g>
<g >
<title>std::string::push_back (112 samples, 1.88%)</title><rect x="454.2" y="469" width="22.1" height="15.0" fill="rgb(239,122,25)" rx="2" ry="2" />
<text  x="457.16" y="479.5" >s..</text>
</g>
<g >
<title>path_openat (2 samples, 0.03%)</title><rect x="91.1" y="517" width="0.4" height="15.0" fill="rgb(251,27,45)" rx="2" ry="2" />
<text  x="94.08" y="527.5" ></text>
</g>
<g >
<title>modsecurity::collection::backend::InMemoryPerProcess::resolveRegularExpression (1 samples, 0.02%)</title><rect x="476.9" y="501" width="0.2" height="15.0" fill="rgb(248,4,10)" rx="2" ry="2" />
<text  x="479.90" y="511.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="82.6" y="597" width="0.4" height="15.0" fill="rgb(218,51,28)" rx="2" ry="2" />
<text  x="85.58" y="607.5" ></text>
</g>
<g >
<title>sleep (5 samples, 0.08%)</title><rect x="90.1" y="629" width="1.0" height="15.0" fill="rgb(225,70,45)" rx="2" ry="2" />
<text  x="93.09" y="639.5" ></text>
</g>
<g >
<title>jsY_isidentifierstart (234 samples, 3.92%)</title><rect x="759.5" y="389" width="46.3" height="15.0" fill="rgb(230,31,0)" rx="2" ry="2" />
<text  x="762.49" y="399.5" >jsY_..</text>
</g>
<g >
<title>modsecurity::Rule::obtainVariable (6 samples, 0.10%)</title><rect x="939.6" y="565" width="1.2" height="15.0" fill="rgb(208,116,44)" rx="2" ry="2" />
<text  x="942.64" y="575.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckSQLi (1 samples, 0.02%)</title><rect x="82.4" y="581" width="0.2" height="15.0" fill="rgb(248,94,3)" rx="2" ry="2" />
<text  x="85.38" y="591.5" ></text>
</g>
<g >
<title>modsecurity::utils::string::streq (1 samples, 0.02%)</title><rect x="97.2" y="501" width="0.2" height="15.0" fill="rgb(229,109,29)" rx="2" ry="2" />
<text  x="100.21" y="511.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_sharable (6 samples, 0.10%)</title><rect x="147.4" y="437" width="1.2" height="15.0" fill="rgb(211,32,37)" rx="2" ry="2" />
<text  x="150.44" y="447.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (983 samples, 16.47%)</title><rect x="705.5" y="597" width="194.4" height="15.0" fill="rgb(220,166,5)" rx="2" ry="2" />
<text  x="708.50" y="607.5" >modsecurity::operators::O..</text>
</g>
<g >
<title>xmlNewPatParserContext (1 samples, 0.02%)</title><rect x="84.0" y="453" width="0.2" height="15.0" fill="rgb(220,18,23)" rx="2" ry="2" />
<text  x="86.96" y="463.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="88.1" y="389" width="0.2" height="15.0" fill="rgb(218,202,4)" rx="2" ry="2" />
<text  x="91.11" y="399.5" ></text>
</g>
<g >
<title>jsU_isupperrune@plt (1 samples, 0.02%)</title><rect x="803.8" y="357" width="0.2" height="15.0" fill="rgb(224,45,52)" rx="2" ry="2" />
<text  x="806.79" y="367.5" ></text>
</g>
<g >
<title>pthread_mutex_lock (1 samples, 0.02%)</title><rect x="585.5" y="437" width="0.2" height="15.0" fill="rgb(209,14,29)" rx="2" ry="2" />
<text  x="588.47" y="447.5" ></text>
</g>
<g >
<title>xmlXPathNewContext__internal_alias (2 samples, 0.03%)</title><rect x="84.6" y="517" width="0.3" height="15.0" fill="rgb(240,125,51)" rx="2" ry="2" />
<text  x="87.55" y="527.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (307 samples, 5.14%)</title><rect x="1127.5" y="565" width="60.7" height="15.0" fill="rgb(217,205,49)" rx="2" ry="2" />
<text  x="1130.51" y="575.5" >modsec..</text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="92.7" y="469" width="0.2" height="15.0" fill="rgb(226,120,31)" rx="2" ry="2" />
<text  x="95.66" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="900.9" y="405" width="0.2" height="15.0" fill="rgb(247,111,7)" rx="2" ry="2" />
<text  x="903.88" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="92.5" y="533" width="0.2" height="15.0" fill="rgb(246,158,24)" rx="2" ry="2" />
<text  x="95.46" y="543.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (737 samples, 12.35%)</title><rect x="980.4" y="661" width="145.7" height="15.0" fill="rgb(241,113,53)" rx="2" ry="2" />
<text  x="983.38" y="671.5" >modsecurity::opera..</text>
</g>
<g >
<title>do_futex (2 samples, 0.03%)</title><rect x="82.6" y="677" width="0.4" height="15.0" fill="rgb(228,205,29)" rx="2" ry="2" />
<text  x="85.58" y="687.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::Transaction (5 samples, 0.08%)</title><rect x="91.5" y="565" width="1.0" height="15.0" fill="rgb(239,101,48)" rx="2" ry="2" />
<text  x="94.47" y="575.5" ></text>
</g>
<g >
<title>jsP_next (154 samples, 2.58%)</title><rect x="1157.8" y="453" width="30.4" height="15.0" fill="rgb(209,14,45)" rx="2" ry="2" />
<text  x="1160.77" y="463.5" >js..</text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="597.1" y="613" width="0.2" height="15.0" fill="rgb(214,32,51)" rx="2" ry="2" />
<text  x="600.13" y="623.5" ></text>
</g>
<g >
<title>put_prev_task_fair (1 samples, 0.02%)</title><rect x="704.3" y="437" width="0.2" height="15.0" fill="rgb(215,227,42)" rx="2" ry="2" />
<text  x="707.32" y="447.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (2,493 samples, 41.78%)</title><rect x="94.8" y="533" width="493.0" height="15.0" fill="rgb(220,115,39)" rx="2" ry="2" />
<text  x="97.84" y="543.5" >modsecurity::Rule::evaluate</text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="96.8" y="437" width="0.2" height="15.0" fill="rgb(249,65,13)" rx="2" ry="2" />
<text  x="99.81" y="447.5" ></text>
</g>
<g >
<title>clear_page_c_e (2 samples, 0.03%)</title><rect x="429.0" y="261" width="0.4" height="15.0" fill="rgb(224,201,42)" rx="2" ry="2" />
<text  x="432.04" y="271.5" ></text>
</g>
<g >
<title>handleHttpRequest (205 samples, 3.44%)</title><rect x="939.4" y="661" width="40.6" height="15.0" fill="rgb(215,160,54)" rx="2" ry="2" />
<text  x="942.45" y="671.5" >han..</text>
</g>
<g >
<title>ognllex@plt (3 samples, 0.05%)</title><rect x="1125.1" y="565" width="0.6" height="15.0" fill="rgb(215,133,17)" rx="2" ry="2" />
<text  x="1128.14" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (24 samples, 0.40%)</title><rect x="490.3" y="453" width="4.8" height="15.0" fill="rgb(229,156,19)" rx="2" ry="2" />
<text  x="493.35" y="463.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="583.7" y="405" width="0.2" height="15.0" fill="rgb(242,106,10)" rx="2" ry="2" />
<text  x="586.69" y="415.5" ></text>
</g>
<g >
<title>xmlXPathNewContext__internal_alias (1 samples, 0.02%)</title><rect x="1189.2" y="533" width="0.2" height="15.0" fill="rgb(243,98,9)" rx="2" ry="2" />
<text  x="1192.21" y="543.5" ></text>
</g>
<g >
<title>xmlNodeGetContent__internal_alias (1 samples, 0.02%)</title><rect x="83.8" y="517" width="0.2" height="15.0" fill="rgb(224,188,32)" rx="2" ry="2" />
<text  x="86.76" y="527.5" ></text>
</g>
<g >
<title>do_async_page_fault (3 samples, 0.05%)</title><rect x="429.0" y="357" width="0.6" height="15.0" fill="rgb(248,190,19)" rx="2" ry="2" />
<text  x="432.04" y="367.5" ></text>
</g>
<g >
<title>__do_page_fault (1 samples, 0.02%)</title><rect x="489.9" y="405" width="0.2" height="15.0" fill="rgb(208,49,0)" rx="2" ry="2" />
<text  x="492.95" y="415.5" ></text>
</g>
<g >
<title>system_call_fastpath (3 samples, 0.05%)</title><rect x="1189.4" y="693" width="0.6" height="15.0" fill="rgb(219,136,41)" rx="2" ry="2" />
<text  x="1192.41" y="703.5" ></text>
</g>
<g >
<title>avx2_hwlmExec (2 samples, 0.03%)</title><rect x="98.2" y="453" width="0.4" height="15.0" fill="rgb(221,198,24)" rx="2" ry="2" />
<text  x="101.20" y="463.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::CssDecode::css_decode_inplace (62 samples, 1.04%)</title><rect x="136.4" y="501" width="12.2" height="15.0" fill="rgb(222,41,32)" rx="2" ry="2" />
<text  x="139.37" y="511.5" ></text>
</g>
<g >
<title>MscTimeoutHandler::TimeoutRoutine (2 samples, 0.03%)</title><rect x="91.1" y="677" width="0.4" height="15.0" fill="rgb(242,69,18)" rx="2" ry="2" />
<text  x="94.08" y="687.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="589.4" y="485" width="0.2" height="15.0" fill="rgb(254,176,5)" rx="2" ry="2" />
<text  x="592.42" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (8 samples, 0.13%)</title><rect x="85.3" y="565" width="1.6" height="15.0" fill="rgb(234,209,9)" rx="2" ry="2" />
<text  x="88.34" y="575.5" ></text>
</g>
<g >
<title>logor (164 samples, 2.75%)</title><rect x="820.2" y="437" width="32.4" height="15.0" fill="rgb(220,220,31)" rx="2" ry="2" />
<text  x="823.20" y="447.5" >lo..</text>
</g>
<g >
<title>main (8 samples, 0.13%)</title><rect x="703.5" y="693" width="1.6" height="15.0" fill="rgb(213,182,32)" rx="2" ry="2" />
<text  x="706.52" y="703.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.02%)</title><rect x="1170.6" y="341" width="0.2" height="15.0" fill="rgb(225,143,53)" rx="2" ry="2" />
<text  x="1173.62" y="351.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="83.2" y="517" width="0.2" height="15.0" fill="rgb(242,154,28)" rx="2" ry="2" />
<text  x="86.17" y="527.5" ></text>
</g>
<g >
<title>process_frame_cb (2 samples, 0.03%)</title><rect x="1189.0" y="677" width="0.4" height="15.0" fill="rgb(217,187,35)" rx="2" ry="2" />
<text  x="1192.01" y="687.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (307 samples, 5.14%)</title><rect x="1127.5" y="629" width="60.7" height="15.0" fill="rgb(210,228,31)" rx="2" ry="2" />
<text  x="1130.51" y="639.5" >modsec..</text>
</g>
<g >
<title>xmlXPathCompOpEval (1 samples, 0.02%)</title><rect x="899.9" y="533" width="0.2" height="15.0" fill="rgb(221,74,51)" rx="2" ry="2" />
<text  x="902.89" y="543.5" ></text>
</g>
<g >
<title>page_add_new_anon_rmap (1 samples, 0.02%)</title><rect x="489.9" y="373" width="0.2" height="15.0" fill="rgb(217,113,13)" rx="2" ry="2" />
<text  x="492.95" y="383.5" ></text>
</g>
<g >
<title>avx2_fdrExec (1 samples, 0.02%)</title><rect x="98.0" y="453" width="0.2" height="15.0" fill="rgb(209,130,10)" rx="2" ry="2" />
<text  x="101.00" y="463.5" ></text>
</g>
<g >
<title>__copy_move_a2&lt;true, modsecurity::VariableValue**, modsecurity::VariableValue**&gt; (1 samples, 0.02%)</title><rect x="96.6" y="389" width="0.2" height="15.0" fill="rgb(211,181,5)" rx="2" ry="2" />
<text  x="99.62" y="399.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::Base64DecodeExt::evaluate (185 samples, 3.10%)</title><rect x="99.8" y="501" width="36.6" height="15.0" fill="rgb(213,157,4)" rx="2" ry="2" />
<text  x="102.78" y="511.5" >mod..</text>
</g>
<g >
<title>xmlXPathEval__internal_alias (1 samples, 0.02%)</title><rect x="979.8" y="565" width="0.2" height="15.0" fill="rgb(221,156,3)" rx="2" ry="2" />
<text  x="982.79" y="575.5" ></text>
</g>
<g >
<title>xmlXPathCompOpEval (1 samples, 0.02%)</title><rect x="899.9" y="517" width="0.2" height="15.0" fill="rgb(247,175,12)" rx="2" ry="2" />
<text  x="902.89" y="527.5" ></text>
</g>
<g >
<title>modsecurity::operators::PmHsFromFile::evaluate (3 samples, 0.05%)</title><rect x="98.0" y="485" width="0.6" height="15.0" fill="rgb(205,50,42)" rx="2" ry="2" />
<text  x="101.00" y="495.5" ></text>
</g>
<g >
<title>logand (214 samples, 3.59%)</title><rect x="705.7" y="405" width="42.3" height="15.0" fill="rgb(232,93,4)" rx="2" ry="2" />
<text  x="708.70" y="415.5" >log..</text>
</g>
<g >
<title>xmlXPathCompUnionExpr (1 samples, 0.02%)</title><rect x="939.2" y="405" width="0.2" height="15.0" fill="rgb(247,125,49)" rx="2" ry="2" />
<text  x="942.25" y="415.5" ></text>
</g>
<g >
<title>jsU_bsearch (62 samples, 1.04%)</title><rect x="791.5" y="341" width="12.3" height="15.0" fill="rgb(221,57,11)" rx="2" ry="2" />
<text  x="794.53" y="351.5" ></text>
</g>
<g >
<title>check_php_grammar (1 samples, 0.02%)</title><rect x="1125.7" y="597" width="0.2" height="15.0" fill="rgb(208,50,39)" rx="2" ry="2" />
<text  x="1128.73" y="607.5" ></text>
</g>
<g >
<title>modsecurity::Rule::containsTag (4 samples, 0.07%)</title><rect x="94.0" y="533" width="0.8" height="15.0" fill="rgb(233,223,23)" rx="2" ry="2" />
<text  x="97.05" y="543.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (737 samples, 12.35%)</title><rect x="980.4" y="677" width="145.7" height="15.0" fill="rgb(211,70,29)" rx="2" ry="2" />
<text  x="983.38" y="687.5" >modsecurity::Rule:..</text>
</g>
<g >
<title>modsecurity::actions::transformations::RemoveNulls::evaluate (192 samples, 3.22%)</title><rect x="265.9" y="501" width="38.0" height="15.0" fill="rgb(234,5,50)" rx="2" ry="2" />
<text  x="268.89" y="511.5" >mod..</text>
</g>
<g >
<title>__inode_permission (1 samples, 0.02%)</title><rect x="91.3" y="469" width="0.2" height="15.0" fill="rgb(252,91,15)" rx="2" ry="2" />
<text  x="94.28" y="479.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::HtmlEntityDecode::inplace (273 samples, 4.58%)</title><rect x="153.2" y="485" width="54.0" height="15.0" fill="rgb(251,66,30)" rx="2" ry="2" />
<text  x="156.17" y="495.5" >modse..</text>
</g>
<g >
<title>sys_futex (3 samples, 0.05%)</title><rect x="1189.4" y="677" width="0.6" height="15.0" fill="rgb(228,154,13)" rx="2" ry="2" />
<text  x="1192.41" y="687.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (10 samples, 0.17%)</title><rect x="83.0" y="565" width="1.9" height="15.0" fill="rgb(235,26,10)" rx="2" ry="2" />
<text  x="85.97" y="575.5" ></text>
</g>
<g >
<title>__perf_event_enable (2 samples, 0.03%)</title><rect x="583.9" y="341" width="0.4" height="15.0" fill="rgb(229,120,28)" rx="2" ry="2" />
<text  x="586.88" y="351.5" ></text>
</g>
<g >
<title>xmlXPathCompileExpr (1 samples, 0.02%)</title><rect x="939.2" y="517" width="0.2" height="15.0" fill="rgb(234,189,31)" rx="2" ry="2" />
<text  x="942.25" y="527.5" ></text>
</g>
<g >
<title>plugin_ognl_check (735 samples, 12.32%)</title><rect x="980.4" y="613" width="145.3" height="15.0" fill="rgb(210,220,37)" rx="2" ry="2" />
<text  x="983.38" y="623.5" >plugin_ognl_check</text>
</g>
<g >
<title>intel_pmu_disable_all (1 samples, 0.02%)</title><rect x="85.1" y="501" width="0.2" height="15.0" fill="rgb(238,219,17)" rx="2" ry="2" />
<text  x="88.15" y="511.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckJavaScript (1 samples, 0.02%)</title><rect x="1189.0" y="501" width="0.2" height="15.0" fill="rgb(247,202,15)" rx="2" ry="2" />
<text  x="1192.01" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="900.9" y="581" width="0.2" height="15.0" fill="rgb(217,59,25)" rx="2" ry="2" />
<text  x="903.88" y="591.5" ></text>
</g>
<g >
<title>intel_bts_enable_local (2 samples, 0.03%)</title><rect x="86.5" y="501" width="0.4" height="15.0" fill="rgb(207,81,46)" rx="2" ry="2" />
<text  x="89.53" y="511.5" ></text>
</g>
<g >
<title>plugin_php_webshell_check (15 samples, 0.25%)</title><rect x="896.9" y="549" width="3.0" height="15.0" fill="rgb(224,193,2)" rx="2" ry="2" />
<text  x="899.93" y="559.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="136.0" y="341" width="0.2" height="15.0" fill="rgb(213,196,8)" rx="2" ry="2" />
<text  x="138.97" y="351.5" ></text>
</g>
<g >
<title>generic_smp_call_function_single_interrupt (2 samples, 0.03%)</title><rect x="583.9" y="405" width="0.4" height="15.0" fill="rgb(244,40,21)" rx="2" ry="2" />
<text  x="586.88" y="415.5" ></text>
</g>
<g >
<title>lex_parse (276 samples, 4.63%)</title><rect x="643.4" y="709" width="54.6" height="15.0" fill="rgb(210,167,20)" rx="2" ry="2" />
<text  x="646.41" y="719.5" >lex_p..</text>
</g>
<g >
<title>jsU_chartorune (4 samples, 0.07%)</title><rect x="745.4" y="117" width="0.8" height="15.0" fill="rgb(253,150,2)" rx="2" ry="2" />
<text  x="748.45" y="127.5" ></text>
</g>
<g >
<title>~basic_string (1 samples, 0.02%)</title><rect x="99.2" y="501" width="0.2" height="15.0" fill="rgb(217,66,18)" rx="2" ry="2" />
<text  x="102.19" y="511.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::addRequestHeader (1 samples, 0.02%)</title><rect x="589.6" y="565" width="0.2" height="15.0" fill="rgb(235,194,9)" rx="2" ry="2" />
<text  x="592.62" y="575.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="419.4" y="357" width="0.1" height="15.0" fill="rgb(211,173,6)" rx="2" ry="2" />
<text  x="422.35" y="367.5" ></text>
</g>
<g >
<title>modsecurity::Variables::KeyExclusions::toOmit (1 samples, 0.02%)</title><rect x="478.5" y="501" width="0.2" height="15.0" fill="rgb(206,223,44)" rx="2" ry="2" />
<text  x="481.48" y="511.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.02%)</title><rect x="1170.6" y="325" width="0.2" height="15.0" fill="rgb(219,31,24)" rx="2" ry="2" />
<text  x="1173.62" y="335.5" ></text>
</g>
<g >
<title>MscResponseMgr::TimeoutRoutine (6 samples, 0.10%)</title><rect x="89.9" y="677" width="1.2" height="15.0" fill="rgb(227,55,29)" rx="2" ry="2" />
<text  x="92.89" y="687.5" ></text>
</g>
<g >
<title>modsecurity::Utils::Base64::decode_forgiven (185 samples, 3.10%)</title><rect x="99.8" y="485" width="36.6" height="15.0" fill="rgb(247,96,38)" rx="2" ry="2" />
<text  x="102.78" y="495.5" >mod..</text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="136.0" y="309" width="0.2" height="15.0" fill="rgb(220,223,12)" rx="2" ry="2" />
<text  x="138.97" y="319.5" ></text>
</g>
<g >
<title>avx2_hs_scan (3 samples, 0.05%)</title><rect x="98.0" y="469" width="0.6" height="15.0" fill="rgb(230,74,30)" rx="2" ry="2" />
<text  x="101.00" y="479.5" ></text>
</g>
<g >
<title>process_frame_cb (10 samples, 0.17%)</title><rect x="83.0" y="661" width="1.9" height="15.0" fill="rgb(239,59,54)" rx="2" ry="2" />
<text  x="85.97" y="671.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;modsecurity::VariableValue*, std::allocator&lt;modsecurity::VariableValue*&gt; &gt;::_M_allocate (1 samples, 0.02%)</title><rect x="96.8" y="469" width="0.2" height="15.0" fill="rgb(217,225,25)" rx="2" ry="2" />
<text  x="99.81" y="479.5" ></text>
</g>
<g >
<title>scan_parser (735 samples, 12.32%)</title><rect x="980.4" y="597" width="145.3" height="15.0" fill="rgb(213,108,9)" rx="2" ry="2" />
<text  x="983.38" y="607.5" >scan_parser</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;modsecurity::VariableValue*&gt;::allocate (2 samples, 0.03%)</title><rect x="83.4" y="469" width="0.4" height="15.0" fill="rgb(219,218,37)" rx="2" ry="2" />
<text  x="86.37" y="479.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (6 samples, 0.10%)</title><rect x="588.0" y="501" width="1.2" height="15.0" fill="rgb(239,174,27)" rx="2" ry="2" />
<text  x="591.04" y="511.5" ></text>
</g>
<g >
<title>modsecurity::VariableOrigin::toText (1 samples, 0.02%)</title><rect x="980.2" y="645" width="0.2" height="15.0" fill="rgb(227,166,45)" rx="2" ry="2" />
<text  x="983.18" y="655.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (176 samples, 2.95%)</title><rect x="904.6" y="581" width="34.8" height="15.0" fill="rgb(215,129,2)" rx="2" ry="2" />
<text  x="907.64" y="591.5" >mo..</text>
</g>
<g >
<title>modsecurity::Rule::evaluate (205 samples, 3.44%)</title><rect x="939.4" y="597" width="40.6" height="15.0" fill="rgb(219,72,13)" rx="2" ry="2" />
<text  x="942.45" y="607.5" >mod..</text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (1 samples, 0.02%)</title><rect x="1189.0" y="533" width="0.2" height="15.0" fill="rgb(210,142,51)" rx="2" ry="2" />
<text  x="1192.01" y="543.5" ></text>
</g>
<g >
<title>modsecurity::operators::Rx::evaluate (1 samples, 0.02%)</title><rect x="705.5" y="581" width="0.2" height="15.0" fill="rgb(219,204,6)" rx="2" ry="2" />
<text  x="708.50" y="591.5" ></text>
</g>
<g >
<title>tick_sched_timer (2 samples, 0.03%)</title><rect x="1110.5" y="485" width="0.4" height="15.0" fill="rgb(215,56,14)" rx="2" ry="2" />
<text  x="1113.50" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="92.5" y="501" width="0.2" height="15.0" fill="rgb(251,152,18)" rx="2" ry="2" />
<text  x="95.46" y="511.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="878.5" y="325" width="0.2" height="15.0" fill="rgb(233,164,4)" rx="2" ry="2" />
<text  x="881.54" y="335.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1188.8" y="117" width="0.2" height="15.0" fill="rgb(236,105,30)" rx="2" ry="2" />
<text  x="1191.81" y="127.5" ></text>
</g>
<g >
<title>~basic_string (1 samples, 0.02%)</title><rect x="96.4" y="437" width="0.2" height="15.0" fill="rgb(240,141,11)" rx="2" ry="2" />
<text  x="99.42" y="447.5" ></text>
</g>
<g >
<title>modsecurity::operators::Rx::evaluate (2 samples, 0.03%)</title><rect x="98.6" y="485" width="0.4" height="15.0" fill="rgb(235,74,31)" rx="2" ry="2" />
<text  x="101.59" y="495.5" ></text>
</g>
<g >
<title>sleep_for&lt;long int, std::ratio&lt;1l, 1000l&gt; &gt; (5 samples, 0.08%)</title><rect x="90.1" y="661" width="1.0" height="15.0" fill="rgb(247,135,42)" rx="2" ry="2" />
<text  x="93.09" y="671.5" ></text>
</g>
<g >
<title>jsY_lex (14 samples, 0.23%)</title><rect x="1137.8" y="421" width="2.8" height="15.0" fill="rgb(208,156,29)" rx="2" ry="2" />
<text  x="1140.79" y="431.5" ></text>
</g>
<g >
<title>process_frame_cb (176 samples, 2.95%)</title><rect x="904.6" y="693" width="34.8" height="15.0" fill="rgb(205,78,51)" rx="2" ry="2" />
<text  x="907.64" y="703.5" >pr..</text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="900.9" y="469" width="0.2" height="15.0" fill="rgb(228,180,12)" rx="2" ry="2" />
<text  x="903.88" y="479.5" ></text>
</g>
<g >
<title>do_sync_write (1 samples, 0.02%)</title><rect x="87.7" y="645" width="0.2" height="15.0" fill="rgb(247,89,47)" rx="2" ry="2" />
<text  x="90.72" y="655.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.02%)</title><rect x="1170.6" y="309" width="0.2" height="15.0" fill="rgb(234,176,13)" rx="2" ry="2" />
<text  x="1173.62" y="319.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="92.3" y="453" width="0.2" height="15.0" fill="rgb(245,82,53)" rx="2" ry="2" />
<text  x="95.27" y="463.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="485" width="0.2" height="15.0" fill="rgb(226,172,27)" rx="2" ry="2" />
<text  x="92.69" y="495.5" ></text>
</g>
<g >
<title>HandleSeRequestSpod (307 samples, 5.14%)</title><rect x="1127.5" y="693" width="60.7" height="15.0" fill="rgb(248,197,39)" rx="2" ry="2" />
<text  x="1130.51" y="703.5" >Handle..</text>
</g>
<g >
<title>bitor (64 samples, 1.07%)</title><rect x="1145.1" y="389" width="12.7" height="15.0" fill="rgb(214,113,46)" rx="2" ry="2" />
<text  x="1148.11" y="399.5" ></text>
</g>
<g >
<title>perf_event_task_tick (1 samples, 0.02%)</title><rect x="90.1" y="357" width="0.2" height="15.0" fill="rgb(251,114,21)" rx="2" ry="2" />
<text  x="93.09" y="367.5" ></text>
</g>
<g >
<title>multiplicative (149 samples, 2.50%)</title><rect x="823.2" y="293" width="29.4" height="15.0" fill="rgb(229,55,22)" rx="2" ry="2" />
<text  x="826.17" y="303.5" >mu..</text>
</g>
<g >
<title>std::string::_M_copy (1 samples, 0.02%)</title><rect x="303.9" y="421" width="0.2" height="15.0" fill="rgb(247,63,52)" rx="2" ry="2" />
<text  x="306.86" y="431.5" ></text>
</g>
<g >
<title>relational (150 samples, 2.51%)</title><rect x="717.0" y="325" width="29.6" height="15.0" fill="rgb(246,29,38)" rx="2" ry="2" />
<text  x="719.97" y="335.5" >re..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="597.1" y="645" width="0.2" height="15.0" fill="rgb(205,42,11)" rx="2" ry="2" />
<text  x="600.13" y="655.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="93.3" y="485" width="0.2" height="15.0" fill="rgb(250,144,0)" rx="2" ry="2" />
<text  x="96.25" y="495.5" ></text>
</g>
<g >
<title>HandleSeRequestSpod (10 samples, 0.17%)</title><rect x="83.0" y="629" width="1.9" height="15.0" fill="rgb(231,29,30)" rx="2" ry="2" />
<text  x="85.97" y="639.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (1 samples, 0.02%)</title><rect x="303.9" y="453" width="0.2" height="15.0" fill="rgb(237,127,14)" rx="2" ry="2" />
<text  x="306.86" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.03%)</title><rect x="82.6" y="725" width="0.4" height="15.0" fill="rgb(224,185,11)" rx="2" ry="2" />
<text  x="85.58" y="735.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.02%)</title><rect x="980.2" y="597" width="0.2" height="15.0" fill="rgb(221,46,7)" rx="2" ry="2" />
<text  x="983.18" y="607.5" ></text>
</g>
<g >
<title>xmlParserInputBufferPush__internal_alias (1 samples, 0.02%)</title><rect x="93.3" y="517" width="0.2" height="15.0" fill="rgb(238,138,8)" rx="2" ry="2" />
<text  x="96.25" y="527.5" ></text>
</g>
<g >
<title>logor (11 samples, 0.18%)</title><rect x="1135.4" y="405" width="2.2" height="15.0" fill="rgb(231,227,54)" rx="2" ry="2" />
<text  x="1138.42" y="415.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="587.8" y="485" width="0.2" height="15.0" fill="rgb(237,120,53)" rx="2" ry="2" />
<text  x="590.84" y="495.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="894.2" y="213" width="0.2" height="15.0" fill="rgb(240,49,48)" rx="2" ry="2" />
<text  x="897.16" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable (3 samples, 0.05%)</title><rect x="1189.4" y="549" width="0.6" height="15.0" fill="rgb(225,41,35)" rx="2" ry="2" />
<text  x="1192.41" y="559.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (176 samples, 2.95%)</title><rect x="904.6" y="597" width="34.8" height="15.0" fill="rgb(236,33,54)" rx="2" ry="2" />
<text  x="907.64" y="607.5" >mo..</text>
</g>
<g >
<title>xmlXPathFreeCompExpr__internal_alias (1 samples, 0.02%)</title><rect x="584.3" y="469" width="0.2" height="15.0" fill="rgb(238,153,33)" rx="2" ry="2" />
<text  x="587.28" y="479.5" ></text>
</g>
<g >
<title>__destroy&lt;std::basic_string&lt;char&gt;*&gt; (1 samples, 0.02%)</title><rect x="589.6" y="485" width="0.2" height="15.0" fill="rgb(217,102,39)" rx="2" ry="2" />
<text  x="592.62" y="495.5" ></text>
</g>
<g >
<title>__wake_up_sync_key (1 samples, 0.02%)</title><rect x="1188.8" y="181" width="0.2" height="15.0" fill="rgb(226,15,21)" rx="2" ry="2" />
<text  x="1191.81" y="191.5" ></text>
</g>
<g >
<title>sec_agent (5,967 samples, 100.00%)</title><rect x="10.0" y="741" width="1180.0" height="15.0" fill="rgb(237,159,7)" rx="2" ry="2" />
<text  x="13.00" y="751.5" >sec_agent</text>
</g>
<g >
<title>shared_ptr&lt;std::allocator&lt;std::basic_string&lt;char&gt; &gt;, std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; (1 samples, 0.02%)</title><rect x="476.3" y="453" width="0.2" height="15.0" fill="rgb(209,205,52)" rx="2" ry="2" />
<text  x="479.30" y="463.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="90.1" y="389" width="0.2" height="15.0" fill="rgb(242,39,32)" rx="2" ry="2" />
<text  x="93.09" y="399.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (1 samples, 0.02%)</title><rect x="980.0" y="629" width="0.2" height="15.0" fill="rgb(236,32,8)" rx="2" ry="2" />
<text  x="982.98" y="639.5" ></text>
</g>
<g >
<title>modsecurity::Utils::Regex::searchAll (1 samples, 0.02%)</title><rect x="96.4" y="469" width="0.2" height="15.0" fill="rgb(236,2,14)" rx="2" ry="2" />
<text  x="99.42" y="479.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="303.9" y="405" width="0.2" height="15.0" fill="rgb(223,227,21)" rx="2" ry="2" />
<text  x="306.86" y="415.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.03%)</title><rect x="1188.2" y="533" width="0.4" height="15.0" fill="rgb(235,92,48)" rx="2" ry="2" />
<text  x="1191.22" y="543.5" ></text>
</g>
<g >
<title>std::string::_M_data (8 samples, 0.13%)</title><rect x="259.2" y="437" width="1.6" height="15.0" fill="rgb(229,167,21)" rx="2" ry="2" />
<text  x="262.17" y="447.5" ></text>
</g>
<g >
<title>accept (2 samples, 0.03%)</title><rect x="705.1" y="725" width="0.4" height="15.0" fill="rgb(245,69,48)" rx="2" ry="2" />
<text  x="708.11" y="735.5" ></text>
</g>
<g >
<title>ip_local_out_sk (1 samples, 0.02%)</title><rect x="1188.8" y="501" width="0.2" height="15.0" fill="rgb(212,156,50)" rx="2" ry="2" />
<text  x="1191.81" y="511.5" ></text>
</g>
<g >
<title>modsecurity::AnchoredVariable::set (1 samples, 0.02%)</title><rect x="476.5" y="501" width="0.2" height="15.0" fill="rgb(228,129,7)" rx="2" ry="2" />
<text  x="479.50" y="511.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="878.5" y="309" width="0.2" height="15.0" fill="rgb(248,23,36)" rx="2" ry="2" />
<text  x="881.54" y="319.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="83.2" y="453" width="0.2" height="15.0" fill="rgb(217,105,46)" rx="2" ry="2" />
<text  x="86.17" y="463.5" ></text>
</g>
<g >
<title>ip_rcv (1 samples, 0.02%)</title><rect x="87.7" y="325" width="0.2" height="15.0" fill="rgb(250,196,39)" rx="2" ry="2" />
<text  x="90.72" y="335.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="481.8" y="405" width="0.2" height="15.0" fill="rgb(238,218,4)" rx="2" ry="2" />
<text  x="484.84" y="415.5" ></text>
</g>
<g >
<title>tcp_rcv_established (1 samples, 0.02%)</title><rect x="1188.8" y="229" width="0.2" height="15.0" fill="rgb(241,16,25)" rx="2" ry="2" />
<text  x="1191.81" y="239.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char*&gt; (49 samples, 0.82%)</title><rect x="419.9" y="453" width="9.7" height="15.0" fill="rgb(211,157,40)" rx="2" ry="2" />
<text  x="422.94" y="463.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (307 samples, 5.14%)</title><rect x="1127.5" y="645" width="60.7" height="15.0" fill="rgb(224,15,5)" rx="2" ry="2" />
<text  x="1130.51" y="655.5" >modsec..</text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (10 samples, 0.17%)</title><rect x="83.0" y="581" width="1.9" height="15.0" fill="rgb(234,217,12)" rx="2" ry="2" />
<text  x="85.97" y="591.5" ></text>
</g>
<g >
<title>modsecurity::operators::Rx::evaluate (1 samples, 0.02%)</title><rect x="83.0" y="501" width="0.2" height="15.0" fill="rgb(253,212,41)" rx="2" ry="2" />
<text  x="85.97" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (8 samples, 0.13%)</title><rect x="261.1" y="437" width="1.6" height="15.0" fill="rgb(225,167,7)" rx="2" ry="2" />
<text  x="264.15" y="447.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="303.9" y="389" width="0.2" height="15.0" fill="rgb(222,39,33)" rx="2" ry="2" />
<text  x="306.86" y="399.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (1 samples, 0.02%)</title><rect x="83.0" y="517" width="0.2" height="15.0" fill="rgb(219,123,42)" rx="2" ry="2" />
<text  x="85.97" y="527.5" ></text>
</g>
<g >
<title>std::string::size (16 samples, 0.27%)</title><rect x="293.4" y="453" width="3.1" height="15.0" fill="rgb(222,196,51)" rx="2" ry="2" />
<text  x="296.38" y="463.5" ></text>
</g>
<g >
<title>jsY_next (73 samples, 1.22%)</title><rect x="805.8" y="389" width="14.4" height="15.0" fill="rgb(205,37,46)" rx="2" ry="2" />
<text  x="808.76" y="399.5" ></text>
</g>
<g >
<title>scan_parser (1 samples, 0.02%)</title><rect x="1125.9" y="597" width="0.2" height="15.0" fill="rgb(249,89,54)" rx="2" ry="2" />
<text  x="1128.93" y="607.5" ></text>
</g>
<g >
<title>xmlBufAdd (1 samples, 0.02%)</title><rect x="93.3" y="501" width="0.2" height="15.0" fill="rgb(207,52,34)" rx="2" ry="2" />
<text  x="96.25" y="511.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (41 samples, 0.69%)</title><rect x="482.0" y="485" width="8.1" height="15.0" fill="rgb(232,78,2)" rx="2" ry="2" />
<text  x="485.04" y="495.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="87.5" y="693" width="0.2" height="15.0" fill="rgb(218,170,39)" rx="2" ry="2" />
<text  x="90.52" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="478.7" y="469" width="0.2" height="15.0" fill="rgb(245,201,18)" rx="2" ry="2" />
<text  x="481.68" y="479.5" ></text>
</g>
<g >
<title>expression (35 samples, 0.59%)</title><rect x="941.0" y="453" width="6.9" height="15.0" fill="rgb(228,160,37)" rx="2" ry="2" />
<text  x="944.03" y="463.5" ></text>
</g>
<g >
<title>futex_wait (3 samples, 0.05%)</title><rect x="1189.4" y="645" width="0.6" height="15.0" fill="rgb(242,122,22)" rx="2" ry="2" />
<text  x="1192.41" y="655.5" ></text>
</g>
<g >
<title>tcp_v4_do_rcv (1 samples, 0.02%)</title><rect x="1188.8" y="245" width="0.2" height="15.0" fill="rgb(208,139,8)" rx="2" ry="2" />
<text  x="1191.81" y="255.5" ></text>
</g>
<g >
<title>malloc (2 samples, 0.03%)</title><rect x="83.4" y="437" width="0.4" height="15.0" fill="rgb(220,172,26)" rx="2" ry="2" />
<text  x="86.37" y="447.5" ></text>
</g>
<g >
<title>rcu_check_callbacks (1 samples, 0.02%)</title><rect x="454.0" y="357" width="0.2" height="15.0" fill="rgb(250,109,19)" rx="2" ry="2" />
<text  x="456.96" y="367.5" ></text>
</g>
<g >
<title>xmlHashAddEntry3__internal_alias (2 samples, 0.03%)</title><rect x="585.7" y="453" width="0.4" height="15.0" fill="rgb(228,99,45)" rx="2" ry="2" />
<text  x="588.66" y="463.5" ></text>
</g>
<g >
<title>jsY_lex (365 samples, 6.12%)</title><rect x="748.0" y="437" width="72.2" height="15.0" fill="rgb(247,132,27)" rx="2" ry="2" />
<text  x="751.02" y="447.5" >jsY_lex</text>
</g>
<g >
<title>put_page (1 samples, 0.02%)</title><rect x="87.5" y="517" width="0.2" height="15.0" fill="rgb(216,35,13)" rx="2" ry="2" />
<text  x="90.52" y="527.5" ></text>
</g>
<g >
<title>relational (15 samples, 0.25%)</title><rect x="1153.4" y="325" width="3.0" height="15.0" fill="rgb(213,186,33)" rx="2" ry="2" />
<text  x="1156.42" y="335.5" ></text>
</g>
<g >
<title>xmlCreatePushParserCtxt__internal_alias (1 samples, 0.02%)</title><rect x="93.3" y="533" width="0.2" height="15.0" fill="rgb(244,185,50)" rx="2" ry="2" />
<text  x="96.25" y="543.5" ></text>
</g>
<g >
<title>logor (214 samples, 3.59%)</title><rect x="705.7" y="421" width="42.3" height="15.0" fill="rgb(225,191,47)" rx="2" ry="2" />
<text  x="708.70" y="431.5" >logor</text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="904.6" y="501" width="0.2" height="15.0" fill="rgb(209,55,48)" rx="2" ry="2" />
<text  x="907.64" y="511.5" ></text>
</g>
<g >
<title>multiplicative (123 samples, 2.06%)</title><rect x="722.3" y="277" width="24.3" height="15.0" fill="rgb(250,144,37)" rx="2" ry="2" />
<text  x="725.31" y="287.5" >m..</text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="583.7" y="213" width="0.2" height="15.0" fill="rgb(221,185,29)" rx="2" ry="2" />
<text  x="586.69" y="223.5" ></text>
</g>
<g >
<title>modsecurity::Variables::XML::evaluate (1 samples, 0.02%)</title><rect x="899.9" y="613" width="0.2" height="15.0" fill="rgb(224,134,26)" rx="2" ry="2" />
<text  x="902.89" y="623.5" ></text>
</g>
<g >
<title>perf_pmu_enable (1 samples, 0.02%)</title><rect x="90.1" y="341" width="0.2" height="15.0" fill="rgb(206,227,53)" rx="2" ry="2" />
<text  x="93.09" y="351.5" ></text>
</g>
<g >
<title>jsU_isalpharune (213 samples, 3.57%)</title><rect x="852.6" y="389" width="42.2" height="15.0" fill="rgb(211,223,11)" rx="2" ry="2" />
<text  x="855.63" y="399.5" >jsU..</text>
</g>
<g >
<title>xmlXPathEvalExpr__internal_alias (1 samples, 0.02%)</title><rect x="979.8" y="549" width="0.2" height="15.0" fill="rgb(219,78,41)" rx="2" ry="2" />
<text  x="982.79" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="88.3" y="501" width="0.2" height="15.0" fill="rgb(242,158,47)" rx="2" ry="2" />
<text  x="91.31" y="511.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.02%)</title><rect x="831.7" y="149" width="0.2" height="15.0" fill="rgb(220,111,1)" rx="2" ry="2" />
<text  x="834.67" y="159.5" ></text>
</g>
<g >
<title>sys_epoll_wait (22 samples, 0.37%)</title><rect x="900.3" y="693" width="4.3" height="15.0" fill="rgb(231,20,33)" rx="2" ry="2" />
<text  x="903.29" y="703.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="489.8" y="357" width="0.1" height="15.0" fill="rgb(254,18,52)" rx="2" ry="2" />
<text  x="492.75" y="367.5" ></text>
</g>
<g >
<title>lalr_parse (226 samples, 3.79%)</title><rect x="598.5" y="709" width="44.7" height="15.0" fill="rgb(212,34,41)" rx="2" ry="2" />
<text  x="601.52" y="719.5" >lalr..</text>
</g>
<g >
<title>schedule_hrtimeout_range (1 samples, 0.02%)</title><rect x="704.3" y="501" width="0.2" height="15.0" fill="rgb(239,208,39)" rx="2" ry="2" />
<text  x="707.32" y="511.5" ></text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckOGNL (735 samples, 12.32%)</title><rect x="980.4" y="629" width="145.3" height="15.0" fill="rgb(226,28,1)" rx="2" ry="2" />
<text  x="983.38" y="639.5" >modsecurity::engin..</text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="419.5" y="373" width="0.2" height="15.0" fill="rgb(233,115,36)" rx="2" ry="2" />
<text  x="422.55" y="383.5" ></text>
</g>
<g >
<title>~shared_ptr (2 samples, 0.03%)</title><rect x="586.1" y="501" width="0.4" height="15.0" fill="rgb(246,6,49)" rx="2" ry="2" />
<text  x="589.06" y="511.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="88.9" y="325" width="0.2" height="15.0" fill="rgb(250,32,37)" rx="2" ry="2" />
<text  x="91.90" y="335.5" ></text>
</g>
<g >
<title>sys_accept4 (2 samples, 0.03%)</title><rect x="705.1" y="677" width="0.4" height="15.0" fill="rgb(217,87,54)" rx="2" ry="2" />
<text  x="708.11" y="687.5" ></text>
</g>
<g >
<title>finish_task_switch (2 samples, 0.03%)</title><rect x="1188.2" y="597" width="0.4" height="15.0" fill="rgb(232,186,51)" rx="2" ry="2" />
<text  x="1191.22" y="607.5" ></text>
</g>
<g >
<title>plugin_xss2_check (141 samples, 2.36%)</title><rect x="951.9" y="517" width="27.9" height="15.0" fill="rgb(236,144,41)" rx="2" ry="2" />
<text  x="954.90" y="527.5" >p..</text>
</g>
<g >
<title>put_compound_page (1 samples, 0.02%)</title><rect x="87.5" y="501" width="0.2" height="15.0" fill="rgb(211,42,45)" rx="2" ry="2" />
<text  x="90.52" y="511.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (205 samples, 3.44%)</title><rect x="939.4" y="613" width="40.6" height="15.0" fill="rgb(228,206,49)" rx="2" ry="2" />
<text  x="942.45" y="623.5" >mod..</text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="1170.6" y="357" width="0.2" height="15.0" fill="rgb(211,168,11)" rx="2" ry="2" />
<text  x="1173.62" y="367.5" ></text>
</g>
<g >
<title>__uninit_copy&lt;std::move_iterator&lt;modsecurity::VariableValue**&gt;, modsecurity::VariableValue**&gt; (1 samples, 0.02%)</title><rect x="96.6" y="421" width="0.2" height="15.0" fill="rgb(213,76,49)" rx="2" ry="2" />
<text  x="99.62" y="431.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="419.5" y="357" width="0.2" height="15.0" fill="rgb(214,96,27)" rx="2" ry="2" />
<text  x="422.55" y="367.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.03%)</title><rect x="83.4" y="421" width="0.4" height="15.0" fill="rgb(211,85,16)" rx="2" ry="2" />
<text  x="86.37" y="431.5" ></text>
</g>
<g >
<title>phpparse (1 samples, 0.02%)</title><rect x="1125.7" y="565" width="0.2" height="15.0" fill="rgb(222,48,51)" rx="2" ry="2" />
<text  x="1128.73" y="575.5" ></text>
</g>
<g >
<title>__netif_receive_skb_core (1 samples, 0.02%)</title><rect x="87.7" y="341" width="0.2" height="15.0" fill="rgb(229,224,29)" rx="2" ry="2" />
<text  x="90.72" y="351.5" ></text>
</g>
<g >
<title>~VariableValue (1 samples, 0.02%)</title><rect x="97.0" y="469" width="0.2" height="15.0" fill="rgb(227,54,53)" rx="2" ry="2" />
<text  x="100.01" y="479.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.02%)</title><rect x="258.2" y="421" width="0.2" height="15.0" fill="rgb(235,107,14)" rx="2" ry="2" />
<text  x="261.18" y="431.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::JsDecode::inplace (175 samples, 2.93%)</title><rect x="209.1" y="485" width="34.6" height="15.0" fill="rgb(212,39,40)" rx="2" ry="2" />
<text  x="212.14" y="495.5" >mo..</text>
</g>
<g >
<title>assignment (25 samples, 0.42%)</title><rect x="942.2" y="437" width="5.0" height="15.0" fill="rgb(222,92,15)" rx="2" ry="2" />
<text  x="945.21" y="447.5" ></text>
</g>
<g >
<title>modsecurity::utils::string::streq (2 samples, 0.03%)</title><rect x="94.2" y="517" width="0.4" height="15.0" fill="rgb(212,229,42)" rx="2" ry="2" />
<text  x="97.24" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="640.2" y="677" width="0.2" height="15.0" fill="rgb(249,99,14)" rx="2" ry="2" />
<text  x="643.24" y="687.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (737 samples, 12.35%)</title><rect x="980.4" y="645" width="145.7" height="15.0" fill="rgb(245,229,53)" rx="2" ry="2" />
<text  x="983.38" y="655.5" >modsecurity::opera..</text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="454.0" y="421" width="0.2" height="15.0" fill="rgb(248,46,36)" rx="2" ry="2" />
<text  x="456.96" y="431.5" ></text>
</g>
<g >
<title>sock_def_readable (1 samples, 0.02%)</title><rect x="1188.8" y="197" width="0.2" height="15.0" fill="rgb(209,201,15)" rx="2" ry="2" />
<text  x="1191.81" y="207.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (2 samples, 0.03%)</title><rect x="1189.0" y="565" width="0.4" height="15.0" fill="rgb(220,84,28)" rx="2" ry="2" />
<text  x="1192.01" y="575.5" ></text>
</g>
<g >
<title>xmlFreeNodeList__internal_alias (1 samples, 0.02%)</title><rect x="88.3" y="581" width="0.2" height="15.0" fill="rgb(208,229,52)" rx="2" ry="2" />
<text  x="91.31" y="591.5" ></text>
</g>
<g >
<title>std::this_thread::__sleep_for (5 samples, 0.08%)</title><rect x="90.1" y="645" width="1.0" height="15.0" fill="rgb(222,41,4)" rx="2" ry="2" />
<text  x="93.09" y="655.5" ></text>
</g>
<g >
<title>is_key_expr (6 samples, 0.10%)</title><rect x="597.3" y="709" width="1.2" height="15.0" fill="rgb(242,219,32)" rx="2" ry="2" />
<text  x="600.33" y="719.5" ></text>
</g>
<g >
<title>schedule (19 samples, 0.32%)</title><rect x="900.9" y="629" width="3.7" height="15.0" fill="rgb(235,121,39)" rx="2" ry="2" />
<text  x="903.88" y="639.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (6 samples, 0.10%)</title><rect x="1126.3" y="597" width="1.2" height="15.0" fill="rgb(206,216,23)" rx="2" ry="2" />
<text  x="1129.32" y="607.5" ></text>
</g>
<g >
<title>std::string::append (1 samples, 0.02%)</title><rect x="476.7" y="485" width="0.2" height="15.0" fill="rgb(243,117,38)" rx="2" ry="2" />
<text  x="479.70" y="495.5" ></text>
</g>
<g >
<title>scriptelement (35 samples, 0.59%)</title><rect x="941.0" y="485" width="6.9" height="15.0" fill="rgb(234,55,28)" rx="2" ry="2" />
<text  x="944.03" y="495.5" ></text>
</g>
<g >
<title>get_page_from_freelist (1 samples, 0.02%)</title><rect x="429.4" y="261" width="0.2" height="15.0" fill="rgb(237,138,27)" rx="2" ry="2" />
<text  x="432.44" y="271.5" ></text>
</g>
<g >
<title>handle_hanotify (1 samples, 0.02%)</title><rect x="589.8" y="629" width="0.2" height="15.0" fill="rgb(230,63,23)" rx="2" ry="2" />
<text  x="592.82" y="639.5" ></text>
</g>
<g >
<title>destroy&lt;std::_List_node&lt;std::unique_ptr&lt;modsecurity::VariableOrigin&gt; &gt; &gt; (2 samples, 0.03%)</title><rect x="88.7" y="533" width="0.4" height="15.0" fill="rgb(245,51,38)" rx="2" ry="2" />
<text  x="91.71" y="543.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (176 samples, 2.95%)</title><rect x="904.6" y="629" width="34.8" height="15.0" fill="rgb(232,67,38)" rx="2" ry="2" />
<text  x="907.64" y="639.5" >ha..</text>
</g>
<g >
<title>std::string::operator= (1 samples, 0.02%)</title><rect x="419.7" y="485" width="0.2" height="15.0" fill="rgb(233,97,1)" rx="2" ry="2" />
<text  x="422.75" y="495.5" ></text>
</g>
<g >
<title>check_again (14 samples, 0.23%)</title><rect x="936.5" y="485" width="2.7" height="15.0" fill="rgb(222,201,40)" rx="2" ry="2" />
<text  x="939.48" y="495.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (2 samples, 0.03%)</title><rect x="980.0" y="709" width="0.4" height="15.0" fill="rgb(213,139,4)" rx="2" ry="2" />
<text  x="982.98" y="719.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (2,500 samples, 41.90%)</title><rect x="93.5" y="549" width="494.3" height="15.0" fill="rgb(214,220,19)" rx="2" ry="2" />
<text  x="96.45" y="559.5" >modsecurity::Rules::evaluate</text>
</g>
<g >
<title>jsU_chartorune (16 samples, 0.27%)</title><rect x="1181.9" y="373" width="3.2" height="15.0" fill="rgb(235,89,37)" rx="2" ry="2" />
<text  x="1184.89" y="383.5" ></text>
</g>
<g >
<title>jsY_next (6 samples, 0.10%)</title><rect x="1166.1" y="405" width="1.2" height="15.0" fill="rgb(222,21,24)" rx="2" ry="2" />
<text  x="1169.07" y="415.5" ></text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.05%)</title><rect x="243.7" y="469" width="0.6" height="15.0" fill="rgb(205,213,49)" rx="2" ry="2" />
<text  x="246.75" y="479.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.isra.7 (1 samples, 0.02%)</title><rect x="84.9" y="645" width="0.2" height="15.0" fill="rgb(208,144,26)" rx="2" ry="2" />
<text  x="87.95" y="655.5" ></text>
</g>
<g >
<title>std::deque&lt;std::unique_ptr&lt;modsecurity::Variables::KeyExclusion, std::default_delete&lt;modsecurity::Variables::KeyExclusion&gt; &gt;, std::allocator&lt;std::unique_ptr&lt;modsecurity::Variables::KeyExclusion, std::default_delete&lt;modsecurity::Variables::KeyExclusion&gt; &gt; &gt; &gt;::end (1 samples, 0.02%)</title><rect x="478.5" y="485" width="0.2" height="15.0" fill="rgb(211,139,38)" rx="2" ry="2" />
<text  x="481.48" y="495.5" ></text>
</g>
<g >
<title>~basic_string (3 samples, 0.05%)</title><rect x="587.2" y="501" width="0.6" height="15.0" fill="rgb(237,99,32)" rx="2" ry="2" />
<text  x="590.24" y="511.5" ></text>
</g>
<g >
<title>to_string (1 samples, 0.02%)</title><rect x="83.0" y="485" width="0.2" height="15.0" fill="rgb(221,107,37)" rx="2" ry="2" />
<text  x="85.97" y="495.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (2,514 samples, 42.13%)</title><rect x="92.5" y="565" width="497.1" height="15.0" fill="rgb(219,182,37)" rx="2" ry="2" />
<text  x="95.46" y="575.5" >modsecurity::Transaction::processRequestBody</text>
</g>
<g >
<title>equality (11 samples, 0.18%)</title><rect x="1151.2" y="325" width="2.2" height="15.0" fill="rgb(251,164,7)" rx="2" ry="2" />
<text  x="1154.24" y="335.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::UrlDecodeUni::evaluate (1 samples, 0.02%)</title><rect x="904.6" y="533" width="0.2" height="15.0" fill="rgb(220,33,6)" rx="2" ry="2" />
<text  x="907.64" y="543.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="477.3" y="485" width="0.2" height="15.0" fill="rgb(220,37,47)" rx="2" ry="2" />
<text  x="480.29" y="495.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (3 samples, 0.05%)</title><rect x="1189.4" y="565" width="0.6" height="15.0" fill="rgb(227,45,25)" rx="2" ry="2" />
<text  x="1192.41" y="575.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="1188.2" y="629" width="0.4" height="15.0" fill="rgb(226,175,2)" rx="2" ry="2" />
<text  x="1191.22" y="639.5" ></text>
</g>
<g >
<title>xmlHashCreate__internal_alias (1 samples, 0.02%)</title><rect x="84.6" y="501" width="0.2" height="15.0" fill="rgb(226,17,15)" rx="2" ry="2" />
<text  x="87.55" y="511.5" ></text>
</g>
<g >
<title>jsY_isnewline@plt (1 samples, 0.02%)</title><rect x="746.4" y="117" width="0.2" height="15.0" fill="rgb(244,34,35)" rx="2" ry="2" />
<text  x="749.44" y="127.5" ></text>
</g>
<g >
<title>~map (2 samples, 0.03%)</title><rect x="89.5" y="629" width="0.4" height="15.0" fill="rgb(205,125,30)" rx="2" ry="2" />
<text  x="92.50" y="639.5" ></text>
</g>
<g >
<title>finish_task_switch (18 samples, 0.30%)</title><rect x="901.1" y="597" width="3.5" height="15.0" fill="rgb(209,76,35)" rx="2" ry="2" />
<text  x="904.08" y="607.5" ></text>
</g>
<g >
<title>std::map&lt;long, modsecurity::Transaction::RuleCtrlType, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::operator[] (1 samples, 0.02%)</title><rect x="92.3" y="549" width="0.2" height="15.0" fill="rgb(211,87,47)" rx="2" ry="2" />
<text  x="95.27" y="559.5" ></text>
</g>
<g >
<title>check_php_code (15 samples, 0.25%)</title><rect x="896.9" y="517" width="3.0" height="15.0" fill="rgb(229,66,22)" rx="2" ry="2" />
<text  x="899.93" y="527.5" ></text>
</g>
<g >
<title>__normal_iterator (2 samples, 0.03%)</title><rect x="586.5" y="501" width="0.3" height="15.0" fill="rgb(254,224,22)" rx="2" ry="2" />
<text  x="589.45" y="511.5" ></text>
</g>
<g >
<title>conditional (214 samples, 3.59%)</title><rect x="705.7" y="437" width="42.3" height="15.0" fill="rgb(235,161,39)" rx="2" ry="2" />
<text  x="708.70" y="447.5" >con..</text>
</g>
<g >
<title>kvm_steal_clock (1 samples, 0.02%)</title><rect x="243.5" y="325" width="0.2" height="15.0" fill="rgb(228,163,19)" rx="2" ry="2" />
<text  x="246.55" y="335.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="84.6" y="469" width="0.2" height="15.0" fill="rgb(245,40,17)" rx="2" ry="2" />
<text  x="87.55" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="1189.2" y="469" width="0.2" height="15.0" fill="rgb(238,85,16)" rx="2" ry="2" />
<text  x="1192.21" y="479.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="207.0" y="405" width="0.2" height="15.0" fill="rgb(209,29,20)" rx="2" ry="2" />
<text  x="209.96" y="415.5" ></text>
</g>
<g >
<title>rand_r (1 samples, 0.02%)</title><rect x="585.3" y="453" width="0.2" height="15.0" fill="rgb(245,143,33)" rx="2" ry="2" />
<text  x="588.27" y="463.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="96.6" y="341" width="0.2" height="15.0" fill="rgb(242,29,39)" rx="2" ry="2" />
<text  x="99.62" y="351.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="489.8" y="437" width="0.1" height="15.0" fill="rgb(207,43,30)" rx="2" ry="2" />
<text  x="492.75" y="447.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="894.2" y="229" width="0.2" height="15.0" fill="rgb(217,75,53)" rx="2" ry="2" />
<text  x="897.16" y="239.5" ></text>
</g>
<g >
<title>irq_exit (1 samples, 0.02%)</title><rect x="88.7" y="421" width="0.2" height="15.0" fill="rgb(241,150,2)" rx="2" ry="2" />
<text  x="91.71" y="431.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.9" y="421" width="0.2" height="15.0" fill="rgb(250,61,15)" rx="2" ry="2" />
<text  x="91.90" y="431.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.02%)</title><rect x="87.7" y="677" width="0.2" height="15.0" fill="rgb(206,187,0)" rx="2" ry="2" />
<text  x="90.72" y="687.5" ></text>
</g>
<g >
<title>~SMatch (1 samples, 0.02%)</title><rect x="96.4" y="453" width="0.2" height="15.0" fill="rgb(240,145,27)" rx="2" ry="2" />
<text  x="99.42" y="463.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (1 samples, 0.02%)</title><rect x="904.6" y="437" width="0.2" height="15.0" fill="rgb(239,192,1)" rx="2" ry="2" />
<text  x="907.64" y="447.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::string, char&gt; (1 samples, 0.02%)</title><rect x="88.1" y="581" width="0.2" height="15.0" fill="rgb(235,178,40)" rx="2" ry="2" />
<text  x="91.11" y="591.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="583.7" y="309" width="0.2" height="15.0" fill="rgb(225,107,31)" rx="2" ry="2" />
<text  x="586.69" y="319.5" ></text>
</g>
<g >
<title>jsY_lexx (134 samples, 2.25%)</title><rect x="1161.7" y="421" width="26.5" height="15.0" fill="rgb(238,141,22)" rx="2" ry="2" />
<text  x="1164.72" y="431.5" >j..</text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (1 samples, 0.02%)</title><rect x="87.1" y="501" width="0.2" height="15.0" fill="rgb(213,143,52)" rx="2" ry="2" />
<text  x="90.12" y="511.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (2 samples, 0.03%)</title><rect x="583.9" y="261" width="0.4" height="15.0" fill="rgb(222,200,53)" rx="2" ry="2" />
<text  x="586.88" y="271.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="583.7" y="389" width="0.2" height="15.0" fill="rgb(224,214,16)" rx="2" ry="2" />
<text  x="586.69" y="399.5" ></text>
</g>
<g >
<title>modsecurity::AnchoredVariable::~AnchoredVariable (4 samples, 0.07%)</title><rect x="88.5" y="613" width="0.8" height="15.0" fill="rgb(227,50,10)" rx="2" ry="2" />
<text  x="91.51" y="623.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::Trim::trim (5 samples, 0.08%)</title><rect x="304.1" y="501" width="0.9" height="15.0" fill="rgb(247,61,32)" rx="2" ry="2" />
<text  x="307.06" y="511.5" ></text>
</g>
<g >
<title>xmlNodeGetContent__internal_alias (476 samples, 7.98%)</title><rect x="490.1" y="501" width="94.2" height="15.0" fill="rgb(235,106,17)" rx="2" ry="2" />
<text  x="493.15" y="511.5" >xmlNodeGetC..</text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="454.0" y="389" width="0.2" height="15.0" fill="rgb(226,93,20)" rx="2" ry="2" />
<text  x="456.96" y="399.5" ></text>
</g>
<g >
<title>modsecurity::Variables::XML::evaluate (1 samples, 0.02%)</title><rect x="1189.2" y="549" width="0.2" height="15.0" fill="rgb(215,180,11)" rx="2" ry="2" />
<text  x="1192.21" y="559.5" ></text>
</g>
<g >
<title>sys_epoll_wait (1 samples, 0.02%)</title><rect x="704.5" y="517" width="0.2" height="15.0" fill="rgb(230,24,3)" rx="2" ry="2" />
<text  x="707.51" y="527.5" ></text>
</g>
<g >
<title>jsU_chartorune (17 samples, 0.28%)</title><rect x="812.5" y="373" width="3.3" height="15.0" fill="rgb(236,80,36)" rx="2" ry="2" />
<text  x="815.49" y="383.5" ></text>
</g>
<g >
<title>x86_pmu_enable (8 samples, 0.13%)</title><rect x="85.3" y="533" width="1.6" height="15.0" fill="rgb(249,193,53)" rx="2" ry="2" />
<text  x="88.34" y="543.5" ></text>
</g>
<g >
<title>std::string::operator+= (38 samples, 0.64%)</title><rect x="258.4" y="485" width="7.5" height="15.0" fill="rgb(215,187,32)" rx="2" ry="2" />
<text  x="261.38" y="495.5" ></text>
</g>
<g >
<title>tcp_push (1 samples, 0.02%)</title><rect x="1188.8" y="581" width="0.2" height="15.0" fill="rgb(249,101,27)" rx="2" ry="2" />
<text  x="1191.81" y="591.5" ></text>
</g>
<g >
<title>std::string::swap@plt (1 samples, 0.02%)</title><rect x="419.7" y="469" width="0.2" height="15.0" fill="rgb(224,47,54)" rx="2" ry="2" />
<text  x="422.75" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="494.9" y="389" width="0.2" height="15.0" fill="rgb(249,190,17)" rx="2" ry="2" />
<text  x="497.89" y="399.5" ></text>
</g>
<g >
<title>modsecurity::Variables::KeyExclusionRegex::match (1 samples, 0.02%)</title><rect x="96.4" y="485" width="0.2" height="15.0" fill="rgb(209,151,36)" rx="2" ry="2" />
<text  x="99.42" y="495.5" ></text>
</g>
<g >
<title>jsU_isalpharune (217 samples, 3.64%)</title><rect x="761.1" y="373" width="42.9" height="15.0" fill="rgb(242,133,6)" rx="2" ry="2" />
<text  x="764.07" y="383.5" >jsU_..</text>
</g>
<g >
<title>try_to_wake_up (1 samples, 0.02%)</title><rect x="1188.8" y="85" width="0.2" height="15.0" fill="rgb(237,51,36)" rx="2" ry="2" />
<text  x="1191.81" y="95.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="900.9" y="373" width="0.2" height="15.0" fill="rgb(221,146,48)" rx="2" ry="2" />
<text  x="903.88" y="383.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="494.9" y="357" width="0.2" height="15.0" fill="rgb(253,24,31)" rx="2" ry="2" />
<text  x="497.89" y="367.5" ></text>
</g>
<g >
<title>__inc_zone_state (1 samples, 0.02%)</title><rect x="489.9" y="341" width="0.2" height="15.0" fill="rgb(248,216,27)" rx="2" ry="2" />
<text  x="492.95" y="351.5" ></text>
</g>
<g >
<title>ctx_resched (2 samples, 0.03%)</title><rect x="583.9" y="325" width="0.4" height="15.0" fill="rgb(207,6,53)" rx="2" ry="2" />
<text  x="586.88" y="335.5" ></text>
</g>
<g >
<title>fget_raw_light (1 samples, 0.02%)</title><rect x="87.3" y="661" width="0.2" height="15.0" fill="rgb(224,26,9)" rx="2" ry="2" />
<text  x="90.32" y="671.5" ></text>
</g>
<g >
<title>handleHttpRequest (10 samples, 0.17%)</title><rect x="83.0" y="613" width="1.9" height="15.0" fill="rgb(248,193,52)" rx="2" ry="2" />
<text  x="85.97" y="623.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="84.4" y="485" width="0.2" height="15.0" fill="rgb(217,195,17)" rx="2" ry="2" />
<text  x="87.36" y="495.5" ></text>
</g>
<g >
<title>_M_create_node&lt;const std::piecewise_construct_t&amp;, std::tuple&lt;long int const&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.02%)</title><rect x="92.3" y="517" width="0.2" height="15.0" fill="rgb(249,19,9)" rx="2" ry="2" />
<text  x="95.27" y="527.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="640.2" y="629" width="0.2" height="15.0" fill="rgb(229,68,43)" rx="2" ry="2" />
<text  x="643.24" y="639.5" ></text>
</g>
<g >
<title>jsU_chartorune@plt (2 samples, 0.03%)</title><rect x="815.8" y="373" width="0.4" height="15.0" fill="rgb(243,6,27)" rx="2" ry="2" />
<text  x="818.85" y="383.5" ></text>
</g>
<g >
<title>sys_epoll_ctl (1 samples, 0.02%)</title><rect x="900.1" y="693" width="0.2" height="15.0" fill="rgb(241,159,42)" rx="2" ry="2" />
<text  x="903.09" y="703.5" ></text>
</g>
<g >
<title>update_wall_time (1 samples, 0.02%)</title><rect x="419.4" y="341" width="0.1" height="15.0" fill="rgb(210,14,42)" rx="2" ry="2" />
<text  x="422.35" y="351.5" ></text>
</g>
<g >
<title>MscServiceMainSpod (8 samples, 0.13%)</title><rect x="703.5" y="645" width="1.6" height="15.0" fill="rgb(210,91,51)" rx="2" ry="2" />
<text  x="706.52" y="655.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (3 samples, 0.05%)</title><rect x="1189.4" y="517" width="0.6" height="15.0" fill="rgb(248,120,10)" rx="2" ry="2" />
<text  x="1192.41" y="527.5" ></text>
</g>
<g >
<title>HandleSeRequestSpod (1 samples, 0.02%)</title><rect x="82.4" y="725" width="0.2" height="15.0" fill="rgb(232,25,11)" rx="2" ry="2" />
<text  x="85.38" y="735.5" ></text>
</g>
<g >
<title>scheduler_tick (2 samples, 0.03%)</title><rect x="1110.5" y="437" width="0.4" height="15.0" fill="rgb(245,120,42)" rx="2" ry="2" />
<text  x="1113.50" y="447.5" ></text>
</g>
<g >
<title>std::string::assign (1 samples, 0.02%)</title><rect x="253.6" y="485" width="0.2" height="15.0" fill="rgb(236,144,50)" rx="2" ry="2" />
<text  x="256.63" y="495.5" ></text>
</g>
<g >
<title>__schedule (2 samples, 0.03%)</title><rect x="1188.2" y="613" width="0.4" height="15.0" fill="rgb(225,193,27)" rx="2" ry="2" />
<text  x="1191.22" y="623.5" ></text>
</g>
<g >
<title>[unknown] (4 samples, 0.07%)</title><rect x="87.1" y="725" width="0.8" height="15.0" fill="rgb(243,170,37)" rx="2" ry="2" />
<text  x="90.12" y="735.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (3 samples, 0.05%)</title><rect x="1110.3" y="565" width="0.6" height="15.0" fill="rgb(219,217,14)" rx="2" ry="2" />
<text  x="1113.31" y="575.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::HtmlEntityDecode::evaluate (285 samples, 4.78%)</title><rect x="152.0" y="501" width="56.3" height="15.0" fill="rgb(240,17,31)" rx="2" ry="2" />
<text  x="154.99" y="511.5" >modse..</text>
</g>
<g >
<title>MscFinalizeMgr::MonitorWhiteUrls (1 samples, 0.02%)</title><rect x="87.9" y="645" width="0.2" height="15.0" fill="rgb(238,2,0)" rx="2" ry="2" />
<text  x="90.92" y="655.5" ></text>
</g>
<g >
<title>scriptelement (67 samples, 1.12%)</title><rect x="1127.5" y="485" width="13.3" height="15.0" fill="rgb(254,91,33)" rx="2" ry="2" />
<text  x="1130.51" y="495.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range (9 samples, 0.15%)</title><rect x="85.1" y="645" width="1.8" height="15.0" fill="rgb(215,85,53)" rx="2" ry="2" />
<text  x="88.15" y="655.5" ></text>
</g>
<g >
<title>trigger_load_balance (1 samples, 0.02%)</title><rect x="88.1" y="373" width="0.2" height="15.0" fill="rgb(234,92,51)" rx="2" ry="2" />
<text  x="91.11" y="383.5" ></text>
</g>
<g >
<title>futex_wait (2 samples, 0.03%)</title><rect x="1188.2" y="661" width="0.4" height="15.0" fill="rgb(220,89,43)" rx="2" ry="2" />
<text  x="1191.22" y="671.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (4 samples, 0.07%)</title><rect x="304.3" y="469" width="0.7" height="15.0" fill="rgb(219,77,3)" rx="2" ry="2" />
<text  x="307.26" y="479.5" ></text>
</g>
<g >
<title>sys_futex (2 samples, 0.03%)</title><rect x="82.6" y="693" width="0.4" height="15.0" fill="rgb(237,28,35)" rx="2" ry="2" />
<text  x="85.58" y="703.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="687.9" y="581" width="0.2" height="15.0" fill="rgb(239,46,44)" rx="2" ry="2" />
<text  x="690.90" y="591.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (16 samples, 0.27%)</title><rect x="901.1" y="581" width="3.1" height="15.0" fill="rgb(246,87,23)" rx="2" ry="2" />
<text  x="904.08" y="591.5" ></text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="494.9" y="341" width="0.2" height="15.0" fill="rgb(222,105,44)" rx="2" ry="2" />
<text  x="497.89" y="351.5" ></text>
</g>
<g >
<title>std::string::_M_copy (6 samples, 0.10%)</title><rect x="588.0" y="485" width="1.2" height="15.0" fill="rgb(206,52,7)" rx="2" ry="2" />
<text  x="591.04" y="495.5" ></text>
</g>
<g >
<title>check_php_code (1 samples, 0.02%)</title><rect x="1125.7" y="581" width="0.2" height="15.0" fill="rgb(236,59,8)" rx="2" ry="2" />
<text  x="1128.73" y="591.5" ></text>
</g>
<g >
<title>equality (164 samples, 2.75%)</title><rect x="820.2" y="357" width="32.4" height="15.0" fill="rgb(244,15,4)" rx="2" ry="2" />
<text  x="823.20" y="367.5" >eq..</text>
</g>
<g >
<title>modsecurity::Rule::evaluate (10 samples, 0.17%)</title><rect x="83.0" y="549" width="1.9" height="15.0" fill="rgb(252,156,39)" rx="2" ry="2" />
<text  x="85.97" y="559.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::UrlDecodeUni::evaluate (630 samples, 10.56%)</title><rect x="305.0" y="501" width="124.6" height="15.0" fill="rgb(252,6,10)" rx="2" ry="2" />
<text  x="308.05" y="511.5" >modsecurity::ac..</text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="549" width="0.2" height="15.0" fill="rgb(215,156,18)" rx="2" ry="2" />
<text  x="92.69" y="559.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (16 samples, 0.27%)</title><rect x="901.1" y="517" width="3.1" height="15.0" fill="rgb(220,157,40)" rx="2" ry="2" />
<text  x="904.08" y="527.5" ></text>
</g>
<g >
<title>modsecurity::Variables::XML::evaluate (1 samples, 0.02%)</title><rect x="979.8" y="581" width="0.2" height="15.0" fill="rgb(230,112,42)" rx="2" ry="2" />
<text  x="982.79" y="591.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (174 samples, 2.92%)</title><rect x="904.8" y="565" width="34.4" height="15.0" fill="rgb(235,62,29)" rx="2" ry="2" />
<text  x="907.84" y="575.5" >mo..</text>
</g>
<g >
<title>conditional (164 samples, 2.75%)</title><rect x="820.2" y="453" width="32.4" height="15.0" fill="rgb(222,123,54)" rx="2" ry="2" />
<text  x="823.20" y="463.5" >co..</text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="135.8" y="389" width="0.4" height="15.0" fill="rgb(211,176,31)" rx="2" ry="2" />
<text  x="138.77" y="399.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (2 samples, 0.03%)</title><rect x="419.4" y="405" width="0.3" height="15.0" fill="rgb(219,184,11)" rx="2" ry="2" />
<text  x="422.35" y="415.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="583.7" y="261" width="0.2" height="15.0" fill="rgb(246,229,0)" rx="2" ry="2" />
<text  x="586.69" y="271.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="583.7" y="373" width="0.2" height="15.0" fill="rgb(213,223,12)" rx="2" ry="2" />
<text  x="586.69" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="469" width="0.2" height="15.0" fill="rgb(241,158,19)" rx="2" ry="2" />
<text  x="92.69" y="479.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (2 samples, 0.03%)</title><rect x="82.6" y="533" width="0.4" height="15.0" fill="rgb(223,150,45)" rx="2" ry="2" />
<text  x="85.58" y="543.5" ></text>
</g>
<g >
<title>newexp (67 samples, 1.12%)</title><rect x="733.4" y="213" width="13.2" height="15.0" fill="rgb(216,198,48)" rx="2" ry="2" />
<text  x="736.39" y="223.5" ></text>
</g>
<g >
<title>perf_pmu_enable (4 samples, 0.07%)</title><rect x="90.3" y="469" width="0.8" height="15.0" fill="rgb(237,72,9)" rx="2" ry="2" />
<text  x="93.29" y="479.5" ></text>
</g>
<g >
<title>std::string::_M_data (16 samples, 0.27%)</title><rect x="293.4" y="421" width="3.1" height="15.0" fill="rgb(236,98,43)" rx="2" ry="2" />
<text  x="296.38" y="431.5" ></text>
</g>
<g >
<title>handleHttpRequest (2,520 samples, 42.23%)</title><rect x="91.5" y="597" width="498.3" height="15.0" fill="rgb(221,120,2)" rx="2" ry="2" />
<text  x="94.47" y="607.5" >handleHttpRequest</text>
</g>
<g >
<title>modsecurity::engine::SWAF::CheckXSS (141 samples, 2.36%)</title><rect x="951.9" y="533" width="27.9" height="15.0" fill="rgb(230,40,18)" rx="2" ry="2" />
<text  x="954.90" y="543.5" >m..</text>
</g>
<g >
<title>[libc.so.6] (3 samples, 0.05%)</title><rect x="99.8" y="469" width="0.6" height="15.0" fill="rgb(244,26,38)" rx="2" ry="2" />
<text  x="102.78" y="479.5" ></text>
</g>
<g >
<title>ip_local_out_sk (1 samples, 0.02%)</title><rect x="87.7" y="501" width="0.2" height="15.0" fill="rgb(230,135,23)" rx="2" ry="2" />
<text  x="90.72" y="511.5" ></text>
</g>
<g >
<title>tick_do_update_jiffies64 (1 samples, 0.02%)</title><rect x="494.9" y="325" width="0.2" height="15.0" fill="rgb(209,188,17)" rx="2" ry="2" />
<text  x="497.89" y="335.5" ></text>
</g>
<g >
<title>pthread_cond_wait (2 samples, 0.03%)</title><rect x="1188.2" y="725" width="0.4" height="15.0" fill="rgb(242,94,32)" rx="2" ry="2" />
<text  x="1191.22" y="735.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (1 samples, 0.02%)</title><rect x="303.9" y="437" width="0.2" height="15.0" fill="rgb(211,80,29)" rx="2" ry="2" />
<text  x="306.86" y="447.5" ></text>
</g>
<g >
<title>callexp (20 samples, 0.34%)</title><rect x="827.9" y="229" width="4.0" height="15.0" fill="rgb(252,221,27)" rx="2" ry="2" />
<text  x="830.91" y="239.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.02%)</title><rect x="699.2" y="613" width="0.2" height="15.0" fill="rgb(252,224,16)" rx="2" ry="2" />
<text  x="702.17" y="623.5" ></text>
</g>
<g >
<title>__inc_zone_page_state (1 samples, 0.02%)</title><rect x="489.9" y="357" width="0.2" height="15.0" fill="rgb(220,119,26)" rx="2" ry="2" />
<text  x="492.95" y="367.5" ></text>
</g>
<g >
<title>epoll_wait (22 samples, 0.37%)</title><rect x="900.3" y="725" width="4.3" height="15.0" fill="rgb(206,69,8)" rx="2" ry="2" />
<text  x="903.29" y="735.5" ></text>
</g>
<g >
<title>xmlBufAdd (475 samples, 7.96%)</title><rect x="490.3" y="469" width="94.0" height="15.0" fill="rgb(219,79,20)" rx="2" ry="2" />
<text  x="493.35" y="479.5" >xmlBufAdd</text>
</g>
<g >
<title>tick_sched_do_timer (1 samples, 0.02%)</title><rect x="894.2" y="245" width="0.2" height="15.0" fill="rgb(225,196,3)" rx="2" ry="2" />
<text  x="897.16" y="255.5" ></text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="87.7" y="613" width="0.2" height="15.0" fill="rgb(232,105,17)" rx="2" ry="2" />
<text  x="90.72" y="623.5" ></text>
</g>
<g >
<title>local_bh_enable (1 samples, 0.02%)</title><rect x="87.7" y="453" width="0.2" height="15.0" fill="rgb(236,53,7)" rx="2" ry="2" />
<text  x="90.72" y="463.5" ></text>
</g>
<g >
<title>__free_pages_ok (1 samples, 0.02%)</title><rect x="87.5" y="453" width="0.2" height="15.0" fill="rgb(225,53,48)" rx="2" ry="2" />
<text  x="90.52" y="463.5" ></text>
</g>
<g >
<title>postfix (94 samples, 1.58%)</title><rect x="728.0" y="245" width="18.6" height="15.0" fill="rgb(225,167,17)" rx="2" ry="2" />
<text  x="731.05" y="255.5" ></text>
</g>
<g >
<title>ip_queue_xmit (1 samples, 0.02%)</title><rect x="87.7" y="517" width="0.2" height="15.0" fill="rgb(217,60,37)" rx="2" ry="2" />
<text  x="90.72" y="527.5" ></text>
</g>
<g >
<title>bitand (50 samples, 0.84%)</title><rect x="1146.5" y="357" width="9.9" height="15.0" fill="rgb(227,224,47)" rx="2" ry="2" />
<text  x="1149.49" y="367.5" ></text>
</g>
<g >
<title>free_compound_page (1 samples, 0.02%)</title><rect x="87.5" y="469" width="0.2" height="15.0" fill="rgb(227,201,38)" rx="2" ry="2" />
<text  x="90.52" y="479.5" ></text>
</g>
<g >
<title>lalr_parse@plt (1 samples, 0.02%)</title><rect x="643.2" y="709" width="0.2" height="15.0" fill="rgb(228,49,19)" rx="2" ry="2" />
<text  x="646.21" y="719.5" ></text>
</g>
<g >
<title>decode_ms_req_msg (307 samples, 5.14%)</title><rect x="1127.5" y="709" width="60.7" height="15.0" fill="rgb(229,189,17)" rx="2" ry="2" />
<text  x="1130.51" y="719.5" >decode..</text>
</g>
<g >
<title>vfs_read (1 samples, 0.02%)</title><rect x="87.5" y="661" width="0.2" height="15.0" fill="rgb(222,79,0)" rx="2" ry="2" />
<text  x="90.52" y="671.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="88.1" y="469" width="0.2" height="15.0" fill="rgb(222,56,29)" rx="2" ry="2" />
<text  x="91.11" y="479.5" ></text>
</g>
<g >
<title>check_sql (1 samples, 0.02%)</title><rect x="82.4" y="549" width="0.2" height="15.0" fill="rgb(210,61,29)" rx="2" ry="2" />
<text  x="85.38" y="559.5" ></text>
</g>
<g >
<title>xmlBufGetNodeContent__internal_alias (475 samples, 7.96%)</title><rect x="490.3" y="485" width="94.0" height="15.0" fill="rgb(221,18,39)" rx="2" ry="2" />
<text  x="493.35" y="495.5" >xmlBufGetNo..</text>
</g>
<g >
<title>_check_sql (1 samples, 0.02%)</title><rect x="980.0" y="549" width="0.2" height="15.0" fill="rgb(220,148,16)" rx="2" ry="2" />
<text  x="982.98" y="559.5" ></text>
</g>
<g >
<title>std::string::_S_copy_chars (4 samples, 0.07%)</title><rect x="304.3" y="437" width="0.7" height="15.0" fill="rgb(224,41,9)" rx="2" ry="2" />
<text  x="307.26" y="447.5" ></text>
</g>
<g >
<title>__schedule (3 samples, 0.05%)</title><rect x="1189.4" y="597" width="0.6" height="15.0" fill="rgb(233,209,35)" rx="2" ry="2" />
<text  x="1192.41" y="607.5" ></text>
</g>
<g >
<title>__intel_pmu_enable_all.isra.12 (2 samples, 0.03%)</title><rect x="1188.2" y="517" width="0.4" height="15.0" fill="rgb(210,10,27)" rx="2" ry="2" />
<text  x="1191.22" y="527.5" ></text>
</g>
<g >
<title>_pcre_jit_exec (1 samples, 0.02%)</title><rect x="705.5" y="533" width="0.2" height="15.0" fill="rgb(212,87,52)" rx="2" ry="2" />
<text  x="708.50" y="543.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="135.8" y="421" width="0.4" height="15.0" fill="rgb(206,9,12)" rx="2" ry="2" />
<text  x="138.77" y="431.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1170.6" y="389" width="0.2" height="15.0" fill="rgb(214,92,11)" rx="2" ry="2" />
<text  x="1173.62" y="399.5" ></text>
</g>
<g >
<title>[libc.so.6] (48 samples, 0.80%)</title><rect x="420.1" y="389" width="9.5" height="15.0" fill="rgb(220,67,45)" rx="2" ry="2" />
<text  x="423.14" y="399.5" ></text>
</g>
<g >
<title>run_timer_softirq (1 samples, 0.02%)</title><rect x="1170.6" y="293" width="0.2" height="15.0" fill="rgb(245,4,6)" rx="2" ry="2" />
<text  x="1173.62" y="303.5" ></text>
</g>
<g >
<title>jsY_iswhite (6 samples, 0.10%)</title><rect x="1164.7" y="405" width="1.2" height="15.0" fill="rgb(233,116,52)" rx="2" ry="2" />
<text  x="1167.69" y="415.5" ></text>
</g>
<g >
<title>std::string::_M_copy (1 samples, 0.02%)</title><rect x="904.6" y="453" width="0.2" height="15.0" fill="rgb(227,86,53)" rx="2" ry="2" />
<text  x="907.64" y="463.5" ></text>
</g>
<g >
<title>send (1 samples, 0.02%)</title><rect x="1188.6" y="725" width="0.2" height="15.0" fill="rgb(223,57,21)" rx="2" ry="2" />
<text  x="1191.62" y="735.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="583.7" y="357" width="0.2" height="15.0" fill="rgb(227,47,29)" rx="2" ry="2" />
<text  x="586.69" y="367.5" ></text>
</g>
<g >
<title>process_frame_cb (2,520 samples, 42.23%)</title><rect x="91.5" y="645" width="498.3" height="15.0" fill="rgb(222,181,1)" rx="2" ry="2" />
<text  x="94.47" y="655.5" >process_frame_cb</text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="894.2" y="309" width="0.2" height="15.0" fill="rgb(233,8,2)" rx="2" ry="2" />
<text  x="897.16" y="319.5" ></text>
</g>
<g >
<title>native_write_msr_safe (1 samples, 0.02%)</title><rect x="85.1" y="469" width="0.2" height="15.0" fill="rgb(251,83,0)" rx="2" ry="2" />
<text  x="88.15" y="479.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="481.8" y="469" width="0.2" height="15.0" fill="rgb(217,192,41)" rx="2" ry="2" />
<text  x="484.84" y="479.5" ></text>
</g>
<g >
<title>ip_local_deliver (1 samples, 0.02%)</title><rect x="1188.8" y="293" width="0.2" height="15.0" fill="rgb(235,197,39)" rx="2" ry="2" />
<text  x="1191.81" y="303.5" ></text>
</g>
<g >
<title>do_futex (1 samples, 0.02%)</title><rect x="87.1" y="661" width="0.2" height="15.0" fill="rgb(223,80,13)" rx="2" ry="2" />
<text  x="90.12" y="671.5" ></text>
</g>
<g >
<title>modsecurity::RequestBodyProcessor::XML::complete (2 samples, 0.03%)</title><rect x="92.9" y="549" width="0.4" height="15.0" fill="rgb(227,192,31)" rx="2" ry="2" />
<text  x="95.86" y="559.5" ></text>
</g>
<g >
<title>std::string::size (9 samples, 0.15%)</title><rect x="264.1" y="453" width="1.8" height="15.0" fill="rgb(218,179,10)" rx="2" ry="2" />
<text  x="267.11" y="463.5" ></text>
</g>
<g >
<title>modsecurity::Variables::KeyExclusions::toOmit (1 samples, 0.02%)</title><rect x="939.4" y="565" width="0.2" height="15.0" fill="rgb(240,65,6)" rx="2" ry="2" />
<text  x="942.45" y="575.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_dispose (1 samples, 0.02%)</title><rect x="99.2" y="485" width="0.2" height="15.0" fill="rgb(238,145,39)" rx="2" ry="2" />
<text  x="102.19" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="88.1" y="501" width="0.2" height="15.0" fill="rgb(241,198,38)" rx="2" ry="2" />
<text  x="91.11" y="511.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.02%)</title><rect x="478.7" y="485" width="0.2" height="15.0" fill="rgb(242,9,40)" rx="2" ry="2" />
<text  x="481.68" y="495.5" ></text>
</g>
<g >
<title>std::vector&lt;std::string, std::allocator&lt;std::string&gt; &gt;::end (1 samples, 0.02%)</title><rect x="94.6" y="517" width="0.2" height="15.0" fill="rgb(225,145,43)" rx="2" ry="2" />
<text  x="97.64" y="527.5" ></text>
</g>
<g >
<title>call_softirq (1 samples, 0.02%)</title><rect x="1188.8" y="421" width="0.2" height="15.0" fill="rgb(253,118,0)" rx="2" ry="2" />
<text  x="1191.81" y="431.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irqsave (1 samples, 0.02%)</title><rect x="900.1" y="613" width="0.2" height="15.0" fill="rgb(224,54,54)" rx="2" ry="2" />
<text  x="903.09" y="623.5" ></text>
</g>
<g >
<title>sys_open (2 samples, 0.03%)</title><rect x="91.1" y="565" width="0.4" height="15.0" fill="rgb(211,81,3)" rx="2" ry="2" />
<text  x="94.08" y="575.5" ></text>
</g>
<g >
<title>vsnprintf (1 samples, 0.02%)</title><rect x="88.1" y="565" width="0.2" height="15.0" fill="rgb(231,118,36)" rx="2" ry="2" />
<text  x="91.11" y="575.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="92.7" y="517" width="0.2" height="15.0" fill="rgb(224,221,37)" rx="2" ry="2" />
<text  x="95.66" y="527.5" ></text>
</g>
<g >
<title>__perf_event_task_sched_in (2 samples, 0.03%)</title><rect x="1188.2" y="581" width="0.4" height="15.0" fill="rgb(216,19,23)" rx="2" ry="2" />
<text  x="1191.22" y="591.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="980.2" y="565" width="0.2" height="15.0" fill="rgb(236,75,51)" rx="2" ry="2" />
<text  x="983.18" y="575.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="1188.6" y="709" width="0.2" height="15.0" fill="rgb(239,183,18)" rx="2" ry="2" />
<text  x="1191.62" y="719.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="92.7" y="485" width="0.2" height="15.0" fill="rgb(243,77,12)" rx="2" ry="2" />
<text  x="95.66" y="495.5" ></text>
</g>
<g >
<title>xmlXPathCompMultiplicativeExpr (1 samples, 0.02%)</title><rect x="939.2" y="437" width="0.2" height="15.0" fill="rgb(240,38,41)" rx="2" ry="2" />
<text  x="942.25" y="447.5" ></text>
</g>
<g >
<title>jsY_lex (60 samples, 1.01%)</title><rect x="734.8" y="165" width="11.8" height="15.0" fill="rgb(253,226,2)" rx="2" ry="2" />
<text  x="737.77" y="175.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::UrlDecodeUni::inplace (579 samples, 9.70%)</title><rect x="305.2" y="485" width="114.5" height="15.0" fill="rgb(213,19,9)" rx="2" ry="2" />
<text  x="308.25" y="495.5" >modsecurity::a..</text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="454.0" y="469" width="0.2" height="15.0" fill="rgb(237,165,43)" rx="2" ry="2" />
<text  x="456.96" y="479.5" ></text>
</g>
<g >
<title>ep_ptable_queue_proc (1 samples, 0.02%)</title><rect x="900.1" y="645" width="0.2" height="15.0" fill="rgb(235,39,34)" rx="2" ry="2" />
<text  x="903.09" y="655.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="97.4" y="453" width="0.2" height="15.0" fill="rgb(209,6,51)" rx="2" ry="2" />
<text  x="100.41" y="463.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="489.8" y="453" width="0.1" height="15.0" fill="rgb(211,24,54)" rx="2" ry="2" />
<text  x="492.75" y="463.5" ></text>
</g>
<g >
<title>handle_mm_fault (3 samples, 0.05%)</title><rect x="429.0" y="309" width="0.6" height="15.0" fill="rgb(237,120,1)" rx="2" ry="2" />
<text  x="432.04" y="319.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (1 samples, 0.02%)</title><rect x="980.0" y="645" width="0.2" height="15.0" fill="rgb(233,154,4)" rx="2" ry="2" />
<text  x="982.98" y="655.5" ></text>
</g>
<g >
<title>get_pid_task (1 samples, 0.02%)</title><rect x="91.3" y="437" width="0.2" height="15.0" fill="rgb(212,128,0)" rx="2" ry="2" />
<text  x="94.28" y="447.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (2 samples, 0.03%)</title><rect x="980.0" y="693" width="0.4" height="15.0" fill="rgb(208,56,11)" rx="2" ry="2" />
<text  x="982.98" y="703.5" ></text>
</g>
<g >
<title>_raw_spin_lock_irq (1 samples, 0.02%)</title><rect x="86.9" y="629" width="0.2" height="15.0" fill="rgb(215,199,23)" rx="2" ry="2" />
<text  x="89.93" y="639.5" ></text>
</g>
<g >
<title>xmlHashCreate__internal_alias (1 samples, 0.02%)</title><rect x="1189.2" y="517" width="0.2" height="15.0" fill="rgb(254,159,11)" rx="2" ry="2" />
<text  x="1192.21" y="527.5" ></text>
</g>
<g >
<title>perf_pmu_disable (1 samples, 0.02%)</title><rect x="85.1" y="533" width="0.2" height="15.0" fill="rgb(208,95,13)" rx="2" ry="2" />
<text  x="88.15" y="543.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_sharable (8 samples, 0.13%)</title><rect x="291.8" y="437" width="1.6" height="15.0" fill="rgb(236,137,40)" rx="2" ry="2" />
<text  x="294.80" y="447.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="597.1" y="693" width="0.2" height="15.0" fill="rgb(211,57,48)" rx="2" ry="2" />
<text  x="600.13" y="703.5" ></text>
</g>
<g >
<title>HandleSeRequestSpod (984 samples, 16.49%)</title><rect x="705.5" y="709" width="194.6" height="15.0" fill="rgb(217,66,41)" rx="2" ry="2" />
<text  x="708.50" y="719.5" >HandleSeRequestSpod</text>
</g>
<g >
<title>modsecurity::Utils::regex_search (1 samples, 0.02%)</title><rect x="476.9" y="485" width="0.2" height="15.0" fill="rgb(239,205,54)" rx="2" ry="2" />
<text  x="479.90" y="495.5" ></text>
</g>
<g >
<title>jsY_next (18 samples, 0.30%)</title><rect x="848.7" y="149" width="3.5" height="15.0" fill="rgb(212,177,45)" rx="2" ry="2" />
<text  x="851.68" y="159.5" ></text>
</g>
<g >
<title>std::string::_M_rep (31 samples, 0.52%)</title><rect x="459.5" y="453" width="6.1" height="15.0" fill="rgb(229,25,13)" rx="2" ry="2" />
<text  x="462.50" y="463.5" ></text>
</g>
<g >
<title>xmlPatScanNCName (1 samples, 0.02%)</title><rect x="979.8" y="469" width="0.2" height="15.0" fill="rgb(244,41,35)" rx="2" ry="2" />
<text  x="982.79" y="479.5" ></text>
</g>
<g >
<title>epoll_wait (1 samples, 0.02%)</title><rect x="704.5" y="549" width="0.2" height="15.0" fill="rgb(228,21,52)" rx="2" ry="2" />
<text  x="707.51" y="559.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (737 samples, 12.35%)</title><rect x="980.4" y="693" width="145.7" height="15.0" fill="rgb(232,93,34)" rx="2" ry="2" />
<text  x="983.38" y="703.5" >modsecurity::Rule:..</text>
</g>
<g >
<title>modsecurity::actions::transformations::UrlDecodeUni::inplace (6 samples, 0.10%)</title><rect x="939.6" y="533" width="1.2" height="15.0" fill="rgb(221,116,0)" rx="2" ry="2" />
<text  x="942.64" y="543.5" ></text>
</g>
<g >
<title>std::string::_M_leak (37 samples, 0.62%)</title><rect x="296.5" y="469" width="7.4" height="15.0" fill="rgb(246,114,24)" rx="2" ry="2" />
<text  x="299.55" y="479.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="87.7" y="565" width="0.2" height="15.0" fill="rgb(252,124,38)" rx="2" ry="2" />
<text  x="90.72" y="575.5" ></text>
</g>
<g >
<title>std::string::operator+= (112 samples, 1.88%)</title><rect x="454.2" y="485" width="22.1" height="15.0" fill="rgb(223,72,26)" rx="2" ry="2" />
<text  x="457.16" y="495.5" >s..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="207.0" y="469" width="0.2" height="15.0" fill="rgb(211,228,24)" rx="2" ry="2" />
<text  x="209.96" y="479.5" ></text>
</g>
<g >
<title>[libc.so.6] (4 samples, 0.07%)</title><rect x="152.4" y="485" width="0.8" height="15.0" fill="rgb(215,31,28)" rx="2" ry="2" />
<text  x="155.38" y="495.5" ></text>
</g>
<g >
<title>std::string::push_back (126 samples, 2.11%)</title><rect x="271.6" y="469" width="24.9" height="15.0" fill="rgb(224,3,10)" rx="2" ry="2" />
<text  x="274.63" y="479.5" >s..</text>
</g>
<g >
<title>get_pageblock_flags_group (1 samples, 0.02%)</title><rect x="87.5" y="437" width="0.2" height="15.0" fill="rgb(231,13,19)" rx="2" ry="2" />
<text  x="90.52" y="447.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="489.8" y="421" width="0.1" height="15.0" fill="rgb(234,214,1)" rx="2" ry="2" />
<text  x="492.75" y="431.5" ></text>
</g>
<g >
<title>shift (140 samples, 2.35%)</title><rect x="718.9" y="309" width="27.7" height="15.0" fill="rgb(227,134,54)" rx="2" ry="2" />
<text  x="721.95" y="319.5" >s..</text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="148.6" y="485" width="0.2" height="15.0" fill="rgb(247,168,9)" rx="2" ry="2" />
<text  x="151.63" y="495.5" ></text>
</g>
<g >
<title>xmlFreeNodeList__internal_alias (1 samples, 0.02%)</title><rect x="88.3" y="549" width="0.2" height="15.0" fill="rgb(239,207,24)" rx="2" ry="2" />
<text  x="91.31" y="559.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="83.8" y="469" width="0.2" height="15.0" fill="rgb(210,17,2)" rx="2" ry="2" />
<text  x="86.76" y="479.5" ></text>
</g>
<g >
<title>std::vector&lt;modsecurity::Variables::Variable*, std::allocator&lt;modsecurity::Variables::Variable*&gt; &gt;::end (2 samples, 0.03%)</title><rect x="586.5" y="517" width="0.3" height="15.0" fill="rgb(229,136,29)" rx="2" ry="2" />
<text  x="589.45" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.1" y="485" width="0.2" height="15.0" fill="rgb(247,189,28)" rx="2" ry="2" />
<text  x="93.09" y="495.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="87.1" y="709" width="0.2" height="15.0" fill="rgb(240,115,9)" rx="2" ry="2" />
<text  x="90.12" y="719.5" ></text>
</g>
<g >
<title>to_string (1 samples, 0.02%)</title><rect x="980.2" y="629" width="0.2" height="15.0" fill="rgb(208,178,40)" rx="2" ry="2" />
<text  x="983.18" y="639.5" ></text>
</g>
<g >
<title>xmlXPathCompOpEval (1 samples, 0.02%)</title><rect x="899.9" y="549" width="0.2" height="15.0" fill="rgb(215,191,21)" rx="2" ry="2" />
<text  x="902.89" y="559.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="704.5" y="533" width="0.2" height="15.0" fill="rgb(225,205,10)" rx="2" ry="2" />
<text  x="707.51" y="543.5" ></text>
</g>
<g >
<title>inet_recvmsg (1 samples, 0.02%)</title><rect x="87.5" y="597" width="0.2" height="15.0" fill="rgb(224,218,35)" rx="2" ry="2" />
<text  x="90.52" y="607.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (1 samples, 0.02%)</title><rect x="82.4" y="613" width="0.2" height="15.0" fill="rgb(246,205,5)" rx="2" ry="2" />
<text  x="85.38" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Rb_tree_node&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::allocate (1 samples, 0.02%)</title><rect x="92.3" y="485" width="0.2" height="15.0" fill="rgb(219,26,6)" rx="2" ry="2" />
<text  x="95.27" y="495.5" ></text>
</g>
<g >
<title>xmlXPathTryStreamCompile (1 samples, 0.02%)</title><rect x="979.8" y="533" width="0.2" height="15.0" fill="rgb(238,197,36)" rx="2" ry="2" />
<text  x="982.79" y="543.5" ></text>
</g>
<g >
<title>modsecurity::Utils::Base64::decode_forgiven_engine (181 samples, 3.03%)</title><rect x="100.4" y="469" width="35.8" height="15.0" fill="rgb(223,206,26)" rx="2" ry="2" />
<text  x="103.37" y="479.5" >mod..</text>
</g>
<g >
<title>__netif_receive_skb (1 samples, 0.02%)</title><rect x="87.7" y="357" width="0.2" height="15.0" fill="rgb(221,188,27)" rx="2" ry="2" />
<text  x="90.72" y="367.5" ></text>
</g>
<g >
<title>__do_softirq (1 samples, 0.02%)</title><rect x="258.2" y="405" width="0.2" height="15.0" fill="rgb(244,202,35)" rx="2" ry="2" />
<text  x="261.18" y="415.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (307 samples, 5.14%)</title><rect x="1127.5" y="597" width="60.7" height="15.0" fill="rgb(216,118,25)" rx="2" ry="2" />
<text  x="1130.51" y="607.5" >modsec..</text>
</g>
<g >
<title>~_List_node (2 samples, 0.03%)</title><rect x="88.7" y="517" width="0.4" height="15.0" fill="rgb(243,162,50)" rx="2" ry="2" />
<text  x="91.71" y="527.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.02%)</title><rect x="980.2" y="581" width="0.2" height="15.0" fill="rgb(250,93,30)" rx="2" ry="2" />
<text  x="983.18" y="591.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.9" y="661" width="0.2" height="15.0" fill="rgb(209,183,38)" rx="2" ry="2" />
<text  x="690.90" y="671.5" ></text>
</g>
<g >
<title>modsecurity::Rules::evaluate (2 samples, 0.03%)</title><rect x="980.0" y="677" width="0.4" height="15.0" fill="rgb(225,12,14)" rx="2" ry="2" />
<text  x="982.98" y="687.5" ></text>
</g>
<g >
<title>statement (240 samples, 4.02%)</title><rect x="1140.8" y="485" width="47.4" height="15.0" fill="rgb(248,124,37)" rx="2" ry="2" />
<text  x="1143.76" y="495.5" >stat..</text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="831.7" y="213" width="0.2" height="15.0" fill="rgb(218,162,31)" rx="2" ry="2" />
<text  x="834.67" y="223.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="481.8" y="389" width="0.2" height="15.0" fill="rgb(236,163,51)" rx="2" ry="2" />
<text  x="484.84" y="399.5" ></text>
</g>
<g >
<title>std::string::_S_construct&lt;char const*&gt; (1 samples, 0.02%)</title><rect x="83.2" y="501" width="0.2" height="15.0" fill="rgb(230,180,1)" rx="2" ry="2" />
<text  x="86.17" y="511.5" ></text>
</g>
<g >
<title>__do_page_fault (3 samples, 0.05%)</title><rect x="429.0" y="325" width="0.6" height="15.0" fill="rgb(236,28,50)" rx="2" ry="2" />
<text  x="432.04" y="335.5" ></text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (8 samples, 0.13%)</title><rect x="147.0" y="453" width="1.6" height="15.0" fill="rgb(226,76,37)" rx="2" ry="2" />
<text  x="150.04" y="463.5" ></text>
</g>
<g >
<title>native_write_msr_safe (4 samples, 0.07%)</title><rect x="90.3" y="405" width="0.8" height="15.0" fill="rgb(239,110,9)" rx="2" ry="2" />
<text  x="93.29" y="415.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="454.0" y="437" width="0.2" height="15.0" fill="rgb(247,31,24)" rx="2" ry="2" />
<text  x="456.96" y="447.5" ></text>
</g>
<g >
<title>uninitialized_copy&lt;std::move_iterator&lt;modsecurity::VariableValue**&gt;, modsecurity::VariableValue**&gt; (1 samples, 0.02%)</title><rect x="96.6" y="437" width="0.2" height="15.0" fill="rgb(224,146,53)" rx="2" ry="2" />
<text  x="99.62" y="447.5" ></text>
</g>
<g >
<title>ep_send_events_proc (1 samples, 0.02%)</title><rect x="84.9" y="629" width="0.2" height="15.0" fill="rgb(211,85,44)" rx="2" ry="2" />
<text  x="87.95" y="639.5" ></text>
</g>
<g >
<title>HandleSeRequestSpod (176 samples, 2.95%)</title><rect x="904.6" y="661" width="34.8" height="15.0" fill="rgb(226,178,40)" rx="2" ry="2" />
<text  x="907.64" y="671.5" >Ha..</text>
</g>
<g >
<title>__schedule (1 samples, 0.02%)</title><rect x="87.1" y="597" width="0.2" height="15.0" fill="rgb(207,156,46)" rx="2" ry="2" />
<text  x="90.12" y="607.5" ></text>
</g>
<g >
<title>do_last (1 samples, 0.02%)</title><rect x="91.1" y="501" width="0.2" height="15.0" fill="rgb(250,58,15)" rx="2" ry="2" />
<text  x="94.08" y="511.5" ></text>
</g>
<g >
<title>~__shared_ptr (2 samples, 0.03%)</title><rect x="586.1" y="485" width="0.4" height="15.0" fill="rgb(252,158,9)" rx="2" ry="2" />
<text  x="589.06" y="495.5" ></text>
</g>
<g >
<title>std::string::operator+= (43 samples, 0.72%)</title><rect x="140.1" y="485" width="8.5" height="15.0" fill="rgb(250,221,0)" rx="2" ry="2" />
<text  x="143.12" y="495.5" ></text>
</g>
<g >
<title>schedule (1 samples, 0.02%)</title><rect x="87.1" y="613" width="0.2" height="15.0" fill="rgb(231,56,29)" rx="2" ry="2" />
<text  x="90.12" y="623.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="136.0" y="357" width="0.2" height="15.0" fill="rgb(250,77,32)" rx="2" ry="2" />
<text  x="138.97" y="367.5" ></text>
</g>
<g >
<title>skb_release_all (1 samples, 0.02%)</title><rect x="87.5" y="549" width="0.2" height="15.0" fill="rgb(220,2,15)" rx="2" ry="2" />
<text  x="90.52" y="559.5" ></text>
</g>
<g >
<title>event_process_active_single_queue.isra.31 (2,521 samples, 42.25%)</title><rect x="91.5" y="661" width="498.5" height="15.0" fill="rgb(229,21,7)" rx="2" ry="2" />
<text  x="94.47" y="671.5" >event_process_active_single_queue.isra.31</text>
</g>
<g >
<title>do_sync_read (1 samples, 0.02%)</title><rect x="87.5" y="645" width="0.2" height="15.0" fill="rgb(207,50,12)" rx="2" ry="2" />
<text  x="90.52" y="655.5" ></text>
</g>
<g >
<title>__normal_iterator (1 samples, 0.02%)</title><rect x="97.4" y="485" width="0.2" height="15.0" fill="rgb(238,149,14)" rx="2" ry="2" />
<text  x="100.41" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="589.4" y="501" width="0.2" height="15.0" fill="rgb(248,207,10)" rx="2" ry="2" />
<text  x="592.42" y="511.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="92.7" y="501" width="0.2" height="15.0" fill="rgb(242,156,28)" rx="2" ry="2" />
<text  x="95.66" y="511.5" ></text>
</g>
<g >
<title>multi_sql_check (7 samples, 0.12%)</title><rect x="698.0" y="709" width="1.4" height="15.0" fill="rgb(243,215,25)" rx="2" ry="2" />
<text  x="700.99" y="719.5" ></text>
</g>
<g >
<title>csharp_scan_bytes (12 samples, 0.20%)</title><rect x="904.8" y="485" width="2.4" height="15.0" fill="rgb(235,66,25)" rx="2" ry="2" />
<text  x="907.84" y="495.5" ></text>
</g>
<g >
<title>modsecurity::TransactionAnchoredVariables::~TransactionAnchoredVariables (4 samples, 0.07%)</title><rect x="88.5" y="629" width="0.8" height="15.0" fill="rgb(252,154,26)" rx="2" ry="2" />
<text  x="91.51" y="639.5" ></text>
</g>
<g >
<title>__uninitialized_copy_a&lt;std::move_iterator&lt;modsecurity::VariableValue**&gt;, modsecurity::VariableValue**, modsecurity::VariableValue*&gt; (1 samples, 0.02%)</title><rect x="96.6" y="453" width="0.2" height="15.0" fill="rgb(209,72,30)" rx="2" ry="2" />
<text  x="99.62" y="463.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (2 samples, 0.03%)</title><rect x="586.1" y="453" width="0.4" height="15.0" fill="rgb(238,175,28)" rx="2" ry="2" />
<text  x="589.06" y="463.5" ></text>
</g>
<g >
<title>newexp (105 samples, 1.76%)</title><rect x="831.9" y="229" width="20.7" height="15.0" fill="rgb(215,191,40)" rx="2" ry="2" />
<text  x="834.87" y="239.5" ></text>
</g>
<g >
<title>perf_pmu_enable (6 samples, 0.10%)</title><rect x="1126.3" y="581" width="1.2" height="15.0" fill="rgb(221,219,34)" rx="2" ry="2" />
<text  x="1129.32" y="591.5" ></text>
</g>
<g >
<title>xmlXPathNewParserContext__internal_alias (1 samples, 0.02%)</title><rect x="84.2" y="501" width="0.2" height="15.0" fill="rgb(224,189,8)" rx="2" ry="2" />
<text  x="87.16" y="511.5" ></text>
</g>
<g >
<title>do_softirq (1 samples, 0.02%)</title><rect x="1188.8" y="437" width="0.2" height="15.0" fill="rgb(215,199,43)" rx="2" ry="2" />
<text  x="1191.81" y="447.5" ></text>
</g>
<g >
<title>tcp_recvmsg (1 samples, 0.02%)</title><rect x="87.5" y="581" width="0.2" height="15.0" fill="rgb(230,6,33)" rx="2" ry="2" />
<text  x="90.52" y="591.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::addRequestHeader (1 samples, 0.02%)</title><rect x="589.6" y="549" width="0.2" height="15.0" fill="rgb(243,70,32)" rx="2" ry="2" />
<text  x="592.62" y="559.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.02%)</title><rect x="478.7" y="501" width="0.2" height="15.0" fill="rgb(210,228,35)" rx="2" ry="2" />
<text  x="481.68" y="511.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (2,514 samples, 42.13%)</title><rect x="92.5" y="581" width="497.1" height="15.0" fill="rgb(222,204,34)" rx="2" ry="2" />
<text  x="95.46" y="591.5" >handleHttpRequestBody</text>
</g>
<g >
<title>jsY_isidentifierstart (224 samples, 3.75%)</title><rect x="852.6" y="405" width="44.3" height="15.0" fill="rgb(225,176,31)" rx="2" ry="2" />
<text  x="855.63" y="415.5" >jsY_..</text>
</g>
<g >
<title>jsU_bsearch (63 samples, 1.06%)</title><rect x="854.0" y="373" width="12.5" height="15.0" fill="rgb(229,45,47)" rx="2" ry="2" />
<text  x="857.02" y="383.5" ></text>
</g>
<g >
<title>event_base_loop (10 samples, 0.17%)</title><rect x="83.0" y="693" width="1.9" height="15.0" fill="rgb(232,84,2)" rx="2" ry="2" />
<text  x="85.97" y="703.5" ></text>
</g>
<g >
<title>__tcp_push_pending_frames (1 samples, 0.02%)</title><rect x="1188.8" y="565" width="0.2" height="15.0" fill="rgb(209,11,4)" rx="2" ry="2" />
<text  x="1191.81" y="575.5" ></text>
</g>
<g >
<title>schedule (2 samples, 0.03%)</title><rect x="82.6" y="629" width="0.4" height="15.0" fill="rgb(245,198,28)" rx="2" ry="2" />
<text  x="85.58" y="639.5" ></text>
</g>
<g >
<title>xmlXPathEval__internal_alias (1 samples, 0.02%)</title><rect x="584.3" y="501" width="0.2" height="15.0" fill="rgb(224,0,1)" rx="2" ry="2" />
<text  x="587.28" y="511.5" ></text>
</g>
<g >
<title>task_tick_fair (1 samples, 0.02%)</title><rect x="207.0" y="325" width="0.2" height="15.0" fill="rgb(233,73,18)" rx="2" ry="2" />
<text  x="209.96" y="335.5" ></text>
</g>
<g >
<title>std::string::reserve (1 samples, 0.02%)</title><rect x="476.7" y="453" width="0.2" height="15.0" fill="rgb(237,49,41)" rx="2" ry="2" />
<text  x="479.70" y="463.5" ></text>
</g>
<g >
<title>event_base_loop (2,521 samples, 42.25%)</title><rect x="91.5" y="677" width="498.5" height="15.0" fill="rgb(251,57,52)" rx="2" ry="2" />
<text  x="94.47" y="687.5" >event_base_loop</text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="481.8" y="373" width="0.2" height="15.0" fill="rgb(223,171,44)" rx="2" ry="2" />
<text  x="484.84" y="383.5" ></text>
</g>
<g >
<title>el_scan_bytes (12 samples, 0.20%)</title><rect x="949.5" y="485" width="2.4" height="15.0" fill="rgb(231,5,12)" rx="2" ry="2" />
<text  x="952.53" y="495.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::UrlDecodeUni::evaluate (6 samples, 0.10%)</title><rect x="939.6" y="549" width="1.2" height="15.0" fill="rgb(224,132,35)" rx="2" ry="2" />
<text  x="942.64" y="559.5" ></text>
</g>
<g >
<title>modsecurity::AnchoredSetVariable::set (1 samples, 0.02%)</title><rect x="476.3" y="501" width="0.2" height="15.0" fill="rgb(213,97,43)" rx="2" ry="2" />
<text  x="479.30" y="511.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (20 samples, 0.34%)</title><rect x="900.7" y="645" width="3.9" height="15.0" fill="rgb(251,19,37)" rx="2" ry="2" />
<text  x="903.69" y="655.5" ></text>
</g>
<g >
<title>logand (164 samples, 2.75%)</title><rect x="820.2" y="421" width="32.4" height="15.0" fill="rgb(225,180,36)" rx="2" ry="2" />
<text  x="823.20" y="431.5" >lo..</text>
</g>
<g >
<title>jsU_bsearch (73 samples, 1.22%)</title><rect x="879.9" y="357" width="14.5" height="15.0" fill="rgb(242,196,5)" rx="2" ry="2" />
<text  x="882.92" y="367.5" ></text>
</g>
<g >
<title>plugin_spring_el_check (12 samples, 0.20%)</title><rect x="949.5" y="517" width="2.4" height="15.0" fill="rgb(226,99,34)" rx="2" ry="2" />
<text  x="952.53" y="527.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="99.2" y="469" width="0.2" height="15.0" fill="rgb(206,190,10)" rx="2" ry="2" />
<text  x="102.19" y="479.5" ></text>
</g>
<g >
<title>lex_and_parser (579 samples, 9.70%)</title><rect x="705.7" y="533" width="114.5" height="15.0" fill="rgb(213,149,52)" rx="2" ry="2" />
<text  x="708.70" y="543.5" >lex_and_parser</text>
</g>
<g >
<title>assignment (48 samples, 0.80%)</title><rect x="1128.1" y="437" width="9.5" height="15.0" fill="rgb(230,224,37)" rx="2" ry="2" />
<text  x="1131.10" y="447.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (9 samples, 0.15%)</title><rect x="97.6" y="517" width="1.8" height="15.0" fill="rgb(252,175,48)" rx="2" ry="2" />
<text  x="100.61" y="527.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="640.2" y="613" width="0.2" height="15.0" fill="rgb(216,181,37)" rx="2" ry="2" />
<text  x="643.24" y="623.5" ></text>
</g>
<g >
<title>MscResponseMgr::DeleteTimedOut (1 samples, 0.02%)</title><rect x="89.9" y="661" width="0.2" height="15.0" fill="rgb(236,57,36)" rx="2" ry="2" />
<text  x="92.89" y="671.5" ></text>
</g>
<g >
<title>tick_sched_timer (1 samples, 0.02%)</title><rect x="88.9" y="373" width="0.2" height="15.0" fill="rgb(215,186,44)" rx="2" ry="2" />
<text  x="91.90" y="383.5" ></text>
</g>
<g >
<title>php_memstr (107 samples, 1.79%)</title><rect x="915.1" y="485" width="21.2" height="15.0" fill="rgb(210,22,49)" rx="2" ry="2" />
<text  x="918.12" y="495.5" ></text>
</g>
<g >
<title>scheduler_tick (1 samples, 0.02%)</title><rect x="90.1" y="373" width="0.2" height="15.0" fill="rgb(229,197,40)" rx="2" ry="2" />
<text  x="93.09" y="383.5" ></text>
</g>
<g >
<title>xmlXPathRegisterAllFunctions__internal_alias (1 samples, 0.02%)</title><rect x="84.8" y="501" width="0.1" height="15.0" fill="rgb(208,208,26)" rx="2" ry="2" />
<text  x="87.75" y="511.5" ></text>
</g>
<g >
<title>__schedule (19 samples, 0.32%)</title><rect x="900.9" y="613" width="3.7" height="15.0" fill="rgb(232,15,17)" rx="2" ry="2" />
<text  x="903.88" y="623.5" ></text>
</g>
<g >
<title>_is_keywords@plt (2 samples, 0.03%)</title><rect x="702.3" y="693" width="0.4" height="15.0" fill="rgb(222,200,31)" rx="2" ry="2" />
<text  x="705.34" y="703.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (2 samples, 0.03%)</title><rect x="1189.0" y="597" width="0.4" height="15.0" fill="rgb(223,102,29)" rx="2" ry="2" />
<text  x="1192.01" y="607.5" ></text>
</g>
<g >
<title>apic_timer_interrupt (1 samples, 0.02%)</title><rect x="90.1" y="501" width="0.2" height="15.0" fill="rgb(238,7,11)" rx="2" ry="2" />
<text  x="93.09" y="511.5" ></text>
</g>
<g >
<title>system_call_fastpath (1 samples, 0.02%)</title><rect x="87.1" y="693" width="0.2" height="15.0" fill="rgb(223,127,28)" rx="2" ry="2" />
<text  x="90.12" y="703.5" ></text>
</g>
<g >
<title>[libc.so.6] (2 samples, 0.03%)</title><rect x="587.2" y="485" width="0.4" height="15.0" fill="rgb(237,22,27)" rx="2" ry="2" />
<text  x="590.24" y="495.5" ></text>
</g>
<g >
<title>MscFinalizeMgr::ProcessFinalize (10 samples, 0.17%)</title><rect x="87.9" y="661" width="2.0" height="15.0" fill="rgb(234,132,21)" rx="2" ry="2" />
<text  x="90.92" y="671.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="243.5" y="373" width="0.2" height="15.0" fill="rgb(244,129,8)" rx="2" ry="2" />
<text  x="246.55" y="383.5" ></text>
</g>
<g >
<title>decode_ms_req_msg (2 samples, 0.03%)</title><rect x="1189.0" y="661" width="0.4" height="15.0" fill="rgb(211,39,5)" rx="2" ry="2" />
<text  x="1192.01" y="671.5" ></text>
</g>
<g >
<title>__copy_move_a&lt;true, modsecurity::VariableValue**, modsecurity::VariableValue**&gt; (1 samples, 0.02%)</title><rect x="96.6" y="373" width="0.2" height="15.0" fill="rgb(249,147,12)" rx="2" ry="2" />
<text  x="99.62" y="383.5" ></text>
</g>
<g >
<title>equality (10 samples, 0.17%)</title><rect x="715.0" y="325" width="2.0" height="15.0" fill="rgb(239,58,16)" rx="2" ry="2" />
<text  x="717.99" y="335.5" ></text>
</g>
<g >
<title>perf_pmu_enable (1 samples, 0.02%)</title><rect x="88.9" y="293" width="0.2" height="15.0" fill="rgb(247,100,16)" rx="2" ry="2" />
<text  x="91.90" y="303.5" ></text>
</g>
<g >
<title>jsY_lex (3 samples, 0.05%)</title><rect x="947.4" y="421" width="0.5" height="15.0" fill="rgb(233,57,49)" rx="2" ry="2" />
<text  x="950.36" y="431.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="88.1" y="453" width="0.2" height="15.0" fill="rgb(221,45,5)" rx="2" ry="2" />
<text  x="91.11" y="463.5" ></text>
</g>
<g >
<title>modsecurity::RequestBodyProcessor::XML::~XML (1 samples, 0.02%)</title><rect x="88.3" y="629" width="0.2" height="15.0" fill="rgb(237,83,18)" rx="2" ry="2" />
<text  x="91.31" y="639.5" ></text>
</g>
<g >
<title>script (388 samples, 6.50%)</title><rect x="820.2" y="533" width="76.7" height="15.0" fill="rgb(254,26,34)" rx="2" ry="2" />
<text  x="823.20" y="543.5" >script</text>
</g>
<g >
<title>plugin_csharp_check (12 samples, 0.20%)</title><rect x="904.8" y="501" width="2.4" height="15.0" fill="rgb(247,188,40)" rx="2" ry="2" />
<text  x="907.84" y="511.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="207.0" y="357" width="0.2" height="15.0" fill="rgb(227,164,35)" rx="2" ry="2" />
<text  x="209.96" y="367.5" ></text>
</g>
<g >
<title>jsP_next (60 samples, 1.01%)</title><rect x="734.8" y="181" width="11.8" height="15.0" fill="rgb(234,37,50)" rx="2" ry="2" />
<text  x="737.77" y="191.5" ></text>
</g>
<g >
<title>system_call_fastpath (7 samples, 0.12%)</title><rect x="1126.1" y="709" width="1.4" height="15.0" fill="rgb(214,105,49)" rx="2" ry="2" />
<text  x="1129.13" y="719.5" ></text>
</g>
<g >
<title>scriptelement (240 samples, 4.02%)</title><rect x="1140.8" y="501" width="47.4" height="15.0" fill="rgb(217,221,20)" rx="2" ry="2" />
<text  x="1143.76" y="511.5" >scri..</text>
</g>
<g >
<title>expression (67 samples, 1.12%)</title><rect x="1127.5" y="453" width="13.3" height="15.0" fill="rgb(221,166,32)" rx="2" ry="2" />
<text  x="1130.51" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.02%)</title><rect x="303.9" y="469" width="0.2" height="15.0" fill="rgb(247,101,40)" rx="2" ry="2" />
<text  x="306.86" y="479.5" ></text>
</g>
<g >
<title>[libpthread.so.0] (10 samples, 0.17%)</title><rect x="83.0" y="725" width="1.9" height="15.0" fill="rgb(224,156,49)" rx="2" ry="2" />
<text  x="85.97" y="735.5" ></text>
</g>
<g >
<title>std::string::push_back (38 samples, 0.64%)</title><rect x="258.4" y="469" width="7.5" height="15.0" fill="rgb(209,210,45)" rx="2" ry="2" />
<text  x="261.38" y="479.5" ></text>
</g>
<g >
<title>modsecurity::actions::transformations::EscapeMSSeqDecode::ansi_c_sequences_decode_inplace (16 samples, 0.27%)</title><rect x="148.8" y="485" width="3.2" height="15.0" fill="rgb(247,60,33)" rx="2" ry="2" />
<text  x="151.82" y="495.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="589.4" y="469" width="0.2" height="15.0" fill="rgb(247,149,48)" rx="2" ry="2" />
<text  x="592.42" y="479.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="640.2" y="645" width="0.2" height="15.0" fill="rgb(229,220,25)" rx="2" ry="2" />
<text  x="643.24" y="655.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (307 samples, 5.14%)</title><rect x="1127.5" y="581" width="60.7" height="15.0" fill="rgb(242,188,16)" rx="2" ry="2" />
<text  x="1130.51" y="591.5" >modsec..</text>
</g>
<g >
<title>tcp_v4_rcv (1 samples, 0.02%)</title><rect x="1188.8" y="261" width="0.2" height="15.0" fill="rgb(230,172,33)" rx="2" ry="2" />
<text  x="1191.81" y="271.5" ></text>
</g>
<g >
<title>notifier_call_chain (1 samples, 0.02%)</title><rect x="687.9" y="517" width="0.2" height="15.0" fill="rgb(232,152,46)" rx="2" ry="2" />
<text  x="690.90" y="527.5" ></text>
</g>
<g >
<title>xmlXPathRegisterFunc__internal_alias (1 samples, 0.02%)</title><rect x="84.8" y="485" width="0.1" height="15.0" fill="rgb(214,129,45)" rx="2" ry="2" />
<text  x="87.75" y="495.5" ></text>
</g>
<g >
<title>epoll_wait (10 samples, 0.17%)</title><rect x="84.9" y="709" width="2.0" height="15.0" fill="rgb(244,44,35)" rx="2" ry="2" />
<text  x="87.95" y="719.5" ></text>
</g>
<g >
<title>jsY_lexx (48 samples, 0.80%)</title><rect x="842.7" y="165" width="9.5" height="15.0" fill="rgb(238,134,45)" rx="2" ry="2" />
<text  x="845.74" y="175.5" ></text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="476.5" y="469" width="0.2" height="15.0" fill="rgb(220,229,28)" rx="2" ry="2" />
<text  x="479.50" y="479.5" ></text>
</g>
<g >
<title>jsP_next (16 samples, 0.27%)</title><rect x="1137.6" y="437" width="3.2" height="15.0" fill="rgb(254,199,51)" rx="2" ry="2" />
<text  x="1140.60" y="447.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (7 samples, 0.12%)</title><rect x="97.8" y="501" width="1.4" height="15.0" fill="rgb(208,190,26)" rx="2" ry="2" />
<text  x="100.80" y="511.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::string, char&gt; (1 samples, 0.02%)</title><rect x="83.0" y="469" width="0.2" height="15.0" fill="rgb(241,46,3)" rx="2" ry="2" />
<text  x="85.97" y="479.5" ></text>
</g>
<g >
<title>modsecurity::VariableOrigin::toText (1 samples, 0.02%)</title><rect x="476.7" y="517" width="0.2" height="15.0" fill="rgb(246,106,19)" rx="2" ry="2" />
<text  x="479.70" y="527.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="1170.6" y="373" width="0.2" height="15.0" fill="rgb(208,14,33)" rx="2" ry="2" />
<text  x="1173.62" y="383.5" ></text>
</g>
<g >
<title>inode_permission (1 samples, 0.02%)</title><rect x="91.3" y="485" width="0.2" height="15.0" fill="rgb(239,70,5)" rx="2" ry="2" />
<text  x="94.28" y="495.5" ></text>
</g>
<g >
<title>lexnumber (330 samples, 5.53%)</title><rect x="754.9" y="405" width="65.3" height="15.0" fill="rgb(246,94,31)" rx="2" ry="2" />
<text  x="757.94" y="415.5" >lexnumber</text>
</g>
<g >
<title>[libc.so.6] (1 samples, 0.02%)</title><rect x="904.6" y="421" width="0.2" height="15.0" fill="rgb(220,205,44)" rx="2" ry="2" />
<text  x="907.64" y="431.5" ></text>
</g>
<g >
<title>ognllex (72 samples, 1.21%)</title><rect x="1110.9" y="565" width="14.2" height="15.0" fill="rgb(211,144,20)" rx="2" ry="2" />
<text  x="1113.90" y="575.5" ></text>
</g>
<g >
<title>__list_del_entry (1 samples, 0.02%)</title><rect x="429.4" y="213" width="0.2" height="15.0" fill="rgb(230,70,13)" rx="2" ry="2" />
<text  x="432.44" y="223.5" ></text>
</g>
<g >
<title>xmlHashFree__internal_alias (2 samples, 0.03%)</title><rect x="584.5" y="469" width="0.4" height="15.0" fill="rgb(213,202,29)" rx="2" ry="2" />
<text  x="587.48" y="479.5" ></text>
</g>
<g >
<title>handleHttpRequestBody (307 samples, 5.14%)</title><rect x="1127.5" y="661" width="60.7" height="15.0" fill="rgb(228,138,16)" rx="2" ry="2" />
<text  x="1130.51" y="671.5" >handle..</text>
</g>
<g >
<title>HandleSeRequestSpod (2 samples, 0.03%)</title><rect x="1189.0" y="645" width="0.4" height="15.0" fill="rgb(226,94,35)" rx="2" ry="2" />
<text  x="1192.01" y="655.5" ></text>
</g>
<g >
<title>hrtimer_nanosleep (7 samples, 0.12%)</title><rect x="1126.1" y="677" width="1.4" height="15.0" fill="rgb(247,127,41)" rx="2" ry="2" />
<text  x="1129.13" y="687.5" ></text>
</g>
<g >
<title>modsecurity::operators::Operator::evaluateInternal (197 samples, 3.30%)</title><rect x="940.8" y="565" width="39.0" height="15.0" fill="rgb(233,42,7)" rx="2" ry="2" />
<text  x="943.83" y="575.5" >mod..</text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="243.5" y="437" width="0.2" height="15.0" fill="rgb(235,71,31)" rx="2" ry="2" />
<text  x="246.55" y="447.5" ></text>
</g>
<g >
<title>xmlHashCreate__internal_alias (4 samples, 0.07%)</title><rect x="584.9" y="485" width="0.8" height="15.0" fill="rgb(215,22,53)" rx="2" ry="2" />
<text  x="587.87" y="495.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="687.9" y="677" width="0.2" height="15.0" fill="rgb(250,74,7)" rx="2" ry="2" />
<text  x="690.90" y="687.5" ></text>
</g>
<g >
<title>pthread_mutex_unlock (1 samples, 0.02%)</title><rect x="585.1" y="453" width="0.2" height="15.0" fill="rgb(248,135,37)" rx="2" ry="2" />
<text  x="588.07" y="463.5" ></text>
</g>
<g >
<title>modsecurity::Variables::XML::evaluate (553 samples, 9.27%)</title><rect x="477.1" y="517" width="109.4" height="15.0" fill="rgb(248,111,10)" rx="2" ry="2" />
<text  x="480.10" y="527.5" >modsecurity::..</text>
</g>
<g >
<title>do_sync_write (1 samples, 0.02%)</title><rect x="1188.8" y="645" width="0.2" height="15.0" fill="rgb(219,200,21)" rx="2" ry="2" />
<text  x="1191.81" y="655.5" ></text>
</g>
<g >
<title>jsY_isnewline@plt (2 samples, 0.03%)</title><rect x="1187.8" y="373" width="0.4" height="15.0" fill="rgb(221,61,53)" rx="2" ry="2" />
<text  x="1190.82" y="383.5" ></text>
</g>
<g >
<title>jsU_chartorune (4 samples, 0.07%)</title><rect x="850.3" y="133" width="0.7" height="15.0" fill="rgb(219,218,52)" rx="2" ry="2" />
<text  x="853.26" y="143.5" ></text>
</g>
<g >
<title>net_rx_action (1 samples, 0.02%)</title><rect x="87.7" y="389" width="0.2" height="15.0" fill="rgb(223,2,44)" rx="2" ry="2" />
<text  x="90.72" y="399.5" ></text>
</g>
<g >
<title>mutex_lock (1 samples, 0.02%)</title><rect x="900.3" y="645" width="0.2" height="15.0" fill="rgb(243,182,0)" rx="2" ry="2" />
<text  x="903.29" y="655.5" ></text>
</g>
<g >
<title>bitxor (60 samples, 1.01%)</title><rect x="1145.9" y="373" width="11.9" height="15.0" fill="rgb(251,113,42)" rx="2" ry="2" />
<text  x="1148.90" y="383.5" ></text>
</g>
<g >
<title>std::_Rb_tree&lt;long, std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt;, std::_Select1st&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt;, std::less&lt;long&gt;, std::allocator&lt;std::pair&lt;long const, modsecurity::Transaction::RuleCtrlType&gt; &gt; &gt;::_M_erase (1 samples, 0.02%)</title><rect x="89.7" y="453" width="0.2" height="15.0" fill="rgb(239,151,18)" rx="2" ry="2" />
<text  x="92.69" y="463.5" ></text>
</g>
<g >
<title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (57 samples, 0.96%)</title><rect x="478.9" y="501" width="11.2" height="15.0" fill="rgb(250,229,3)" rx="2" ry="2" />
<text  x="481.88" y="511.5" ></text>
</g>
<g >
<title>statement (67 samples, 1.12%)</title><rect x="1127.5" y="469" width="13.3" height="15.0" fill="rgb(212,61,17)" rx="2" ry="2" />
<text  x="1130.51" y="479.5" ></text>
</g>
<g >
<title>SYSC_sendto (1 samples, 0.02%)</title><rect x="1188.6" y="677" width="0.2" height="15.0" fill="rgb(240,96,30)" rx="2" ry="2" />
<text  x="1191.62" y="687.5" ></text>
</g>
<g >
<title>modsecurity::Rule::evaluate (307 samples, 5.14%)</title><rect x="1127.5" y="613" width="60.7" height="15.0" fill="rgb(215,65,7)" rx="2" ry="2" />
<text  x="1130.51" y="623.5" >modsec..</text>
</g>
<g >
<title>modsecurity::AnchoredSetVariable::resolve (3 samples, 0.05%)</title><rect x="96.4" y="517" width="0.6" height="15.0" fill="rgb(211,82,36)" rx="2" ry="2" />
<text  x="99.42" y="527.5" ></text>
</g>
<g >
<title>xmlXPathEvalExpr__internal_alias (1 samples, 0.02%)</title><rect x="84.0" y="501" width="0.2" height="15.0" fill="rgb(231,90,0)" rx="2" ry="2" />
<text  x="86.96" y="511.5" ></text>
</g>
<g >
<title>vfprintf (1 samples, 0.02%)</title><rect x="88.1" y="549" width="0.2" height="15.0" fill="rgb(246,128,31)" rx="2" ry="2" />
<text  x="91.11" y="559.5" ></text>
</g>
<g >
<title>jsY_lexx (224 samples, 3.75%)</title><rect x="852.6" y="437" width="44.3" height="15.0" fill="rgb(207,153,12)" rx="2" ry="2" />
<text  x="855.63" y="447.5" >jsY_..</text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (51 samples, 0.85%)</title><rect x="283.3" y="453" width="10.1" height="15.0" fill="rgb(246,65,8)" rx="2" ry="2" />
<text  x="286.30" y="463.5" ></text>
</g>
<g >
<title>jsP_next (4 samples, 0.07%)</title><rect x="947.2" y="437" width="0.7" height="15.0" fill="rgb(215,88,30)" rx="2" ry="2" />
<text  x="950.16" y="447.5" ></text>
</g>
<g >
<title>mutex_unlock (1 samples, 0.02%)</title><rect x="900.5" y="661" width="0.2" height="15.0" fill="rgb(233,139,19)" rx="2" ry="2" />
<text  x="903.49" y="671.5" ></text>
</g>
<g >
<title>[libpthread.so.0] (2,539 samples, 42.55%)</title><rect x="87.9" y="709" width="502.1" height="15.0" fill="rgb(229,127,29)" rx="2" ry="2" />
<text  x="90.92" y="719.5" >[libpthread.so.0]</text>
</g>
<g >
<title>std::string::_Rep::_M_set_length_and_sharable (34 samples, 0.57%)</title><rect x="465.6" y="453" width="6.7" height="15.0" fill="rgb(252,156,53)" rx="2" ry="2" />
<text  x="468.63" y="463.5" ></text>
</g>
<g >
<title>modsecurity::Utils::Regex::searchAll (1 samples, 0.02%)</title><rect x="705.5" y="565" width="0.2" height="15.0" fill="rgb(215,203,10)" rx="2" ry="2" />
<text  x="708.50" y="575.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (737 samples, 12.35%)</title><rect x="980.4" y="725" width="145.7" height="15.0" fill="rgb(224,208,7)" rx="2" ry="2" />
<text  x="983.38" y="735.5" >modsecurity::Trans..</text>
</g>
<g >
<title>std::string::assign (1 samples, 0.02%)</title><rect x="244.3" y="485" width="0.2" height="15.0" fill="rgb(228,172,2)" rx="2" ry="2" />
<text  x="247.34" y="495.5" ></text>
</g>
<g >
<title>local_apic_timer_interrupt (1 samples, 0.02%)</title><rect x="207.0" y="437" width="0.2" height="15.0" fill="rgb(238,11,40)" rx="2" ry="2" />
<text  x="209.96" y="447.5" ></text>
</g>
<g >
<title>schedule_hrtimeout_range_clock (9 samples, 0.15%)</title><rect x="85.1" y="629" width="1.8" height="15.0" fill="rgb(220,164,4)" rx="2" ry="2" />
<text  x="88.15" y="639.5" ></text>
</g>
<g >
<title>__wake_up_common (1 samples, 0.02%)</title><rect x="1188.8" y="165" width="0.2" height="15.0" fill="rgb(210,179,9)" rx="2" ry="2" />
<text  x="1191.81" y="175.5" ></text>
</g>
<g >
<title>sys_write (1 samples, 0.02%)</title><rect x="1188.8" y="677" width="0.2" height="15.0" fill="rgb(249,7,44)" rx="2" ry="2" />
<text  x="1191.81" y="687.5" ></text>
</g>
<g >
<title>x86_pmu_enable (1 samples, 0.02%)</title><rect x="88.9" y="277" width="0.2" height="15.0" fill="rgb(254,198,48)" rx="2" ry="2" />
<text  x="91.90" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;modsecurity::VariableValue*, std::allocator&lt;modsecurity::VariableValue*&gt; &gt;::push_back (2 samples, 0.03%)</title><rect x="96.6" y="501" width="0.4" height="15.0" fill="rgb(252,171,28)" rx="2" ry="2" />
<text  x="99.62" y="511.5" ></text>
</g>
<g >
<title>native_write_msr_safe (6 samples, 0.10%)</title><rect x="85.3" y="485" width="1.2" height="15.0" fill="rgb(214,183,45)" rx="2" ry="2" />
<text  x="88.34" y="495.5" ></text>
</g>
<g >
<title>ip_finish_output (1 samples, 0.02%)</title><rect x="1188.8" y="469" width="0.2" height="15.0" fill="rgb(211,194,44)" rx="2" ry="2" />
<text  x="1191.81" y="479.5" ></text>
</g>
<g >
<title>_pcre_jit_exec (1 samples, 0.02%)</title><rect x="939.4" y="501" width="0.2" height="15.0" fill="rgb(222,173,1)" rx="2" ry="2" />
<text  x="942.45" y="511.5" ></text>
</g>
<g >
<title>modsecurity::Rule::containsTag (2 samples, 0.03%)</title><rect x="97.2" y="517" width="0.4" height="15.0" fill="rgb(226,53,30)" rx="2" ry="2" />
<text  x="100.21" y="527.5" ></text>
</g>
<g >
<title>std::default_delete&lt;modsecurity::VariableOrigin&gt;::operator (2 samples, 0.03%)</title><rect x="88.7" y="485" width="0.4" height="15.0" fill="rgb(249,106,26)" rx="2" ry="2" />
<text  x="91.71" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="900.9" y="533" width="0.2" height="15.0" fill="rgb(222,154,8)" rx="2" ry="2" />
<text  x="903.88" y="543.5" ></text>
</g>
<g >
<title>decode_ms_req_msg (984 samples, 16.49%)</title><rect x="705.5" y="725" width="194.6" height="15.0" fill="rgb(211,182,25)" rx="2" ry="2" />
<text  x="708.50" y="735.5" >decode_ms_req_msg</text>
</g>
<g >
<title>modsecurity::Rules::evaluate (737 samples, 12.35%)</title><rect x="980.4" y="709" width="145.7" height="15.0" fill="rgb(251,4,18)" rx="2" ry="2" />
<text  x="983.38" y="719.5" >modsecurity::Rules..</text>
</g>
<g >
<title>rcu_report_qs_rnp (1 samples, 0.02%)</title><rect x="831.7" y="117" width="0.2" height="15.0" fill="rgb(222,162,6)" rx="2" ry="2" />
<text  x="834.67" y="127.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="243.5" y="405" width="0.2" height="15.0" fill="rgb(205,63,3)" rx="2" ry="2" />
<text  x="246.55" y="415.5" ></text>
</g>
<g >
<title>jsU_islowerrune (59 samples, 0.99%)</title><rect x="778.3" y="357" width="11.6" height="15.0" fill="rgb(216,111,31)" rx="2" ry="2" />
<text  x="781.28" y="367.5" ></text>
</g>
<g >
<title>modsecurity::Transaction::processRequestBody (205 samples, 3.44%)</title><rect x="939.4" y="629" width="40.6" height="15.0" fill="rgb(242,185,44)" rx="2" ry="2" />
<text  x="942.45" y="639.5" >mod..</text>
</g>
<g >
<title>vfs_write (1 samples, 0.02%)</title><rect x="86.9" y="661" width="0.2" height="15.0" fill="rgb(226,8,38)" rx="2" ry="2" />
<text  x="89.93" y="671.5" ></text>
</g>
<g >
<title>RunSpod (8 samples, 0.13%)</title><rect x="703.5" y="629" width="1.6" height="15.0" fill="rgb(210,208,38)" rx="2" ry="2" />
<text  x="706.52" y="639.5" ></text>
</g>
<g >
<title>[libc.so.6] (6 samples, 0.10%)</title><rect x="588.0" y="453" width="1.2" height="15.0" fill="rgb(215,169,22)" rx="2" ry="2" />
<text  x="591.04" y="463.5" ></text>
</g>
<g >
<title>modsecurity::operators::SWAFdetectObject::evaluate (1 samples, 0.02%)</title><rect x="82.4" y="597" width="0.2" height="15.0" fill="rgb(243,9,17)" rx="2" ry="2" />
<text  x="85.38" y="607.5" ></text>
</g>
<g >
<title>modsecurity::Rule::executeOperatorAt (1 samples, 0.02%)</title><rect x="1189.0" y="549" width="0.2" height="15.0" fill="rgb(250,65,4)" rx="2" ry="2" />
<text  x="1192.01" y="559.5" ></text>
</g>
<g >
<title>xmlXPathEvalExpr__internal_alias (1 samples, 0.02%)</title><rect x="584.3" y="485" width="0.2" height="15.0" fill="rgb(242,90,1)" rx="2" ry="2" />
<text  x="587.28" y="495.5" ></text>
</g>
<g >
<title>update_process_times (1 samples, 0.02%)</title><rect x="88.9" y="341" width="0.2" height="15.0" fill="rgb(206,3,20)" rx="2" ry="2" />
<text  x="91.90" y="351.5" ></text>
</g>
<g >
<title>hrtimer_interrupt (1 samples, 0.02%)</title><rect x="90.1" y="453" width="0.2" height="15.0" fill="rgb(233,13,40)" rx="2" ry="2" />
<text  x="93.09" y="463.5" ></text>
</g>
<g >
<title>event_base_loop (2 samples, 0.03%)</title><rect x="1189.0" y="709" width="0.4" height="15.0" fill="rgb(235,162,11)" rx="2" ry="2" />
<text  x="1192.01" y="719.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (2 samples, 0.03%)</title><rect x="1110.5" y="469" width="0.4" height="15.0" fill="rgb(249,186,46)" rx="2" ry="2" />
<text  x="1113.50" y="479.5" ></text>
</g>
<g >
<title>sys_fcntl (1 samples, 0.02%)</title><rect x="87.3" y="677" width="0.2" height="15.0" fill="rgb(220,201,50)" rx="2" ry="2" />
<text  x="90.32" y="687.5" ></text>
</g>
<g >
<title>xmlCompileStepPattern (1 samples, 0.02%)</title><rect x="979.8" y="485" width="0.2" height="15.0" fill="rgb(221,225,44)" rx="2" ry="2" />
<text  x="982.79" y="495.5" ></text>
</g>
<g >
<title>jsY_iswhite (3 samples, 0.05%)</title><rect x="848.1" y="149" width="0.6" height="15.0" fill="rgb(247,190,17)" rx="2" ry="2" />
<text  x="851.08" y="159.5" ></text>
</g>
<g >
<title>plugin_javascript_check (21 samples, 0.35%)</title><rect x="907.2" y="501" width="4.2" height="15.0" fill="rgb(220,128,24)" rx="2" ry="2" />
<text  x="910.21" y="511.5" ></text>
</g>
<g >
<title>ip_output (1 samples, 0.02%)</title><rect x="1188.8" y="485" width="0.2" height="15.0" fill="rgb(253,104,31)" rx="2" ry="2" />
<text  x="1191.81" y="495.5" ></text>
</g>
<g >
<title>modsecurity::AnchoredVariable::set (2 samples, 0.03%)</title><rect x="92.5" y="549" width="0.4" height="15.0" fill="rgb(229,59,32)" rx="2" ry="2" />
<text  x="95.46" y="559.5" ></text>
</g>
<g >
<title>callexp (14 samples, 0.23%)</title><rect x="730.6" y="213" width="2.8" height="15.0" fill="rgb(224,79,46)" rx="2" ry="2" />
<text  x="733.62" y="223.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="88.9" y="357" width="0.2" height="15.0" fill="rgb(220,178,16)" rx="2" ry="2" />
<text  x="91.90" y="367.5" ></text>
</g>
<g >
<title>std::string::_M_rep (20 samples, 0.34%)</title><rect x="279.3" y="453" width="4.0" height="15.0" fill="rgb(244,4,10)" rx="2" ry="2" />
<text  x="282.34" y="463.5" ></text>
</g>
<g >
<title>strnstr_copy (19 samples, 0.32%)</title><rect x="911.4" y="469" width="3.7" height="15.0" fill="rgb(224,32,12)" rx="2" ry="2" />
<text  x="914.36" y="479.5" ></text>
</g>
<g >
<title>xmlMalloc (3 samples, 0.05%)</title><rect x="1189.4" y="725" width="0.6" height="15.0" fill="rgb(223,9,14)" rx="2" ry="2" />
<text  x="1192.41" y="735.5" ></text>
</g>
<g >
<title>xmlPatterncompile__internal_alias (1 samples, 0.02%)</title><rect x="84.0" y="469" width="0.2" height="15.0" fill="rgb(209,106,37)" rx="2" ry="2" />
<text  x="86.96" y="479.5" ></text>
</g>
<g >
<title>callexp (132 samples, 2.21%)</title><rect x="826.5" y="245" width="26.1" height="15.0" fill="rgb(231,147,19)" rx="2" ry="2" />
<text  x="829.53" y="255.5" >c..</text>
</g>
<g >
<title>ip_local_deliver_finish (1 samples, 0.02%)</title><rect x="1188.8" y="277" width="0.2" height="15.0" fill="rgb(223,5,48)" rx="2" ry="2" />
<text  x="1191.81" y="287.5" ></text>
</g>
<g >
<title>expression (579 samples, 9.70%)</title><rect x="705.7" y="469" width="114.5" height="15.0" fill="rgb(229,31,7)" rx="2" ry="2" />
<text  x="708.70" y="479.5" >expression</text>
</g>
<g >
<title>ep_poll (1 samples, 0.02%)</title><rect x="704.5" y="501" width="0.2" height="15.0" fill="rgb(223,40,23)" rx="2" ry="2" />
<text  x="707.51" y="511.5" ></text>
</g>
<g >
<title>__intel_pmu_disable_all (1 samples, 0.02%)</title><rect x="85.1" y="485" width="0.2" height="15.0" fill="rgb(206,146,30)" rx="2" ry="2" />
<text  x="88.15" y="495.5" ></text>
</g>
<g >
<title>intel_pmu_enable_all (1 samples, 0.02%)</title><rect x="88.9" y="261" width="0.2" height="15.0" fill="rgb(232,104,23)" rx="2" ry="2" />
<text  x="91.90" y="271.5" ></text>
</g>
<g >
<title>sys_epoll_wait (3 samples, 0.05%)</title><rect x="703.9" y="533" width="0.6" height="15.0" fill="rgb(239,177,40)" rx="2" ry="2" />
<text  x="706.92" y="543.5" ></text>
</g>
<g >
<title>tick_sched_handle.isra.13 (1 samples, 0.02%)</title><rect x="207.0" y="373" width="0.2" height="15.0" fill="rgb(213,183,31)" rx="2" ry="2" />
<text  x="209.96" y="383.5" ></text>
</g>
<g >
<title>statement (579 samples, 9.70%)</title><rect x="705.7" y="485" width="114.5" height="15.0" fill="rgb(218,109,28)" rx="2" ry="2" />
<text  x="708.70" y="495.5" >statement</text>
</g>
<g >
<title>inet_sendmsg (1 samples, 0.02%)</title><rect x="1188.8" y="613" width="0.2" height="15.0" fill="rgb(208,88,29)" rx="2" ry="2" />
<text  x="1191.81" y="623.5" ></text>
</g>
<g >
<title>plugin_javascript_check (307 samples, 5.14%)</title><rect x="1127.5" y="533" width="60.7" height="15.0" fill="rgb(230,37,25)" rx="2" ry="2" />
<text  x="1130.51" y="543.5" >plugin..</text>
</g>
<g >
<title>isspace (1 samples, 0.02%)</title><rect x="304.1" y="485" width="0.2" height="15.0" fill="rgb(213,6,35)" rx="2" ry="2" />
<text  x="307.06" y="495.5" ></text>
</g>
<g >
<title>perf_pmu_enable (2 samples, 0.03%)</title><rect x="82.6" y="565" width="0.4" height="15.0" fill="rgb(235,102,13)" rx="2" ry="2" />
<text  x="85.58" y="575.5" ></text>
</g>
<g >
<title>plugin_javascript_check (967 samples, 16.21%)</title><rect x="705.7" y="549" width="191.2" height="15.0" fill="rgb(236,43,11)" rx="2" ry="2" />
<text  x="708.70" y="559.5" >plugin_javascript_check</text>
</g>
<g >
<title>modsecurity::Rule::evaluate (984 samples, 16.49%)</title><rect x="705.5" y="629" width="194.6" height="15.0" fill="rgb(225,22,25)" rx="2" ry="2" />
<text  x="708.50" y="639.5" >modsecurity::Rule::evaluate</text>
</g>
<g >
<title>finish_task_switch (1 samples, 0.02%)</title><rect x="87.1" y="581" width="0.2" height="15.0" fill="rgb(235,109,24)" rx="2" ry="2" />
<text  x="90.12" y="591.5" ></text>
</g>
<g >
<title>tcp_sendmsg (1 samples, 0.02%)</title><rect x="87.7" y="597" width="0.2" height="15.0" fill="rgb(215,109,38)" rx="2" ry="2" />
<text  x="90.72" y="607.5" ></text>
</g>
<g >
<title>cap_sock_graft (1 samples, 0.02%)</title><rect x="705.3" y="629" width="0.2" height="15.0" fill="rgb(225,167,34)" rx="2" ry="2" />
<text  x="708.30" y="639.5" ></text>
</g>
<g >
<title>smp_apic_timer_interrupt (2 samples, 0.03%)</title><rect x="135.8" y="437" width="0.4" height="15.0" fill="rgb(254,117,29)" rx="2" ry="2" />
<text  x="138.77" y="447.5" ></text>
</g>
<g >
<title>sys_nanosleep (7 samples, 0.12%)</title><rect x="1126.1" y="693" width="1.4" height="15.0" fill="rgb(251,44,13)" rx="2" ry="2" />
<text  x="1129.13" y="703.5" ></text>
</g>
<g >
<title>ep_scan_ready_list.isra.7 (1 samples, 0.02%)</title><rect x="704.5" y="485" width="0.2" height="15.0" fill="rgb(244,39,13)" rx="2" ry="2" />
<text  x="707.51" y="495.5" ></text>
</g>
<g >
<title>equality (161 samples, 2.70%)</title><rect x="714.8" y="341" width="31.8" height="15.0" fill="rgb(250,78,34)" rx="2" ry="2" />
<text  x="717.80" y="351.5" >eq..</text>
</g>
<g >
<title>php_pre_handle (1 samples, 0.02%)</title><rect x="936.3" y="485" width="0.2" height="15.0" fill="rgb(210,164,32)" rx="2" ry="2" />
<text  x="939.28" y="495.5" ></text>
</g>
<g >
<title>__hrtimer_run_queues (1 samples, 0.02%)</title><rect x="88.9" y="389" width="0.2" height="15.0" fill="rgb(210,209,36)" rx="2" ry="2" />
<text  x="91.90" y="399.5" ></text>
</g>
<g >
<title>bitxor (7 samples, 0.12%)</title><rect x="746.6" y="357" width="1.4" height="15.0" fill="rgb(211,220,47)" rx="2" ry="2" />
<text  x="749.63" y="367.5" ></text>
</g>
<g >
<title>process_backlog (1 samples, 0.02%)</title><rect x="1188.8" y="373" width="0.2" height="15.0" fill="rgb(244,5,41)" rx="2" ry="2" />
<text  x="1191.81" y="383.5" ></text>
</g>
</g>
</svg>
